[
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/rules?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 1,
            "start": 0,
            "limit": 100,
            "rules": [
                {
                    "id": "rul_RK5bxiG7dwT4qznc",
                    "enabled": true,
                    "script": "function (user, context, callback) {\n  callback(null, user, context);\n}\n",
                    "name": "my-rule",
                    "order": 2,
                    "stage": "login_success"
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/rules?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 1,
            "start": 0,
            "limit": 100,
            "rules": [
                {
                    "id": "rul_RK5bxiG7dwT4qznc",
                    "enabled": true,
                    "script": "function (user, context, callback) {\n  callback(null, user, context);\n}\n",
                    "name": "my-rule",
                    "order": 2,
                    "stage": "login_success"
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/rules/rul_RK5bxiG7dwT4qznc",
        "body": {
            "name": "my-rule",
            "script": "function (user, context, callback) {\n  callback(null, user, context);\n}\n",
            "enabled": true,
            "order": 2
        },
        "status": 200,
        "response": {
            "id": "rul_RK5bxiG7dwT4qznc",
            "enabled": true,
            "script": "function (user, context, callback) {\n  callback(null, user, context);\n}\n",
            "name": "my-rule",
            "order": 2,
            "stage": "login_success"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/hooks?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 0,
            "start": 0,
            "limit": 100,
            "hooks": []
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/hooks?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 0,
            "start": 0,
            "limit": 100,
            "hooks": []
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/clients?is_global=true&include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 1,
            "start": 0,
            "limit": 100,
            "clients": [
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": true,
                    "callbacks": [],
                    "is_first_party": true,
                    "name": "All Applications",
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "owners": [
                        "mr|samlp|okta|will.vedder@auth0.com",
                        "mr|google-oauth2|102002633619863830825"
                    ],
                    "custom_login_page": "<html>TEST123</html>\n",
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "Isi93ibGHIGwmdYjsLwTOn7Gu7nwxU3V",
                    "client_secret": "[REDACTED]",
                    "custom_login_page_on": true
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/clients/Isi93ibGHIGwmdYjsLwTOn7Gu7nwxU3V",
        "body": {
            "custom_login_page": "<html>TEST123</html>\n",
            "custom_login_page_on": true
        },
        "status": 200,
        "response": {
            "tenant": "auth0-deploy-cli-e2e",
            "global": true,
            "callbacks": [],
            "is_first_party": true,
            "name": "All Applications",
            "refresh_token": {
                "expiration_type": "non-expiring",
                "leeway": 0,
                "infinite_token_lifetime": true,
                "infinite_idle_token_lifetime": true,
                "token_lifetime": 2592000,
                "idle_token_lifetime": 1296000,
                "rotation_type": "non-rotating"
            },
            "owners": [
                "mr|samlp|okta|will.vedder@auth0.com",
                "mr|google-oauth2|102002633619863830825"
            ],
            "custom_login_page": "<html>TEST123</html>\n",
            "signing_keys": [
                {
                    "cert": "[REDACTED]",
                    "pkcs7": "[REDACTED]",
                    "subject": "/CN=auth0-deploy-cli-e2e.us.auth0.com"
                }
            ],
            "client_id": "Isi93ibGHIGwmdYjsLwTOn7Gu7nwxU3V",
            "client_secret": "[REDACTED]",
            "custom_login_page_on": true
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/tenants/settings",
        "body": {
            "error_page": {
                "html": "<html>Error Page</html>\n",
                "show_log_link": false,
                "url": "https://mycompany.org/error"
            },
            "guardian_mfa_page": {
                "enabled": true,
                "html": "<html>MFA</html>\n"
            },
            "change_password": {
                "enabled": true,
                "html": "<html>Change Password</html>\n"
            }
        },
        "status": 200,
        "response": {
            "allowed_logout_urls": [
                "https://mycompany.org/logoutCallback"
            ],
            "change_password": {
                "enabled": true,
                "html": "<html>Change Password</html>\n"
            },
            "enabled_locales": [
                "en"
            ],
            "error_page": {
                "html": "<html>Error Page</html>\n",
                "show_log_link": false,
                "url": "https://mycompany.org/error"
            },
            "flags": {
                "allow_changing_enable_sso": false,
                "allow_legacy_delegation_grant_types": true,
                "allow_legacy_ro_grant_types": true,
                "cannot_change_enforce_client_authentication_on_passwordless_start": true,
                "change_pwd_flow_v1": false,
                "disable_impersonation": true,
                "enable_apis_section": false,
                "enable_client_connections": false,
                "enable_custom_domain_in_emails": false,
                "enable_dynamic_client_registration": false,
                "enable_legacy_logs_search_v2": false,
                "enable_public_signup_user_exists_error": true,
                "enable_sso": true,
                "enforce_client_authentication_on_passwordless_start": true,
                "universal_login": true,
                "use_scope_descriptions_for_consent": false,
                "revoke_refresh_token_grant": false,
                "disable_clickjack_protection_headers": false,
                "enable_pipeline2": false
            },
            "friendly_name": "My Test Tenant",
            "guardian_mfa_page": {
                "enabled": true,
                "html": "<html>MFA</html>\n"
            },
            "idle_session_lifetime": 1,
            "picture_url": "https://upload.wikimedia.org/wikipedia/commons/0/0d/Grandmas_marathon_finishers.png",
            "sandbox_version": "12",
            "session_lifetime": 3.0166666666666666,
            "support_email": "support@mycompany.org",
            "support_url": "https://mycompany.org/support",
            "universal_login": {
                "colors": {
                    "primary": "#F8F8F2",
                    "page_background": "#222221"
                }
            },
            "session_cookie": {
                "mode": "non-persistent"
            }
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/resource-servers?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 1,
            "start": 0,
            "limit": 100,
            "resource_servers": [
                {
                    "id": "62debacc54b4171c0378ea1f",
                    "name": "Auth0 Management API",
                    "identifier": "https://auth0-deploy-cli-e2e.us.auth0.com/api/v2/",
                    "allow_offline_access": false,
                    "skip_consent_for_verifiable_first_party_clients": false,
                    "token_lifetime": 86400,
                    "token_lifetime_for_web": 7200,
                    "signing_alg": "RS256",
                    "scopes": [
                        {
                            "description": "Read Client Grants",
                            "value": "read:client_grants"
                        },
                        {
                            "description": "Create Client Grants",
                            "value": "create:client_grants"
                        },
                        {
                            "description": "Delete Client Grants",
                            "value": "delete:client_grants"
                        },
                        {
                            "description": "Update Client Grants",
                            "value": "update:client_grants"
                        },
                        {
                            "description": "Read Users",
                            "value": "read:users"
                        },
                        {
                            "description": "Update Users",
                            "value": "update:users"
                        },
                        {
                            "description": "Delete Users",
                            "value": "delete:users"
                        },
                        {
                            "description": "Create Users",
                            "value": "create:users"
                        },
                        {
                            "description": "Read Users App Metadata",
                            "value": "read:users_app_metadata"
                        },
                        {
                            "description": "Update Users App Metadata",
                            "value": "update:users_app_metadata"
                        },
                        {
                            "description": "Delete Users App Metadata",
                            "value": "delete:users_app_metadata"
                        },
                        {
                            "description": "Create Users App Metadata",
                            "value": "create:users_app_metadata"
                        },
                        {
                            "description": "Read Custom User Blocks",
                            "value": "read:user_custom_blocks"
                        },
                        {
                            "description": "Create Custom User Blocks",
                            "value": "create:user_custom_blocks"
                        },
                        {
                            "description": "Delete Custom User Blocks",
                            "value": "delete:user_custom_blocks"
                        },
                        {
                            "description": "Create User Tickets",
                            "value": "create:user_tickets"
                        },
                        {
                            "description": "Read Clients",
                            "value": "read:clients"
                        },
                        {
                            "description": "Update Clients",
                            "value": "update:clients"
                        },
                        {
                            "description": "Delete Clients",
                            "value": "delete:clients"
                        },
                        {
                            "description": "Create Clients",
                            "value": "create:clients"
                        },
                        {
                            "description": "Read Client Keys",
                            "value": "read:client_keys"
                        },
                        {
                            "description": "Update Client Keys",
                            "value": "update:client_keys"
                        },
                        {
                            "description": "Delete Client Keys",
                            "value": "delete:client_keys"
                        },
                        {
                            "description": "Create Client Keys",
                            "value": "create:client_keys"
                        },
                        {
                            "description": "Read Connections",
                            "value": "read:connections"
                        },
                        {
                            "description": "Update Connections",
                            "value": "update:connections"
                        },
                        {
                            "description": "Delete Connections",
                            "value": "delete:connections"
                        },
                        {
                            "description": "Create Connections",
                            "value": "create:connections"
                        },
                        {
                            "description": "Read Resource Servers",
                            "value": "read:resource_servers"
                        },
                        {
                            "description": "Update Resource Servers",
                            "value": "update:resource_servers"
                        },
                        {
                            "description": "Delete Resource Servers",
                            "value": "delete:resource_servers"
                        },
                        {
                            "description": "Create Resource Servers",
                            "value": "create:resource_servers"
                        },
                        {
                            "description": "Read Device Credentials",
                            "value": "read:device_credentials"
                        },
                        {
                            "description": "Update Device Credentials",
                            "value": "update:device_credentials"
                        },
                        {
                            "description": "Delete Device Credentials",
                            "value": "delete:device_credentials"
                        },
                        {
                            "description": "Create Device Credentials",
                            "value": "create:device_credentials"
                        },
                        {
                            "description": "Read Rules",
                            "value": "read:rules"
                        },
                        {
                            "description": "Update Rules",
                            "value": "update:rules"
                        },
                        {
                            "description": "Delete Rules",
                            "value": "delete:rules"
                        },
                        {
                            "description": "Create Rules",
                            "value": "create:rules"
                        },
                        {
                            "description": "Read Rules Configs",
                            "value": "read:rules_configs"
                        },
                        {
                            "description": "Update Rules Configs",
                            "value": "update:rules_configs"
                        },
                        {
                            "description": "Delete Rules Configs",
                            "value": "delete:rules_configs"
                        },
                        {
                            "description": "Read Hooks",
                            "value": "read:hooks"
                        },
                        {
                            "description": "Update Hooks",
                            "value": "update:hooks"
                        },
                        {
                            "description": "Delete Hooks",
                            "value": "delete:hooks"
                        },
                        {
                            "description": "Create Hooks",
                            "value": "create:hooks"
                        },
                        {
                            "description": "Read Actions",
                            "value": "read:actions"
                        },
                        {
                            "description": "Update Actions",
                            "value": "update:actions"
                        },
                        {
                            "description": "Delete Actions",
                            "value": "delete:actions"
                        },
                        {
                            "description": "Create Actions",
                            "value": "create:actions"
                        },
                        {
                            "description": "Read Email Provider",
                            "value": "read:email_provider"
                        },
                        {
                            "description": "Update Email Provider",
                            "value": "update:email_provider"
                        },
                        {
                            "description": "Delete Email Provider",
                            "value": "delete:email_provider"
                        },
                        {
                            "description": "Create Email Provider",
                            "value": "create:email_provider"
                        },
                        {
                            "description": "Blacklist Tokens",
                            "value": "blacklist:tokens"
                        },
                        {
                            "description": "Read Stats",
                            "value": "read:stats"
                        },
                        {
                            "description": "Read Insights",
                            "value": "read:insights"
                        },
                        {
                            "description": "Read Tenant Settings",
                            "value": "read:tenant_settings"
                        },
                        {
                            "description": "Update Tenant Settings",
                            "value": "update:tenant_settings"
                        },
                        {
                            "description": "Read Logs",
                            "value": "read:logs"
                        },
                        {
                            "description": "Read logs relating to users",
                            "value": "read:logs_users"
                        },
                        {
                            "description": "Read Shields",
                            "value": "read:shields"
                        },
                        {
                            "description": "Create Shields",
                            "value": "create:shields"
                        },
                        {
                            "description": "Update Shields",
                            "value": "update:shields"
                        },
                        {
                            "description": "Delete Shields",
                            "value": "delete:shields"
                        },
                        {
                            "description": "Read Anomaly Detection Blocks",
                            "value": "read:anomaly_blocks"
                        },
                        {
                            "description": "Delete Anomaly Detection Blocks",
                            "value": "delete:anomaly_blocks"
                        },
                        {
                            "description": "Update Triggers",
                            "value": "update:triggers"
                        },
                        {
                            "description": "Read Triggers",
                            "value": "read:triggers"
                        },
                        {
                            "description": "Read User Grants",
                            "value": "read:grants"
                        },
                        {
                            "description": "Delete User Grants",
                            "value": "delete:grants"
                        },
                        {
                            "description": "Read Guardian factors configuration",
                            "value": "read:guardian_factors"
                        },
                        {
                            "description": "Update Guardian factors",
                            "value": "update:guardian_factors"
                        },
                        {
                            "description": "Read Guardian enrollments",
                            "value": "read:guardian_enrollments"
                        },
                        {
                            "description": "Delete Guardian enrollments",
                            "value": "delete:guardian_enrollments"
                        },
                        {
                            "description": "Create enrollment tickets for Guardian",
                            "value": "create:guardian_enrollment_tickets"
                        },
                        {
                            "description": "Read Users IDP tokens",
                            "value": "read:user_idp_tokens"
                        },
                        {
                            "description": "Create password checking jobs",
                            "value": "create:passwords_checking_job"
                        },
                        {
                            "description": "Deletes password checking job and all its resources",
                            "value": "delete:passwords_checking_job"
                        },
                        {
                            "description": "Read custom domains configurations",
                            "value": "read:custom_domains"
                        },
                        {
                            "description": "Delete custom domains configurations",
                            "value": "delete:custom_domains"
                        },
                        {
                            "description": "Configure new custom domains",
                            "value": "create:custom_domains"
                        },
                        {
                            "description": "Update custom domain configurations",
                            "value": "update:custom_domains"
                        },
                        {
                            "description": "Read email templates",
                            "value": "read:email_templates"
                        },
                        {
                            "description": "Create email templates",
                            "value": "create:email_templates"
                        },
                        {
                            "description": "Update email templates",
                            "value": "update:email_templates"
                        },
                        {
                            "description": "Read Multifactor Authentication policies",
                            "value": "read:mfa_policies"
                        },
                        {
                            "description": "Update Multifactor Authentication policies",
                            "value": "update:mfa_policies"
                        },
                        {
                            "description": "Read roles",
                            "value": "read:roles"
                        },
                        {
                            "description": "Create roles",
                            "value": "create:roles"
                        },
                        {
                            "description": "Delete roles",
                            "value": "delete:roles"
                        },
                        {
                            "description": "Update roles",
                            "value": "update:roles"
                        },
                        {
                            "description": "Read prompts settings",
                            "value": "read:prompts"
                        },
                        {
                            "description": "Update prompts settings",
                            "value": "update:prompts"
                        },
                        {
                            "description": "Read branding settings",
                            "value": "read:branding"
                        },
                        {
                            "description": "Update branding settings",
                            "value": "update:branding"
                        },
                        {
                            "description": "Delete branding settings",
                            "value": "delete:branding"
                        },
                        {
                            "description": "Read log_streams",
                            "value": "read:log_streams"
                        },
                        {
                            "description": "Create log_streams",
                            "value": "create:log_streams"
                        },
                        {
                            "description": "Delete log_streams",
                            "value": "delete:log_streams"
                        },
                        {
                            "description": "Update log_streams",
                            "value": "update:log_streams"
                        },
                        {
                            "description": "Create signing keys",
                            "value": "create:signing_keys"
                        },
                        {
                            "description": "Read signing keys",
                            "value": "read:signing_keys"
                        },
                        {
                            "description": "Update signing keys",
                            "value": "update:signing_keys"
                        },
                        {
                            "description": "Read entity limits",
                            "value": "read:limits"
                        },
                        {
                            "description": "Update entity limits",
                            "value": "update:limits"
                        },
                        {
                            "description": "Create role members",
                            "value": "create:role_members"
                        },
                        {
                            "description": "Read role members",
                            "value": "read:role_members"
                        },
                        {
                            "description": "Update role members",
                            "value": "delete:role_members"
                        },
                        {
                            "description": "Read entitlements",
                            "value": "read:entitlements"
                        },
                        {
                            "description": "Read attack protection",
                            "value": "read:attack_protection"
                        },
                        {
                            "description": "Update attack protection",
                            "value": "update:attack_protection"
                        },
                        {
                            "description": "Read Organizations",
                            "value": "read:organizations"
                        },
                        {
                            "description": "Update Organizations",
                            "value": "update:organizations"
                        },
                        {
                            "description": "Create Organizations",
                            "value": "create:organizations"
                        },
                        {
                            "description": "Delete Organizations",
                            "value": "delete:organizations"
                        },
                        {
                            "description": "Create organization members",
                            "value": "create:organization_members"
                        },
                        {
                            "description": "Read organization members",
                            "value": "read:organization_members"
                        },
                        {
                            "description": "Delete organization members",
                            "value": "delete:organization_members"
                        },
                        {
                            "description": "Create organization connections",
                            "value": "create:organization_connections"
                        },
                        {
                            "description": "Read organization connections",
                            "value": "read:organization_connections"
                        },
                        {
                            "description": "Update organization connections",
                            "value": "update:organization_connections"
                        },
                        {
                            "description": "Delete organization connections",
                            "value": "delete:organization_connections"
                        },
                        {
                            "description": "Create organization member roles",
                            "value": "create:organization_member_roles"
                        },
                        {
                            "description": "Read organization member roles",
                            "value": "read:organization_member_roles"
                        },
                        {
                            "description": "Delete organization member roles",
                            "value": "delete:organization_member_roles"
                        },
                        {
                            "description": "Create organization invitations",
                            "value": "create:organization_invitations"
                        },
                        {
                            "description": "Read organization invitations",
                            "value": "read:organization_invitations"
                        },
                        {
                            "description": "Delete organization invitations",
                            "value": "delete:organization_invitations"
                        },
                        {
                            "description": "Read organization summary",
                            "value": "read:organizations_summary"
                        },
                        {
                            "description": "Create Actions Log Sessions",
                            "value": "create:actions_log_sessions"
                        },
                        {
                            "description": "Create Authentication Methods",
                            "value": "create:authentication_methods"
                        },
                        {
                            "description": "Read Authentication Methods",
                            "value": "read:authentication_methods"
                        },
                        {
                            "description": "Update Authentication Methods",
                            "value": "update:authentication_methods"
                        },
                        {
                            "description": "Delete Authentication Methods",
                            "value": "delete:authentication_methods"
                        },
                        {
                            "value": "read:client_credentials",
                            "description": "Read Client Credentials"
                        },
                        {
                            "value": "create:client_credentials",
                            "description": "Create Client Credentials"
                        },
                        {
                            "value": "update:client_credentials",
                            "description": "Update Client Credentials"
                        },
                        {
                            "value": "delete:client_credentials",
                            "description": "delete Client Credentials"
                        }
                    ],
                    "is_system": true
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/clients?include_totals=true&is_global=false&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 10,
            "start": 0,
            "limit": 100,
            "clients": [
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Deploy CLI",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "GIW99EUCF9DFExh77WPMyTMzT8NN4J3A",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Default App",
                    "callbacks": [],
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "atJgSaHiaVxlUqySuoGzjrQrEGLSZYxK",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Auth0 CLI - dev",
                    "allowed_clients": [],
                    "callbacks": [],
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "logo_uri": "https://dev.assets.com/photos/foo",
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "oidc_conformant": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "hP7jzZfxv52R8Y7am0U4GND4kfzMSjD3",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "API Explorer Application",
                    "allowed_clients": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "XU0w5uRFW1SqpUhj2jbCSw8frIzLm0Sy",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Quickstarts API (Test Application)",
                    "client_metadata": {
                        "foo": "bar"
                    },
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "SGGydPjIPyKng0FSsuQlibOiw8ommNEY",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Node App",
                    "allowed_clients": [],
                    "allowed_logout_urls": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "allowed_origins": [],
                    "client_id": "1vm5ohgMsawRxt6Fa6Npk1UYJ1l2nuvE",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "regular_web",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "web_origins": [],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "The Default App",
                    "allowed_clients": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "sso": false,
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "YSecmXJKthxfPEeSdw9MmHYvKirQMDaJ",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Terraform Provider",
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "HExWXv0uOuIIXQnS9r5nwJxA5m1I6sGb",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Test SPA",
                    "allowed_clients": [],
                    "allowed_logout_urls": [
                        "http://localhost:3000"
                    ],
                    "callbacks": [
                        "http://localhost:3000"
                    ],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "expiring",
                        "leeway": 0,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "infinite_token_lifetime": false,
                        "infinite_idle_token_lifetime": false,
                        "rotation_type": "rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "3B10Z0hTUMzznwvs7wloxqEbCtFmBdH4",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "none",
                    "app_type": "spa",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token"
                    ],
                    "web_origins": [
                        "http://localhost:3000"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "auth0-deploy-cli-extension",
                    "allowed_clients": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "QzMkcMQ8CCVt4Xxe032vVWVUbRe2Yc9X",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "DELETE",
        "path": "/api/v2/clients/atJgSaHiaVxlUqySuoGzjrQrEGLSZYxK",
        "body": {},
        "status": 204,
        "response": "",
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "DELETE",
        "path": "/api/v2/clients/hP7jzZfxv52R8Y7am0U4GND4kfzMSjD3",
        "body": {},
        "status": 204,
        "response": "",
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/clients/1vm5ohgMsawRxt6Fa6Npk1UYJ1l2nuvE",
        "body": {
            "name": "Node App",
            "allowed_clients": [],
            "allowed_logout_urls": [],
            "allowed_origins": [],
            "app_type": "regular_web",
            "callbacks": [],
            "client_aliases": [],
            "client_metadata": {},
            "cross_origin_auth": false,
            "custom_login_page_on": true,
            "grant_types": [
                "authorization_code",
                "implicit",
                "refresh_token",
                "client_credentials"
            ],
            "is_first_party": true,
            "is_token_endpoint_ip_header_trusted": false,
            "jwt_configuration": {
                "alg": "RS256",
                "lifetime_in_seconds": 36000
            },
            "native_social_login": {
                "apple": {
                    "enabled": false
                },
                "facebook": {
                    "enabled": false
                }
            },
            "oidc_conformant": true,
            "refresh_token": {
                "expiration_type": "non-expiring",
                "leeway": 0,
                "infinite_token_lifetime": true,
                "infinite_idle_token_lifetime": true,
                "token_lifetime": 31557600,
                "idle_token_lifetime": 2592000,
                "rotation_type": "non-rotating"
            },
            "sso_disabled": false,
            "token_endpoint_auth_method": "client_secret_post",
            "web_origins": []
        },
        "status": 200,
        "response": {
            "tenant": "auth0-deploy-cli-e2e",
            "global": false,
            "is_token_endpoint_ip_header_trusted": false,
            "name": "Node App",
            "allowed_clients": [],
            "allowed_logout_urls": [],
            "callbacks": [],
            "client_metadata": {},
            "cross_origin_auth": false,
            "is_first_party": true,
            "native_social_login": {
                "apple": {
                    "enabled": false
                },
                "facebook": {
                    "enabled": false
                }
            },
            "oidc_conformant": true,
            "refresh_token": {
                "expiration_type": "non-expiring",
                "leeway": 0,
                "infinite_token_lifetime": true,
                "infinite_idle_token_lifetime": true,
                "token_lifetime": 31557600,
                "idle_token_lifetime": 2592000,
                "rotation_type": "non-rotating"
            },
            "sso_disabled": false,
            "signing_keys": [
                {
                    "cert": "[REDACTED]",
                    "pkcs7": "[REDACTED]",
                    "subject": "/CN=auth0-deploy-cli-e2e.us.auth0.com"
                }
            ],
            "allowed_origins": [],
            "client_id": "1vm5ohgMsawRxt6Fa6Npk1UYJ1l2nuvE",
            "callback_url_template": false,
            "client_secret": "[REDACTED]",
            "jwt_configuration": {
                "alg": "RS256",
                "lifetime_in_seconds": 36000,
                "secret_encoded": false
            },
            "client_aliases": [],
            "token_endpoint_auth_method": "client_secret_post",
            "app_type": "regular_web",
            "grant_types": [
                "authorization_code",
                "implicit",
                "refresh_token",
                "client_credentials"
            ],
            "web_origins": [],
            "custom_login_page_on": true
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/clients/XU0w5uRFW1SqpUhj2jbCSw8frIzLm0Sy",
        "body": {
            "name": "API Explorer Application",
            "allowed_clients": [],
            "app_type": "non_interactive",
            "callbacks": [],
            "client_aliases": [],
            "client_metadata": {},
            "cross_origin_auth": false,
            "custom_login_page_on": true,
            "grant_types": [
                "client_credentials"
            ],
            "is_first_party": true,
            "is_token_endpoint_ip_header_trusted": false,
            "jwt_configuration": {
                "alg": "RS256",
                "lifetime_in_seconds": 36000
            },
            "native_social_login": {
                "apple": {
                    "enabled": false
                },
                "facebook": {
                    "enabled": false
                }
            },
            "oidc_conformant": true,
            "refresh_token": {
                "expiration_type": "non-expiring",
                "leeway": 0,
                "infinite_token_lifetime": true,
                "infinite_idle_token_lifetime": true,
                "token_lifetime": 31557600,
                "idle_token_lifetime": 2592000,
                "rotation_type": "non-rotating"
            },
            "sso_disabled": false,
            "token_endpoint_auth_method": "client_secret_post"
        },
        "status": 200,
        "response": {
            "tenant": "auth0-deploy-cli-e2e",
            "global": false,
            "is_token_endpoint_ip_header_trusted": false,
            "name": "API Explorer Application",
            "allowed_clients": [],
            "callbacks": [],
            "client_metadata": {},
            "cross_origin_auth": false,
            "is_first_party": true,
            "native_social_login": {
                "apple": {
                    "enabled": false
                },
                "facebook": {
                    "enabled": false
                }
            },
            "oidc_conformant": true,
            "refresh_token": {
                "expiration_type": "non-expiring",
                "leeway": 0,
                "infinite_token_lifetime": true,
                "infinite_idle_token_lifetime": true,
                "token_lifetime": 31557600,
                "idle_token_lifetime": 2592000,
                "rotation_type": "non-rotating"
            },
            "sso_disabled": false,
            "signing_keys": [
                {
                    "cert": "[REDACTED]",
                    "pkcs7": "[REDACTED]",
                    "subject": "/CN=auth0-deploy-cli-e2e.us.auth0.com"
                }
            ],
            "client_id": "XU0w5uRFW1SqpUhj2jbCSw8frIzLm0Sy",
            "callback_url_template": false,
            "client_secret": "[REDACTED]",
            "jwt_configuration": {
                "alg": "RS256",
                "lifetime_in_seconds": 36000,
                "secret_encoded": false
            },
            "client_aliases": [],
            "token_endpoint_auth_method": "client_secret_post",
            "app_type": "non_interactive",
            "grant_types": [
                "client_credentials"
            ],
            "custom_login_page_on": true
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/clients/SGGydPjIPyKng0FSsuQlibOiw8ommNEY",
        "body": {
            "name": "Quickstarts API (Test Application)",
            "app_type": "non_interactive",
            "client_metadata": {
                "foo": "bar"
            },
            "cross_origin_auth": false,
            "custom_login_page_on": true,
            "grant_types": [
                "client_credentials"
            ],
            "is_first_party": true,
            "is_token_endpoint_ip_header_trusted": false,
            "jwt_configuration": {
                "alg": "RS256",
                "lifetime_in_seconds": 36000
            },
            "oidc_conformant": true,
            "refresh_token": {
                "expiration_type": "non-expiring",
                "leeway": 0,
                "infinite_token_lifetime": true,
                "infinite_idle_token_lifetime": true,
                "token_lifetime": 31557600,
                "idle_token_lifetime": 2592000,
                "rotation_type": "non-rotating"
            },
            "sso_disabled": false,
            "token_endpoint_auth_method": "client_secret_post"
        },
        "status": 200,
        "response": {
            "tenant": "auth0-deploy-cli-e2e",
            "global": false,
            "is_token_endpoint_ip_header_trusted": false,
            "name": "Quickstarts API (Test Application)",
            "client_metadata": {
                "foo": "bar"
            },
            "cross_origin_auth": false,
            "is_first_party": true,
            "oidc_conformant": true,
            "refresh_token": {
                "expiration_type": "non-expiring",
                "leeway": 0,
                "infinite_token_lifetime": true,
                "infinite_idle_token_lifetime": true,
                "token_lifetime": 31557600,
                "idle_token_lifetime": 2592000,
                "rotation_type": "non-rotating"
            },
            "sso_disabled": false,
            "signing_keys": [
                {
                    "cert": "[REDACTED]",
                    "pkcs7": "[REDACTED]",
                    "subject": "/CN=auth0-deploy-cli-e2e.us.auth0.com"
                }
            ],
            "client_id": "SGGydPjIPyKng0FSsuQlibOiw8ommNEY",
            "callback_url_template": false,
            "client_secret": "[REDACTED]",
            "jwt_configuration": {
                "alg": "RS256",
                "lifetime_in_seconds": 36000,
                "secret_encoded": false
            },
            "token_endpoint_auth_method": "client_secret_post",
            "app_type": "non_interactive",
            "grant_types": [
                "client_credentials"
            ],
            "custom_login_page_on": true
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/clients/HExWXv0uOuIIXQnS9r5nwJxA5m1I6sGb",
        "body": {
            "name": "Terraform Provider",
            "app_type": "non_interactive",
            "cross_origin_auth": false,
            "custom_login_page_on": true,
            "grant_types": [
                "client_credentials"
            ],
            "is_first_party": true,
            "is_token_endpoint_ip_header_trusted": false,
            "jwt_configuration": {
                "alg": "RS256",
                "lifetime_in_seconds": 36000
            },
            "oidc_conformant": true,
            "refresh_token": {
                "expiration_type": "non-expiring",
                "leeway": 0,
                "infinite_token_lifetime": true,
                "infinite_idle_token_lifetime": true,
                "token_lifetime": 31557600,
                "idle_token_lifetime": 2592000,
                "rotation_type": "non-rotating"
            },
            "sso_disabled": false,
            "token_endpoint_auth_method": "client_secret_post"
        },
        "status": 200,
        "response": {
            "tenant": "auth0-deploy-cli-e2e",
            "global": false,
            "is_token_endpoint_ip_header_trusted": false,
            "name": "Terraform Provider",
            "cross_origin_auth": false,
            "is_first_party": true,
            "oidc_conformant": true,
            "refresh_token": {
                "expiration_type": "non-expiring",
                "leeway": 0,
                "infinite_token_lifetime": true,
                "infinite_idle_token_lifetime": true,
                "token_lifetime": 31557600,
                "idle_token_lifetime": 2592000,
                "rotation_type": "non-rotating"
            },
            "sso_disabled": false,
            "signing_keys": [
                {
                    "cert": "[REDACTED]",
                    "pkcs7": "[REDACTED]",
                    "subject": "/CN=auth0-deploy-cli-e2e.us.auth0.com"
                }
            ],
            "client_id": "HExWXv0uOuIIXQnS9r5nwJxA5m1I6sGb",
            "callback_url_template": false,
            "client_secret": "[REDACTED]",
            "jwt_configuration": {
                "alg": "RS256",
                "lifetime_in_seconds": 36000,
                "secret_encoded": false
            },
            "token_endpoint_auth_method": "client_secret_post",
            "app_type": "non_interactive",
            "grant_types": [
                "client_credentials"
            ],
            "custom_login_page_on": true
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/clients/YSecmXJKthxfPEeSdw9MmHYvKirQMDaJ",
        "body": {
            "name": "The Default App",
            "allowed_clients": [],
            "callbacks": [],
            "client_aliases": [],
            "client_metadata": {},
            "cross_origin_auth": false,
            "custom_login_page_on": true,
            "grant_types": [
                "authorization_code",
                "implicit",
                "refresh_token",
                "client_credentials"
            ],
            "is_first_party": true,
            "is_token_endpoint_ip_header_trusted": false,
            "jwt_configuration": {
                "alg": "RS256",
                "lifetime_in_seconds": 36000
            },
            "native_social_login": {
                "apple": {
                    "enabled": false
                },
                "facebook": {
                    "enabled": false
                }
            },
            "oidc_conformant": false,
            "refresh_token": {
                "expiration_type": "non-expiring",
                "leeway": 0,
                "infinite_token_lifetime": true,
                "infinite_idle_token_lifetime": true,
                "token_lifetime": 2592000,
                "idle_token_lifetime": 1296000,
                "rotation_type": "non-rotating"
            },
            "sso": false,
            "sso_disabled": false,
            "token_endpoint_auth_method": "client_secret_post"
        },
        "status": 200,
        "response": {
            "tenant": "auth0-deploy-cli-e2e",
            "global": false,
            "is_token_endpoint_ip_header_trusted": false,
            "name": "The Default App",
            "allowed_clients": [],
            "callbacks": [],
            "client_metadata": {},
            "cross_origin_auth": false,
            "is_first_party": true,
            "native_social_login": {
                "apple": {
                    "enabled": false
                },
                "facebook": {
                    "enabled": false
                }
            },
            "oidc_conformant": false,
            "refresh_token": {
                "expiration_type": "non-expiring",
                "leeway": 0,
                "infinite_token_lifetime": true,
                "infinite_idle_token_lifetime": true,
                "token_lifetime": 2592000,
                "idle_token_lifetime": 1296000,
                "rotation_type": "non-rotating"
            },
            "sso": false,
            "sso_disabled": false,
            "signing_keys": [
                {
                    "cert": "[REDACTED]",
                    "pkcs7": "[REDACTED]",
                    "subject": "/CN=auth0-deploy-cli-e2e.us.auth0.com"
                }
            ],
            "client_id": "YSecmXJKthxfPEeSdw9MmHYvKirQMDaJ",
            "callback_url_template": false,
            "client_secret": "[REDACTED]",
            "jwt_configuration": {
                "alg": "RS256",
                "lifetime_in_seconds": 36000,
                "secret_encoded": false
            },
            "client_aliases": [],
            "token_endpoint_auth_method": "client_secret_post",
            "grant_types": [
                "authorization_code",
                "implicit",
                "refresh_token",
                "client_credentials"
            ],
            "custom_login_page_on": true
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/clients/3B10Z0hTUMzznwvs7wloxqEbCtFmBdH4",
        "body": {
            "name": "Test SPA",
            "allowed_clients": [],
            "allowed_logout_urls": [
                "http://localhost:3000"
            ],
            "app_type": "spa",
            "callbacks": [
                "http://localhost:3000"
            ],
            "client_aliases": [],
            "client_metadata": {},
            "cross_origin_auth": false,
            "custom_login_page_on": true,
            "grant_types": [
                "authorization_code",
                "implicit",
                "refresh_token"
            ],
            "is_first_party": true,
            "is_token_endpoint_ip_header_trusted": false,
            "jwt_configuration": {
                "alg": "RS256",
                "lifetime_in_seconds": 36000
            },
            "native_social_login": {
                "apple": {
                    "enabled": false
                },
                "facebook": {
                    "enabled": false
                }
            },
            "oidc_conformant": true,
            "refresh_token": {
                "expiration_type": "expiring",
                "leeway": 0,
                "token_lifetime": 2592000,
                "idle_token_lifetime": 1296000,
                "infinite_token_lifetime": false,
                "infinite_idle_token_lifetime": false,
                "rotation_type": "rotating"
            },
            "sso_disabled": false,
            "token_endpoint_auth_method": "none",
            "web_origins": [
                "http://localhost:3000"
            ]
        },
        "status": 200,
        "response": {
            "tenant": "auth0-deploy-cli-e2e",
            "global": false,
            "is_token_endpoint_ip_header_trusted": false,
            "name": "Test SPA",
            "allowed_clients": [],
            "allowed_logout_urls": [
                "http://localhost:3000"
            ],
            "callbacks": [
                "http://localhost:3000"
            ],
            "client_metadata": {},
            "cross_origin_auth": false,
            "is_first_party": true,
            "native_social_login": {
                "apple": {
                    "enabled": false
                },
                "facebook": {
                    "enabled": false
                }
            },
            "oidc_conformant": true,
            "refresh_token": {
                "expiration_type": "expiring",
                "leeway": 0,
                "token_lifetime": 2592000,
                "idle_token_lifetime": 1296000,
                "infinite_token_lifetime": false,
                "infinite_idle_token_lifetime": false,
                "rotation_type": "rotating"
            },
            "sso_disabled": false,
            "signing_keys": [
                {
                    "cert": "[REDACTED]",
                    "pkcs7": "[REDACTED]",
                    "subject": "/CN=auth0-deploy-cli-e2e.us.auth0.com"
                }
            ],
            "client_id": "3B10Z0hTUMzznwvs7wloxqEbCtFmBdH4",
            "callback_url_template": false,
            "client_secret": "[REDACTED]",
            "jwt_configuration": {
                "alg": "RS256",
                "lifetime_in_seconds": 36000,
                "secret_encoded": false
            },
            "client_aliases": [],
            "token_endpoint_auth_method": "none",
            "app_type": "spa",
            "grant_types": [
                "authorization_code",
                "implicit",
                "refresh_token"
            ],
            "web_origins": [
                "http://localhost:3000"
            ],
            "custom_login_page_on": true
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/clients/QzMkcMQ8CCVt4Xxe032vVWVUbRe2Yc9X",
        "body": {
            "name": "auth0-deploy-cli-extension",
            "allowed_clients": [],
            "app_type": "non_interactive",
            "callbacks": [],
            "client_aliases": [],
            "client_metadata": {},
            "cross_origin_auth": false,
            "custom_login_page_on": true,
            "grant_types": [
                "client_credentials"
            ],
            "is_first_party": true,
            "is_token_endpoint_ip_header_trusted": false,
            "jwt_configuration": {
                "alg": "RS256",
                "lifetime_in_seconds": 36000
            },
            "native_social_login": {
                "apple": {
                    "enabled": false
                },
                "facebook": {
                    "enabled": false
                }
            },
            "oidc_conformant": true,
            "refresh_token": {
                "expiration_type": "non-expiring",
                "leeway": 0,
                "infinite_token_lifetime": true,
                "infinite_idle_token_lifetime": true,
                "token_lifetime": 31557600,
                "idle_token_lifetime": 2592000,
                "rotation_type": "non-rotating"
            },
            "sso_disabled": false,
            "token_endpoint_auth_method": "client_secret_post"
        },
        "status": 200,
        "response": {
            "tenant": "auth0-deploy-cli-e2e",
            "global": false,
            "is_token_endpoint_ip_header_trusted": false,
            "name": "auth0-deploy-cli-extension",
            "allowed_clients": [],
            "callbacks": [],
            "client_metadata": {},
            "cross_origin_auth": false,
            "is_first_party": true,
            "native_social_login": {
                "apple": {
                    "enabled": false
                },
                "facebook": {
                    "enabled": false
                }
            },
            "oidc_conformant": true,
            "refresh_token": {
                "expiration_type": "non-expiring",
                "leeway": 0,
                "infinite_token_lifetime": true,
                "infinite_idle_token_lifetime": true,
                "token_lifetime": 31557600,
                "idle_token_lifetime": 2592000,
                "rotation_type": "non-rotating"
            },
            "sso_disabled": false,
            "signing_keys": [
                {
                    "cert": "[REDACTED]",
                    "pkcs7": "[REDACTED]",
                    "subject": "/CN=auth0-deploy-cli-e2e.us.auth0.com"
                }
            ],
            "client_id": "QzMkcMQ8CCVt4Xxe032vVWVUbRe2Yc9X",
            "callback_url_template": false,
            "client_secret": "[REDACTED]",
            "jwt_configuration": {
                "alg": "RS256",
                "lifetime_in_seconds": 36000,
                "secret_encoded": false
            },
            "client_aliases": [],
            "token_endpoint_auth_method": "client_secret_post",
            "app_type": "non_interactive",
            "grant_types": [
                "client_credentials"
            ],
            "custom_login_page_on": true
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/emails/provider?include_fields=true&fields=name%2Cenabled%2Ccredentials%2Csettings%2Cdefault_from_address",
        "body": "",
        "status": 200,
        "response": {
            "name": "mandrill",
            "credentials": {},
            "default_from_address": "auth0-user@auth0.com",
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/emails/provider?enabled=false&name=mandrill",
        "body": {
            "name": "mandrill",
            "credentials": {
                "api_key": "##MANDRILL_API_KEY##"
            },
            "default_from_address": "auth0-user@auth0.com",
            "enabled": false
        },
        "status": 200,
        "response": {
            "name": "mandrill",
            "credentials": {},
            "default_from_address": "auth0-user@auth0.com",
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/recovery-code",
        "body": {
            "enabled": false
        },
        "status": 200,
        "response": {
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/duo",
        "body": {
            "enabled": false
        },
        "status": 200,
        "response": {
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/otp",
        "body": {
            "enabled": false
        },
        "status": 200,
        "response": {
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/webauthn-roaming",
        "body": {
            "enabled": false
        },
        "status": 200,
        "response": {
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/push-notification",
        "body": {
            "enabled": true
        },
        "status": 200,
        "response": {
            "enabled": true
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/email",
        "body": {
            "enabled": false
        },
        "status": 200,
        "response": {
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/sms",
        "body": {
            "enabled": false
        },
        "status": 200,
        "response": {
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/webauthn-platform",
        "body": {
            "enabled": false
        },
        "status": 200,
        "response": {
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/policies",
        "body": [
            "all-applications"
        ],
        "status": 200,
        "response": [
            "all-applications"
        ],
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/sms/selected-provider",
        "body": {
            "provider": "auth0"
        },
        "status": 200,
        "response": {
            "provider": "auth0"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/phone/message-types",
        "body": {
            "message_types": []
        },
        "status": 200,
        "response": {
            "message_types": []
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/prompts",
        "body": {
            "universal_login_experience": "new",
            "identifier_first": true
        },
        "status": 200,
        "response": {
            "universal_login_experience": "new",
            "identifier_first": true
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/attack-protection/breached-password-detection",
        "body": {
            "enabled": false,
            "shields": [],
            "admin_notification_frequency": [],
            "method": "standard"
        },
        "status": 200,
        "response": {
            "enabled": false,
            "shields": [],
            "admin_notification_frequency": [],
            "method": "standard",
            "stage": {
                "pre-user-registration": {
                    "shields": []
                }
            }
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/log-streams?paginate=false",
        "body": "",
        "status": 200,
        "response": [
            {
                "id": "lst_0000000000011295",
                "name": "Suspended DD Log Stream",
                "type": "datadog",
                "status": "active",
                "sink": {
                    "datadogApiKey": "some-sensitive-api-key",
                    "datadogRegion": "us"
                }
            },
            {
                "id": "lst_0000000000011296",
                "name": "Amazon EventBridge",
                "type": "eventbridge",
                "status": "active",
                "sink": {
                    "awsAccountId": "123456789012",
                    "awsRegion": "us-east-2",
                    "awsPartnerEventSource": "aws.partner/auth0.com/auth0-deploy-cli-e2e-7c53541c-1bb2-44e5-a03f-307593503278/auth0.logs"
                },
                "filters": [
                    {
                        "type": "category",
                        "name": "auth.login.success"
                    },
                    {
                        "type": "category",
                        "name": "auth.login.notification"
                    },
                    {
                        "type": "category",
                        "name": "auth.login.fail"
                    },
                    {
                        "type": "category",
                        "name": "auth.signup.success"
                    },
                    {
                        "type": "category",
                        "name": "auth.logout.success"
                    },
                    {
                        "type": "category",
                        "name": "auth.logout.fail"
                    },
                    {
                        "type": "category",
                        "name": "auth.silent_auth.fail"
                    },
                    {
                        "type": "category",
                        "name": "auth.silent_auth.success"
                    },
                    {
                        "type": "category",
                        "name": "auth.token_exchange.fail"
                    }
                ]
            }
        ],
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/attack-protection/brute-force-protection",
        "body": {
            "enabled": true,
            "shields": [
                "block",
                "user_notification"
            ],
            "mode": "count_per_identifier_and_ip",
            "allowlist": [],
            "max_attempts": 66
        },
        "status": 200,
        "response": {
            "enabled": true,
            "shields": [
                "block",
                "user_notification"
            ],
            "mode": "count_per_identifier_and_ip",
            "allowlist": [],
            "max_attempts": 66
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/attack-protection/suspicious-ip-throttling",
        "body": {
            "enabled": true,
            "shields": [
                "admin_notification"
            ],
            "allowlist": [
                "127.0.0.1"
            ],
            "stage": {
                "pre-login": {
                    "max_attempts": 66,
                    "rate": 864000
                },
                "pre-user-registration": {
                    "max_attempts": 66,
                    "rate": 1200
                }
            }
        },
        "status": 200,
        "response": {
            "enabled": true,
            "shields": [
                "admin_notification"
            ],
            "allowlist": [
                "127.0.0.1"
            ],
            "stage": {
                "pre-login": {
                    "max_attempts": 66,
                    "rate": 864000
                },
                "pre-user-registration": {
                    "max_attempts": 66,
                    "rate": 1200
                }
            }
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/log-streams/lst_0000000000011295",
        "body": {
            "name": "Suspended DD Log Stream",
            "sink": {
                "datadogApiKey": "some-sensitive-api-key",
                "datadogRegion": "us"
            }
        },
        "status": 200,
        "response": {
            "id": "lst_0000000000011295",
            "name": "Suspended DD Log Stream",
            "type": "datadog",
            "status": "active",
            "sink": {
                "datadogApiKey": "some-sensitive-api-key",
                "datadogRegion": "us"
            }
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/log-streams/lst_0000000000011296",
        "body": {
            "name": "Amazon EventBridge",
            "filters": [
                {
                    "type": "category",
                    "name": "auth.login.success"
                },
                {
                    "type": "category",
                    "name": "auth.login.notification"
                },
                {
                    "type": "category",
                    "name": "auth.login.fail"
                },
                {
                    "type": "category",
                    "name": "auth.signup.success"
                },
                {
                    "type": "category",
                    "name": "auth.logout.success"
                },
                {
                    "type": "category",
                    "name": "auth.logout.fail"
                },
                {
                    "type": "category",
                    "name": "auth.silent_auth.fail"
                },
                {
                    "type": "category",
                    "name": "auth.silent_auth.success"
                },
                {
                    "type": "category",
                    "name": "auth.token_exchange.fail"
                }
            ],
            "status": "active"
        },
        "status": 200,
        "response": {
            "id": "lst_0000000000011296",
            "name": "Amazon EventBridge",
            "type": "eventbridge",
            "status": "active",
            "sink": {
                "awsAccountId": "123456789012",
                "awsRegion": "us-east-2",
                "awsPartnerEventSource": "aws.partner/auth0.com/auth0-deploy-cli-e2e-7c53541c-1bb2-44e5-a03f-307593503278/auth0.logs"
            },
            "filters": [
                {
                    "type": "category",
                    "name": "auth.login.success"
                },
                {
                    "type": "category",
                    "name": "auth.login.notification"
                },
                {
                    "type": "category",
                    "name": "auth.login.fail"
                },
                {
                    "type": "category",
                    "name": "auth.signup.success"
                },
                {
                    "type": "category",
                    "name": "auth.logout.success"
                },
                {
                    "type": "category",
                    "name": "auth.logout.fail"
                },
                {
                    "type": "category",
                    "name": "auth.silent_auth.fail"
                },
                {
                    "type": "category",
                    "name": "auth.silent_auth.success"
                },
                {
                    "type": "category",
                    "name": "auth.token_exchange.fail"
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/clients?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 9,
            "start": 0,
            "limit": 100,
            "clients": [
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Deploy CLI",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "GIW99EUCF9DFExh77WPMyTMzT8NN4J3A",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "API Explorer Application",
                    "allowed_clients": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "XU0w5uRFW1SqpUhj2jbCSw8frIzLm0Sy",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Quickstarts API (Test Application)",
                    "client_metadata": {
                        "foo": "bar"
                    },
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "SGGydPjIPyKng0FSsuQlibOiw8ommNEY",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Node App",
                    "allowed_clients": [],
                    "allowed_logout_urls": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "allowed_origins": [],
                    "client_id": "1vm5ohgMsawRxt6Fa6Npk1UYJ1l2nuvE",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "regular_web",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "web_origins": [],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "The Default App",
                    "allowed_clients": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "sso": false,
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "YSecmXJKthxfPEeSdw9MmHYvKirQMDaJ",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Terraform Provider",
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "HExWXv0uOuIIXQnS9r5nwJxA5m1I6sGb",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Test SPA",
                    "allowed_clients": [],
                    "allowed_logout_urls": [
                        "http://localhost:3000"
                    ],
                    "callbacks": [
                        "http://localhost:3000"
                    ],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "expiring",
                        "leeway": 0,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "infinite_token_lifetime": false,
                        "infinite_idle_token_lifetime": false,
                        "rotation_type": "rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "3B10Z0hTUMzznwvs7wloxqEbCtFmBdH4",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "none",
                    "app_type": "spa",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token"
                    ],
                    "web_origins": [
                        "http://localhost:3000"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "auth0-deploy-cli-extension",
                    "allowed_clients": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "QzMkcMQ8CCVt4Xxe032vVWVUbRe2Yc9X",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": true,
                    "callbacks": [],
                    "is_first_party": true,
                    "name": "All Applications",
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "owners": [
                        "mr|samlp|okta|will.vedder@auth0.com",
                        "mr|google-oauth2|102002633619863830825"
                    ],
                    "custom_login_page": "<html>TEST123</html>\n",
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "Isi93ibGHIGwmdYjsLwTOn7Gu7nwxU3V",
                    "client_secret": "[REDACTED]",
                    "custom_login_page_on": true
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/connections?strategy=auth0&include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 2,
            "start": 0,
            "limit": 100,
            "connections": [
                {
                    "id": "con_C0M89u62wEIGN19r",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "import_mode": false,
                        "customScripts": {
                            "login": "function login(email, password, callback) {\n  // This script should authenticate a user against the credentials stored in\n  // your database.\n  // It is executed when a user attempts to log in or immediately after signing\n  // up (as a verification that the user was successfully signed up).\n  //\n  // Everything returned by this script will be set as part of the user profile\n  // and will be visible by any of the tenant admins. Avoid adding attributes\n  // with values such as passwords, keys, secrets, etc.\n  //\n  // The `password` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database. For example:\n  //\n  //     var bcrypt = require('bcrypt@0.8.5');\n  //     bcrypt.compare(password, dbPasswordHash, function(err, res)) { ... }\n  //\n  // There are three ways this script can finish:\n  // 1. The user's credentials are valid. The returned user profile should be in\n  // the following format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema\n  //     var profile = {\n  //       user_id: ..., // user_id is mandatory\n  //       email: ...,\n  //       [...]\n  //     };\n  //     callback(null, profile);\n  // 2. The user's credentials are invalid\n  //     callback(new WrongUsernameOrPasswordError(email, \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n  //\n  // A list of Node.js modules which can be referenced is available here:\n  //\n  //    https://tehsis.github.io/webtaskio-canirequire/\n  console.log('AYYYYYE');\n\n  const msg =\n    'Please implement the Login script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "create": "function create(user, callback) {\n  // This script should create a user entry in your existing database. It will\n  // be executed when a user attempts to sign up, or when a user is created\n  // through the Auth0 dashboard or API.\n  // When this script has finished executing, the Login script will be\n  // executed immediately afterwards, to verify that the user was created\n  // successfully.\n  //\n  // The user object will always contain the following properties:\n  // * email: the user's email\n  // * password: the password entered by the user, in plain text\n  // * tenant: the name of this Auth0 account\n  // * client_id: the client ID of the application where the user signed up, or\n  //              API key if created through the API or Auth0 dashboard\n  // * connection: the name of this database connection\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully created\n  //     callback(null);\n  // 2. This user already exists in your database\n  //     callback(new ValidationError(\"user_exists\", \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Create script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "delete": "function remove(id, callback) {\n  // This script remove a user from your existing database.\n  // It is executed whenever a user is deleted from the API or Auth0 dashboard.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user was removed successfully:\n  //     callback(null);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Delete script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "verify": "function verify(email, callback) {\n  // This script should mark the current user's email address as verified in\n  // your database.\n  // It is executed whenever a user clicks the verification link sent by email.\n  // These emails can be customized at https://manage.auth0.com/#/emails.\n  // It is safe to assume that the user's email already exists in your database,\n  // because verification emails, if enabled, are sent immediately after a\n  // successful signup.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user's email was verified successfully\n  //     callback(null, true);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the verification link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Verify script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "get_user": "function getByEmail(email, callback) {\n  // This script should retrieve a user profile from your existing database,\n  // without authenticating the user.\n  // It is used to check if a user exists before executing flows that do not\n  // require authentication (signup and password reset).\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully found. The profile should be in the following\n  // format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema.\n  //     callback(null, profile);\n  // 2. A user was not found\n  //     callback(null);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Get User script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "change_password": "function changePassword(email, newPassword, callback) {\n  // This script should change the password stored for the current user in your\n  // database. It is executed when the user clicks on the confirmation link\n  // after a reset password request.\n  // The content and behavior of password confirmation emails can be customized\n  // here: https://manage.auth0.com/#/emails\n  // The `newPassword` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database.\n  //\n  // There are three ways that this script can finish:\n  // 1. The user's password was updated successfully:\n  //     callback(null, true);\n  // 2. The user's password was not updated:\n  //     callback(null, false);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the confirmation link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Change Password script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n"
                        },
                        "disable_signup": false,
                        "passwordPolicy": "low",
                        "password_history": {
                            "size": 5,
                            "enable": false
                        },
                        "strategy_version": 2,
                        "requires_username": true,
                        "password_dictionary": {
                            "enable": true,
                            "dictionary": []
                        },
                        "brute_force_protection": true,
                        "password_no_personal_info": {
                            "enable": true
                        },
                        "password_complexity_options": {
                            "min_length": 8
                        },
                        "enabledDatabaseCustomization": true
                    },
                    "strategy": "auth0",
                    "name": "boo-baz-db-connection-test",
                    "is_domain_connection": false,
                    "realms": [
                        "boo-baz-db-connection-test"
                    ],
                    "enabled_clients": [
                        "1vm5ohgMsawRxt6Fa6Npk1UYJ1l2nuvE",
                        "QzMkcMQ8CCVt4Xxe032vVWVUbRe2Yc9X"
                    ]
                },
                {
                    "id": "con_TEXY1DnhSCwavyLx",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "passwordPolicy": "good",
                        "strategy_version": 2,
                        "brute_force_protection": true
                    },
                    "strategy": "auth0",
                    "name": "Username-Password-Authentication",
                    "is_domain_connection": false,
                    "realms": [
                        "Username-Password-Authentication"
                    ],
                    "enabled_clients": [
                        "GIW99EUCF9DFExh77WPMyTMzT8NN4J3A"
                    ]
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/connections?strategy=auth0&include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 2,
            "start": 0,
            "limit": 100,
            "connections": [
                {
                    "id": "con_C0M89u62wEIGN19r",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "import_mode": false,
                        "customScripts": {
                            "login": "function login(email, password, callback) {\n  // This script should authenticate a user against the credentials stored in\n  // your database.\n  // It is executed when a user attempts to log in or immediately after signing\n  // up (as a verification that the user was successfully signed up).\n  //\n  // Everything returned by this script will be set as part of the user profile\n  // and will be visible by any of the tenant admins. Avoid adding attributes\n  // with values such as passwords, keys, secrets, etc.\n  //\n  // The `password` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database. For example:\n  //\n  //     var bcrypt = require('bcrypt@0.8.5');\n  //     bcrypt.compare(password, dbPasswordHash, function(err, res)) { ... }\n  //\n  // There are three ways this script can finish:\n  // 1. The user's credentials are valid. The returned user profile should be in\n  // the following format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema\n  //     var profile = {\n  //       user_id: ..., // user_id is mandatory\n  //       email: ...,\n  //       [...]\n  //     };\n  //     callback(null, profile);\n  // 2. The user's credentials are invalid\n  //     callback(new WrongUsernameOrPasswordError(email, \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n  //\n  // A list of Node.js modules which can be referenced is available here:\n  //\n  //    https://tehsis.github.io/webtaskio-canirequire/\n  console.log('AYYYYYE');\n\n  const msg =\n    'Please implement the Login script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "create": "function create(user, callback) {\n  // This script should create a user entry in your existing database. It will\n  // be executed when a user attempts to sign up, or when a user is created\n  // through the Auth0 dashboard or API.\n  // When this script has finished executing, the Login script will be\n  // executed immediately afterwards, to verify that the user was created\n  // successfully.\n  //\n  // The user object will always contain the following properties:\n  // * email: the user's email\n  // * password: the password entered by the user, in plain text\n  // * tenant: the name of this Auth0 account\n  // * client_id: the client ID of the application where the user signed up, or\n  //              API key if created through the API or Auth0 dashboard\n  // * connection: the name of this database connection\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully created\n  //     callback(null);\n  // 2. This user already exists in your database\n  //     callback(new ValidationError(\"user_exists\", \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Create script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "delete": "function remove(id, callback) {\n  // This script remove a user from your existing database.\n  // It is executed whenever a user is deleted from the API or Auth0 dashboard.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user was removed successfully:\n  //     callback(null);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Delete script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "verify": "function verify(email, callback) {\n  // This script should mark the current user's email address as verified in\n  // your database.\n  // It is executed whenever a user clicks the verification link sent by email.\n  // These emails can be customized at https://manage.auth0.com/#/emails.\n  // It is safe to assume that the user's email already exists in your database,\n  // because verification emails, if enabled, are sent immediately after a\n  // successful signup.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user's email was verified successfully\n  //     callback(null, true);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the verification link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Verify script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "get_user": "function getByEmail(email, callback) {\n  // This script should retrieve a user profile from your existing database,\n  // without authenticating the user.\n  // It is used to check if a user exists before executing flows that do not\n  // require authentication (signup and password reset).\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully found. The profile should be in the following\n  // format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema.\n  //     callback(null, profile);\n  // 2. A user was not found\n  //     callback(null);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Get User script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "change_password": "function changePassword(email, newPassword, callback) {\n  // This script should change the password stored for the current user in your\n  // database. It is executed when the user clicks on the confirmation link\n  // after a reset password request.\n  // The content and behavior of password confirmation emails can be customized\n  // here: https://manage.auth0.com/#/emails\n  // The `newPassword` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database.\n  //\n  // There are three ways that this script can finish:\n  // 1. The user's password was updated successfully:\n  //     callback(null, true);\n  // 2. The user's password was not updated:\n  //     callback(null, false);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the confirmation link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Change Password script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n"
                        },
                        "disable_signup": false,
                        "passwordPolicy": "low",
                        "password_history": {
                            "size": 5,
                            "enable": false
                        },
                        "strategy_version": 2,
                        "requires_username": true,
                        "password_dictionary": {
                            "enable": true,
                            "dictionary": []
                        },
                        "brute_force_protection": true,
                        "password_no_personal_info": {
                            "enable": true
                        },
                        "password_complexity_options": {
                            "min_length": 8
                        },
                        "enabledDatabaseCustomization": true
                    },
                    "strategy": "auth0",
                    "name": "boo-baz-db-connection-test",
                    "is_domain_connection": false,
                    "realms": [
                        "boo-baz-db-connection-test"
                    ],
                    "enabled_clients": [
                        "1vm5ohgMsawRxt6Fa6Npk1UYJ1l2nuvE",
                        "QzMkcMQ8CCVt4Xxe032vVWVUbRe2Yc9X"
                    ]
                },
                {
                    "id": "con_TEXY1DnhSCwavyLx",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "passwordPolicy": "good",
                        "strategy_version": 2,
                        "brute_force_protection": true
                    },
                    "strategy": "auth0",
                    "name": "Username-Password-Authentication",
                    "is_domain_connection": false,
                    "realms": [
                        "Username-Password-Authentication"
                    ],
                    "enabled_clients": [
                        "GIW99EUCF9DFExh77WPMyTMzT8NN4J3A"
                    ]
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "DELETE",
        "path": "/api/v2/connections/con_TEXY1DnhSCwavyLx",
        "body": {},
        "status": 202,
        "response": {
            "deleted_at": "2023-06-08T11:54:39.286Z"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/connections/con_C0M89u62wEIGN19r",
        "body": "",
        "status": 200,
        "response": {
            "id": "con_C0M89u62wEIGN19r",
            "options": {
                "mfa": {
                    "active": true,
                    "return_enroll_settings": true
                },
                "import_mode": false,
                "customScripts": {
                    "login": "function login(email, password, callback) {\n  // This script should authenticate a user against the credentials stored in\n  // your database.\n  // It is executed when a user attempts to log in or immediately after signing\n  // up (as a verification that the user was successfully signed up).\n  //\n  // Everything returned by this script will be set as part of the user profile\n  // and will be visible by any of the tenant admins. Avoid adding attributes\n  // with values such as passwords, keys, secrets, etc.\n  //\n  // The `password` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database. For example:\n  //\n  //     var bcrypt = require('bcrypt@0.8.5');\n  //     bcrypt.compare(password, dbPasswordHash, function(err, res)) { ... }\n  //\n  // There are three ways this script can finish:\n  // 1. The user's credentials are valid. The returned user profile should be in\n  // the following format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema\n  //     var profile = {\n  //       user_id: ..., // user_id is mandatory\n  //       email: ...,\n  //       [...]\n  //     };\n  //     callback(null, profile);\n  // 2. The user's credentials are invalid\n  //     callback(new WrongUsernameOrPasswordError(email, \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n  //\n  // A list of Node.js modules which can be referenced is available here:\n  //\n  //    https://tehsis.github.io/webtaskio-canirequire/\n  console.log('AYYYYYE');\n\n  const msg =\n    'Please implement the Login script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                    "create": "function create(user, callback) {\n  // This script should create a user entry in your existing database. It will\n  // be executed when a user attempts to sign up, or when a user is created\n  // through the Auth0 dashboard or API.\n  // When this script has finished executing, the Login script will be\n  // executed immediately afterwards, to verify that the user was created\n  // successfully.\n  //\n  // The user object will always contain the following properties:\n  // * email: the user's email\n  // * password: the password entered by the user, in plain text\n  // * tenant: the name of this Auth0 account\n  // * client_id: the client ID of the application where the user signed up, or\n  //              API key if created through the API or Auth0 dashboard\n  // * connection: the name of this database connection\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully created\n  //     callback(null);\n  // 2. This user already exists in your database\n  //     callback(new ValidationError(\"user_exists\", \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Create script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                    "delete": "function remove(id, callback) {\n  // This script remove a user from your existing database.\n  // It is executed whenever a user is deleted from the API or Auth0 dashboard.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user was removed successfully:\n  //     callback(null);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Delete script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                    "verify": "function verify(email, callback) {\n  // This script should mark the current user's email address as verified in\n  // your database.\n  // It is executed whenever a user clicks the verification link sent by email.\n  // These emails can be customized at https://manage.auth0.com/#/emails.\n  // It is safe to assume that the user's email already exists in your database,\n  // because verification emails, if enabled, are sent immediately after a\n  // successful signup.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user's email was verified successfully\n  //     callback(null, true);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the verification link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Verify script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                    "get_user": "function getByEmail(email, callback) {\n  // This script should retrieve a user profile from your existing database,\n  // without authenticating the user.\n  // It is used to check if a user exists before executing flows that do not\n  // require authentication (signup and password reset).\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully found. The profile should be in the following\n  // format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema.\n  //     callback(null, profile);\n  // 2. A user was not found\n  //     callback(null);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Get User script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                    "change_password": "function changePassword(email, newPassword, callback) {\n  // This script should change the password stored for the current user in your\n  // database. It is executed when the user clicks on the confirmation link\n  // after a reset password request.\n  // The content and behavior of password confirmation emails can be customized\n  // here: https://manage.auth0.com/#/emails\n  // The `newPassword` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database.\n  //\n  // There are three ways that this script can finish:\n  // 1. The user's password was updated successfully:\n  //     callback(null, true);\n  // 2. The user's password was not updated:\n  //     callback(null, false);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the confirmation link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Change Password script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n"
                },
                "disable_signup": false,
                "passwordPolicy": "low",
                "password_history": {
                    "size": 5,
                    "enable": false
                },
                "strategy_version": 2,
                "requires_username": true,
                "password_dictionary": {
                    "enable": true,
                    "dictionary": []
                },
                "brute_force_protection": true,
                "password_no_personal_info": {
                    "enable": true
                },
                "password_complexity_options": {
                    "min_length": 8
                },
                "enabledDatabaseCustomization": true
            },
            "strategy": "auth0",
            "name": "boo-baz-db-connection-test",
            "is_domain_connection": false,
            "enabled_clients": [
                "1vm5ohgMsawRxt6Fa6Npk1UYJ1l2nuvE",
                "QzMkcMQ8CCVt4Xxe032vVWVUbRe2Yc9X"
            ],
            "realms": [
                "boo-baz-db-connection-test"
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/connections/con_C0M89u62wEIGN19r",
        "body": {
            "enabled_clients": [
                "1vm5ohgMsawRxt6Fa6Npk1UYJ1l2nuvE",
                "QzMkcMQ8CCVt4Xxe032vVWVUbRe2Yc9X"
            ],
            "is_domain_connection": false,
            "options": {
                "mfa": {
                    "active": true,
                    "return_enroll_settings": true
                },
                "import_mode": false,
                "customScripts": {
                    "change_password": "function changePassword(email, newPassword, callback) {\n  // This script should change the password stored for the current user in your\n  // database. It is executed when the user clicks on the confirmation link\n  // after a reset password request.\n  // The content and behavior of password confirmation emails can be customized\n  // here: https://manage.auth0.com/#/emails\n  // The `newPassword` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database.\n  //\n  // There are three ways that this script can finish:\n  // 1. The user's password was updated successfully:\n  //     callback(null, true);\n  // 2. The user's password was not updated:\n  //     callback(null, false);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the confirmation link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Change Password script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                    "create": "function create(user, callback) {\n  // This script should create a user entry in your existing database. It will\n  // be executed when a user attempts to sign up, or when a user is created\n  // through the Auth0 dashboard or API.\n  // When this script has finished executing, the Login script will be\n  // executed immediately afterwards, to verify that the user was created\n  // successfully.\n  //\n  // The user object will always contain the following properties:\n  // * email: the user's email\n  // * password: the password entered by the user, in plain text\n  // * tenant: the name of this Auth0 account\n  // * client_id: the client ID of the application where the user signed up, or\n  //              API key if created through the API or Auth0 dashboard\n  // * connection: the name of this database connection\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully created\n  //     callback(null);\n  // 2. This user already exists in your database\n  //     callback(new ValidationError(\"user_exists\", \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Create script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                    "delete": "function remove(id, callback) {\n  // This script remove a user from your existing database.\n  // It is executed whenever a user is deleted from the API or Auth0 dashboard.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user was removed successfully:\n  //     callback(null);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Delete script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                    "get_user": "function getByEmail(email, callback) {\n  // This script should retrieve a user profile from your existing database,\n  // without authenticating the user.\n  // It is used to check if a user exists before executing flows that do not\n  // require authentication (signup and password reset).\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully found. The profile should be in the following\n  // format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema.\n  //     callback(null, profile);\n  // 2. A user was not found\n  //     callback(null);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Get User script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                    "login": "function login(email, password, callback) {\n  // This script should authenticate a user against the credentials stored in\n  // your database.\n  // It is executed when a user attempts to log in or immediately after signing\n  // up (as a verification that the user was successfully signed up).\n  //\n  // Everything returned by this script will be set as part of the user profile\n  // and will be visible by any of the tenant admins. Avoid adding attributes\n  // with values such as passwords, keys, secrets, etc.\n  //\n  // The `password` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database. For example:\n  //\n  //     var bcrypt = require('bcrypt@0.8.5');\n  //     bcrypt.compare(password, dbPasswordHash, function(err, res)) { ... }\n  //\n  // There are three ways this script can finish:\n  // 1. The user's credentials are valid. The returned user profile should be in\n  // the following format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema\n  //     var profile = {\n  //       user_id: ..., // user_id is mandatory\n  //       email: ...,\n  //       [...]\n  //     };\n  //     callback(null, profile);\n  // 2. The user's credentials are invalid\n  //     callback(new WrongUsernameOrPasswordError(email, \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n  //\n  // A list of Node.js modules which can be referenced is available here:\n  //\n  //    https://tehsis.github.io/webtaskio-canirequire/\n  console.log('AYYYYYE');\n\n  const msg =\n    'Please implement the Login script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                    "verify": "function verify(email, callback) {\n  // This script should mark the current user's email address as verified in\n  // your database.\n  // It is executed whenever a user clicks the verification link sent by email.\n  // These emails can be customized at https://manage.auth0.com/#/emails.\n  // It is safe to assume that the user's email already exists in your database,\n  // because verification emails, if enabled, are sent immediately after a\n  // successful signup.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user's email was verified successfully\n  //     callback(null, true);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the verification link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Verify script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n"
                },
                "disable_signup": false,
                "passwordPolicy": "low",
                "password_history": {
                    "size": 5,
                    "enable": false
                },
                "strategy_version": 2,
                "requires_username": true,
                "password_dictionary": {
                    "enable": true,
                    "dictionary": []
                },
                "brute_force_protection": true,
                "password_no_personal_info": {
                    "enable": true
                },
                "password_complexity_options": {
                    "min_length": 8
                },
                "enabledDatabaseCustomization": true
            },
            "realms": [
                "boo-baz-db-connection-test"
            ]
        },
        "status": 200,
        "response": {
            "id": "con_C0M89u62wEIGN19r",
            "options": {
                "mfa": {
                    "active": true,
                    "return_enroll_settings": true
                },
                "import_mode": false,
                "customScripts": {
                    "login": "function login(email, password, callback) {\n  // This script should authenticate a user against the credentials stored in\n  // your database.\n  // It is executed when a user attempts to log in or immediately after signing\n  // up (as a verification that the user was successfully signed up).\n  //\n  // Everything returned by this script will be set as part of the user profile\n  // and will be visible by any of the tenant admins. Avoid adding attributes\n  // with values such as passwords, keys, secrets, etc.\n  //\n  // The `password` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database. For example:\n  //\n  //     var bcrypt = require('bcrypt@0.8.5');\n  //     bcrypt.compare(password, dbPasswordHash, function(err, res)) { ... }\n  //\n  // There are three ways this script can finish:\n  // 1. The user's credentials are valid. The returned user profile should be in\n  // the following format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema\n  //     var profile = {\n  //       user_id: ..., // user_id is mandatory\n  //       email: ...,\n  //       [...]\n  //     };\n  //     callback(null, profile);\n  // 2. The user's credentials are invalid\n  //     callback(new WrongUsernameOrPasswordError(email, \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n  //\n  // A list of Node.js modules which can be referenced is available here:\n  //\n  //    https://tehsis.github.io/webtaskio-canirequire/\n  console.log('AYYYYYE');\n\n  const msg =\n    'Please implement the Login script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                    "create": "function create(user, callback) {\n  // This script should create a user entry in your existing database. It will\n  // be executed when a user attempts to sign up, or when a user is created\n  // through the Auth0 dashboard or API.\n  // When this script has finished executing, the Login script will be\n  // executed immediately afterwards, to verify that the user was created\n  // successfully.\n  //\n  // The user object will always contain the following properties:\n  // * email: the user's email\n  // * password: the password entered by the user, in plain text\n  // * tenant: the name of this Auth0 account\n  // * client_id: the client ID of the application where the user signed up, or\n  //              API key if created through the API or Auth0 dashboard\n  // * connection: the name of this database connection\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully created\n  //     callback(null);\n  // 2. This user already exists in your database\n  //     callback(new ValidationError(\"user_exists\", \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Create script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                    "delete": "function remove(id, callback) {\n  // This script remove a user from your existing database.\n  // It is executed whenever a user is deleted from the API or Auth0 dashboard.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user was removed successfully:\n  //     callback(null);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Delete script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                    "verify": "function verify(email, callback) {\n  // This script should mark the current user's email address as verified in\n  // your database.\n  // It is executed whenever a user clicks the verification link sent by email.\n  // These emails can be customized at https://manage.auth0.com/#/emails.\n  // It is safe to assume that the user's email already exists in your database,\n  // because verification emails, if enabled, are sent immediately after a\n  // successful signup.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user's email was verified successfully\n  //     callback(null, true);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the verification link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Verify script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                    "get_user": "function getByEmail(email, callback) {\n  // This script should retrieve a user profile from your existing database,\n  // without authenticating the user.\n  // It is used to check if a user exists before executing flows that do not\n  // require authentication (signup and password reset).\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully found. The profile should be in the following\n  // format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema.\n  //     callback(null, profile);\n  // 2. A user was not found\n  //     callback(null);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Get User script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                    "change_password": "function changePassword(email, newPassword, callback) {\n  // This script should change the password stored for the current user in your\n  // database. It is executed when the user clicks on the confirmation link\n  // after a reset password request.\n  // The content and behavior of password confirmation emails can be customized\n  // here: https://manage.auth0.com/#/emails\n  // The `newPassword` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database.\n  //\n  // There are three ways that this script can finish:\n  // 1. The user's password was updated successfully:\n  //     callback(null, true);\n  // 2. The user's password was not updated:\n  //     callback(null, false);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the confirmation link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Change Password script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n"
                },
                "disable_signup": false,
                "passwordPolicy": "low",
                "password_history": {
                    "size": 5,
                    "enable": false
                },
                "strategy_version": 2,
                "requires_username": true,
                "password_dictionary": {
                    "enable": true,
                    "dictionary": []
                },
                "brute_force_protection": true,
                "password_no_personal_info": {
                    "enable": true
                },
                "password_complexity_options": {
                    "min_length": 8
                },
                "enabledDatabaseCustomization": true
            },
            "strategy": "auth0",
            "name": "boo-baz-db-connection-test",
            "is_domain_connection": false,
            "enabled_clients": [
                "1vm5ohgMsawRxt6Fa6Npk1UYJ1l2nuvE",
                "QzMkcMQ8CCVt4Xxe032vVWVUbRe2Yc9X"
            ],
            "realms": [
                "boo-baz-db-connection-test"
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/clients?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 9,
            "start": 0,
            "limit": 100,
            "clients": [
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Deploy CLI",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "GIW99EUCF9DFExh77WPMyTMzT8NN4J3A",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "API Explorer Application",
                    "allowed_clients": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "XU0w5uRFW1SqpUhj2jbCSw8frIzLm0Sy",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Quickstarts API (Test Application)",
                    "client_metadata": {
                        "foo": "bar"
                    },
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "SGGydPjIPyKng0FSsuQlibOiw8ommNEY",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Node App",
                    "allowed_clients": [],
                    "allowed_logout_urls": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "allowed_origins": [],
                    "client_id": "1vm5ohgMsawRxt6Fa6Npk1UYJ1l2nuvE",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "regular_web",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "web_origins": [],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "The Default App",
                    "allowed_clients": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "sso": false,
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "YSecmXJKthxfPEeSdw9MmHYvKirQMDaJ",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Terraform Provider",
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "HExWXv0uOuIIXQnS9r5nwJxA5m1I6sGb",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Test SPA",
                    "allowed_clients": [],
                    "allowed_logout_urls": [
                        "http://localhost:3000"
                    ],
                    "callbacks": [
                        "http://localhost:3000"
                    ],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "expiring",
                        "leeway": 0,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "infinite_token_lifetime": false,
                        "infinite_idle_token_lifetime": false,
                        "rotation_type": "rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "3B10Z0hTUMzznwvs7wloxqEbCtFmBdH4",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "none",
                    "app_type": "spa",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token"
                    ],
                    "web_origins": [
                        "http://localhost:3000"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "auth0-deploy-cli-extension",
                    "allowed_clients": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "QzMkcMQ8CCVt4Xxe032vVWVUbRe2Yc9X",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": true,
                    "callbacks": [],
                    "is_first_party": true,
                    "name": "All Applications",
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "owners": [
                        "mr|samlp|okta|will.vedder@auth0.com",
                        "mr|google-oauth2|102002633619863830825"
                    ],
                    "custom_login_page": "<html>TEST123</html>\n",
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "Isi93ibGHIGwmdYjsLwTOn7Gu7nwxU3V",
                    "client_secret": "[REDACTED]",
                    "custom_login_page_on": true
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/connections?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 2,
            "start": 0,
            "limit": 100,
            "connections": [
                {
                    "id": "con_C0M89u62wEIGN19r",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "import_mode": false,
                        "customScripts": {
                            "login": "function login(email, password, callback) {\n  // This script should authenticate a user against the credentials stored in\n  // your database.\n  // It is executed when a user attempts to log in or immediately after signing\n  // up (as a verification that the user was successfully signed up).\n  //\n  // Everything returned by this script will be set as part of the user profile\n  // and will be visible by any of the tenant admins. Avoid adding attributes\n  // with values such as passwords, keys, secrets, etc.\n  //\n  // The `password` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database. For example:\n  //\n  //     var bcrypt = require('bcrypt@0.8.5');\n  //     bcrypt.compare(password, dbPasswordHash, function(err, res)) { ... }\n  //\n  // There are three ways this script can finish:\n  // 1. The user's credentials are valid. The returned user profile should be in\n  // the following format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema\n  //     var profile = {\n  //       user_id: ..., // user_id is mandatory\n  //       email: ...,\n  //       [...]\n  //     };\n  //     callback(null, profile);\n  // 2. The user's credentials are invalid\n  //     callback(new WrongUsernameOrPasswordError(email, \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n  //\n  // A list of Node.js modules which can be referenced is available here:\n  //\n  //    https://tehsis.github.io/webtaskio-canirequire/\n  console.log('AYYYYYE');\n\n  const msg =\n    'Please implement the Login script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "create": "function create(user, callback) {\n  // This script should create a user entry in your existing database. It will\n  // be executed when a user attempts to sign up, or when a user is created\n  // through the Auth0 dashboard or API.\n  // When this script has finished executing, the Login script will be\n  // executed immediately afterwards, to verify that the user was created\n  // successfully.\n  //\n  // The user object will always contain the following properties:\n  // * email: the user's email\n  // * password: the password entered by the user, in plain text\n  // * tenant: the name of this Auth0 account\n  // * client_id: the client ID of the application where the user signed up, or\n  //              API key if created through the API or Auth0 dashboard\n  // * connection: the name of this database connection\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully created\n  //     callback(null);\n  // 2. This user already exists in your database\n  //     callback(new ValidationError(\"user_exists\", \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Create script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "delete": "function remove(id, callback) {\n  // This script remove a user from your existing database.\n  // It is executed whenever a user is deleted from the API or Auth0 dashboard.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user was removed successfully:\n  //     callback(null);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Delete script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "verify": "function verify(email, callback) {\n  // This script should mark the current user's email address as verified in\n  // your database.\n  // It is executed whenever a user clicks the verification link sent by email.\n  // These emails can be customized at https://manage.auth0.com/#/emails.\n  // It is safe to assume that the user's email already exists in your database,\n  // because verification emails, if enabled, are sent immediately after a\n  // successful signup.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user's email was verified successfully\n  //     callback(null, true);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the verification link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Verify script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "get_user": "function getByEmail(email, callback) {\n  // This script should retrieve a user profile from your existing database,\n  // without authenticating the user.\n  // It is used to check if a user exists before executing flows that do not\n  // require authentication (signup and password reset).\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully found. The profile should be in the following\n  // format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema.\n  //     callback(null, profile);\n  // 2. A user was not found\n  //     callback(null);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Get User script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "change_password": "function changePassword(email, newPassword, callback) {\n  // This script should change the password stored for the current user in your\n  // database. It is executed when the user clicks on the confirmation link\n  // after a reset password request.\n  // The content and behavior of password confirmation emails can be customized\n  // here: https://manage.auth0.com/#/emails\n  // The `newPassword` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database.\n  //\n  // There are three ways that this script can finish:\n  // 1. The user's password was updated successfully:\n  //     callback(null, true);\n  // 2. The user's password was not updated:\n  //     callback(null, false);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the confirmation link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Change Password script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n"
                        },
                        "disable_signup": false,
                        "passwordPolicy": "low",
                        "password_history": {
                            "size": 5,
                            "enable": false
                        },
                        "strategy_version": 2,
                        "requires_username": true,
                        "password_dictionary": {
                            "enable": true,
                            "dictionary": []
                        },
                        "brute_force_protection": true,
                        "password_no_personal_info": {
                            "enable": true
                        },
                        "password_complexity_options": {
                            "min_length": 8
                        },
                        "enabledDatabaseCustomization": true
                    },
                    "strategy": "auth0",
                    "name": "boo-baz-db-connection-test",
                    "is_domain_connection": false,
                    "realms": [
                        "boo-baz-db-connection-test"
                    ],
                    "enabled_clients": [
                        "1vm5ohgMsawRxt6Fa6Npk1UYJ1l2nuvE",
                        "QzMkcMQ8CCVt4Xxe032vVWVUbRe2Yc9X"
                    ]
                },
                {
                    "id": "con_F8LduAZ8OQNa5Opz",
                    "options": {
                        "email": true,
                        "scope": [
                            "email",
                            "profile"
                        ],
                        "profile": true
                    },
                    "strategy": "google-oauth2",
                    "name": "google-oauth2",
                    "is_domain_connection": false,
                    "realms": [
                        "google-oauth2"
                    ],
                    "enabled_clients": [
                        "YSecmXJKthxfPEeSdw9MmHYvKirQMDaJ",
                        "QzMkcMQ8CCVt4Xxe032vVWVUbRe2Yc9X"
                    ]
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/connections?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 2,
            "start": 0,
            "limit": 100,
            "connections": [
                {
                    "id": "con_C0M89u62wEIGN19r",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "import_mode": false,
                        "customScripts": {
                            "login": "function login(email, password, callback) {\n  // This script should authenticate a user against the credentials stored in\n  // your database.\n  // It is executed when a user attempts to log in or immediately after signing\n  // up (as a verification that the user was successfully signed up).\n  //\n  // Everything returned by this script will be set as part of the user profile\n  // and will be visible by any of the tenant admins. Avoid adding attributes\n  // with values such as passwords, keys, secrets, etc.\n  //\n  // The `password` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database. For example:\n  //\n  //     var bcrypt = require('bcrypt@0.8.5');\n  //     bcrypt.compare(password, dbPasswordHash, function(err, res)) { ... }\n  //\n  // There are three ways this script can finish:\n  // 1. The user's credentials are valid. The returned user profile should be in\n  // the following format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema\n  //     var profile = {\n  //       user_id: ..., // user_id is mandatory\n  //       email: ...,\n  //       [...]\n  //     };\n  //     callback(null, profile);\n  // 2. The user's credentials are invalid\n  //     callback(new WrongUsernameOrPasswordError(email, \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n  //\n  // A list of Node.js modules which can be referenced is available here:\n  //\n  //    https://tehsis.github.io/webtaskio-canirequire/\n  console.log('AYYYYYE');\n\n  const msg =\n    'Please implement the Login script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "create": "function create(user, callback) {\n  // This script should create a user entry in your existing database. It will\n  // be executed when a user attempts to sign up, or when a user is created\n  // through the Auth0 dashboard or API.\n  // When this script has finished executing, the Login script will be\n  // executed immediately afterwards, to verify that the user was created\n  // successfully.\n  //\n  // The user object will always contain the following properties:\n  // * email: the user's email\n  // * password: the password entered by the user, in plain text\n  // * tenant: the name of this Auth0 account\n  // * client_id: the client ID of the application where the user signed up, or\n  //              API key if created through the API or Auth0 dashboard\n  // * connection: the name of this database connection\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully created\n  //     callback(null);\n  // 2. This user already exists in your database\n  //     callback(new ValidationError(\"user_exists\", \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Create script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "delete": "function remove(id, callback) {\n  // This script remove a user from your existing database.\n  // It is executed whenever a user is deleted from the API or Auth0 dashboard.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user was removed successfully:\n  //     callback(null);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Delete script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "verify": "function verify(email, callback) {\n  // This script should mark the current user's email address as verified in\n  // your database.\n  // It is executed whenever a user clicks the verification link sent by email.\n  // These emails can be customized at https://manage.auth0.com/#/emails.\n  // It is safe to assume that the user's email already exists in your database,\n  // because verification emails, if enabled, are sent immediately after a\n  // successful signup.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user's email was verified successfully\n  //     callback(null, true);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the verification link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Verify script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "get_user": "function getByEmail(email, callback) {\n  // This script should retrieve a user profile from your existing database,\n  // without authenticating the user.\n  // It is used to check if a user exists before executing flows that do not\n  // require authentication (signup and password reset).\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully found. The profile should be in the following\n  // format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema.\n  //     callback(null, profile);\n  // 2. A user was not found\n  //     callback(null);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Get User script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "change_password": "function changePassword(email, newPassword, callback) {\n  // This script should change the password stored for the current user in your\n  // database. It is executed when the user clicks on the confirmation link\n  // after a reset password request.\n  // The content and behavior of password confirmation emails can be customized\n  // here: https://manage.auth0.com/#/emails\n  // The `newPassword` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database.\n  //\n  // There are three ways that this script can finish:\n  // 1. The user's password was updated successfully:\n  //     callback(null, true);\n  // 2. The user's password was not updated:\n  //     callback(null, false);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the confirmation link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Change Password script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n"
                        },
                        "disable_signup": false,
                        "passwordPolicy": "low",
                        "password_history": {
                            "size": 5,
                            "enable": false
                        },
                        "strategy_version": 2,
                        "requires_username": true,
                        "password_dictionary": {
                            "enable": true,
                            "dictionary": []
                        },
                        "brute_force_protection": true,
                        "password_no_personal_info": {
                            "enable": true
                        },
                        "password_complexity_options": {
                            "min_length": 8
                        },
                        "enabledDatabaseCustomization": true
                    },
                    "strategy": "auth0",
                    "name": "boo-baz-db-connection-test",
                    "is_domain_connection": false,
                    "realms": [
                        "boo-baz-db-connection-test"
                    ],
                    "enabled_clients": [
                        "1vm5ohgMsawRxt6Fa6Npk1UYJ1l2nuvE",
                        "QzMkcMQ8CCVt4Xxe032vVWVUbRe2Yc9X"
                    ]
                },
                {
                    "id": "con_F8LduAZ8OQNa5Opz",
                    "options": {
                        "email": true,
                        "scope": [
                            "email",
                            "profile"
                        ],
                        "profile": true
                    },
                    "strategy": "google-oauth2",
                    "name": "google-oauth2",
                    "is_domain_connection": false,
                    "realms": [
                        "google-oauth2"
                    ],
                    "enabled_clients": [
                        "YSecmXJKthxfPEeSdw9MmHYvKirQMDaJ",
                        "QzMkcMQ8CCVt4Xxe032vVWVUbRe2Yc9X"
                    ]
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/connections/con_F8LduAZ8OQNa5Opz",
        "body": {
            "enabled_clients": [
                "YSecmXJKthxfPEeSdw9MmHYvKirQMDaJ",
                "QzMkcMQ8CCVt4Xxe032vVWVUbRe2Yc9X"
            ],
            "is_domain_connection": false,
            "options": {
                "email": true,
                "scope": [
                    "email",
                    "profile"
                ],
                "profile": true
            }
        },
        "status": 200,
        "response": {
            "id": "con_F8LduAZ8OQNa5Opz",
            "options": {
                "email": true,
                "scope": [
                    "email",
                    "profile"
                ],
                "profile": true
            },
            "strategy": "google-oauth2",
            "name": "google-oauth2",
            "is_domain_connection": false,
            "enabled_clients": [
                "YSecmXJKthxfPEeSdw9MmHYvKirQMDaJ",
                "QzMkcMQ8CCVt4Xxe032vVWVUbRe2Yc9X"
            ],
            "realms": [
                "google-oauth2"
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/email-templates/verify_email",
        "body": {
            "template": "verify_email",
            "body": "<html>\n  <head>\n    <style type=\"text/css\">\n      .ExternalClass,\n      .ExternalClass div,\n      .ExternalClass font,\n      .ExternalClass p,\n      .ExternalClass span,\n      .ExternalClass td,\n      img {\n        line-height: 100%;\n      }\n      #outlook a {\n        padding: 0;\n      }\n      .ExternalClass,\n      .ReadMsgBody {\n        width: 100%;\n      }\n      a,\n      blockquote,\n      body,\n      li,\n      p,\n      table,\n      td {\n        -webkit-text-size-adjust: 100%;\n        -ms-text-size-adjust: 100%;\n      }\n      table,\n      td {\n        mso-table-lspace: 0;\n        mso-table-rspace: 0;\n      }\n      img {\n        -ms-interpolation-mode: bicubic;\n        border: 0;\n        height: auto;\n        outline: 0;\n        text-decoration: none;\n      }\n      table {\n        border-collapse: collapse !important;\n      }\n      #bodyCell,\n      #bodyTable,\n      body {\n        height: 100% !important;\n        margin: 0;\n        padding: 0;\n        font-family: ProximaNova, sans-serif;\n      }\n      #bodyCell {\n        padding: 20px;\n      }\n      #bodyTable {\n        width: 600px;\n      }\n      @font-face {\n        font-family: ProximaNova;\n        src: url(https://cdn.auth0.com/fonts/proxima-nova/proximanova-regular-webfont-webfont.eot);\n        src: url(https://cdn.auth0.com/fonts/proxima-nova/proximanova-regular-webfont-webfont.eot?#iefix)\n            format('embedded-opentype'),\n          url(https://cdn.auth0.com/fonts/proxima-nova/proximanova-regular-webfont-webfont.woff)\n            format('woff');\n        font-weight: 400;\n        font-style: normal;\n      }\n      @font-face {\n        font-family: ProximaNova;\n        src: url(https://cdn.auth0.com/fonts/proxima-nova/proximanova-semibold-webfont-webfont.eot);\n        src: url(https://cdn.auth0.com/fonts/proxima-nova/proximanova-semibold-webfont-webfont.eot?#iefix)\n            format('embedded-opentype'),\n          url(https://cdn.auth0.com/fonts/proxima-nova/proximanova-semibold-webfont-webfont.woff)\n            format('woff');\n        font-weight: 600;\n        font-style: normal;\n      }\n      @media only screen and (max-width: 480px) {\n        #bodyTable,\n        body {\n          width: 100% !important;\n        }\n        a,\n        blockquote,\n        body,\n        li,\n        p,\n        table,\n        td {\n          -webkit-text-size-adjust: none !important;\n        }\n        body {\n          min-width: 100% !important;\n        }\n        #bodyTable {\n          max-width: 600px !important;\n        }\n        #signIn {\n          max-width: 280px !important;\n        }\n      }\n    </style>\n  </head>\n  <body>\n    <center>\n      <table\n        style=\"\n          width: 600px;\n          -webkit-text-size-adjust: 100%;\n          -ms-text-size-adjust: 100%;\n          mso-table-lspace: 0pt;\n          mso-table-rspace: 0pt;\n          margin: 0;\n          padding: 0;\n          font-family: 'ProximaNova', sans-serif;\n          border-collapse: collapse !important;\n          height: 100% !important;\n        \"\n        align=\"center\"\n        border=\"0\"\n        cellpadding=\"0\"\n        cellspacing=\"0\"\n        height=\"100%\"\n        width=\"100%\"\n        id=\"bodyTable\"\n      >\n        <tr>\n          <td\n            align=\"center\"\n            valign=\"top\"\n            id=\"bodyCell\"\n            style=\"\n              -webkit-text-size-adjust: 100%;\n              -ms-text-size-adjust: 100%;\n              mso-table-lspace: 0pt;\n              mso-table-rspace: 0pt;\n              margin: 0;\n              padding: 20px;\n              font-family: 'ProximaNova', sans-serif;\n              height: 100% !important;\n            \"\n          >\n            <div class=\"main\">\n              <p\n                style=\"\n                  text-align: center;\n                  -webkit-text-size-adjust: 100%;\n                  -ms-text-size-adjust: 100%;\n                  margin-bottom: 30px;\n                \"\n              >\n                <img\n                  src=\"https://cdn.auth0.com/styleguide/2.0.9/lib/logos/img/badge.png\"\n                  width=\"50\"\n                  alt=\"Your logo goes here\"\n                  style=\"\n                    -ms-interpolation-mode: bicubic;\n                    border: 0;\n                    height: auto;\n                    line-height: 100%;\n                    outline: none;\n                    text-decoration: none;\n                  \"\n                />\n              </p>\n\n              <h1>Welcome to {{ application.name}}!</h1>\n\n              <p>\n                Thank you for signing up. Please verify your email address by clicking the following\n                link:\n              </p>\n\n              <p><a href=\"{{ url }}\">Confirm my account</a></p>\n\n              <p>\n                If you are having any issues with your account, please don’t hesitate to contact us\n                by replying to this mail.\n              </p>\n\n              <br />\n              Haha!!!\n              <br />\n\n              <strong>{{ application.name }}</strong>\n\n              <br /><br />\n              <hr style=\"border: 2px solid #eaeef3; border-bottom: 0; margin: 20px 0\" />\n              <p\n                style=\"\n                  text-align: center;\n                  color: #a9b3bc;\n                  -webkit-text-size-adjust: 100%;\n                  -ms-text-size-adjust: 100%;\n                \"\n              >\n                If you did not make this request, please contact us by replying to this mail.\n              </p>\n            </div>\n          </td>\n        </tr>\n      </table>\n    </center>\n  </body>\n</html>\n",
            "enabled": true,
            "from": "",
            "subject": "",
            "syntax": "liquid",
            "urlLifetimeInSeconds": 432000
        },
        "status": 200,
        "response": {
            "template": "verify_email",
            "body": "<html>\n  <head>\n    <style type=\"text/css\">\n      .ExternalClass,\n      .ExternalClass div,\n      .ExternalClass font,\n      .ExternalClass p,\n      .ExternalClass span,\n      .ExternalClass td,\n      img {\n        line-height: 100%;\n      }\n      #outlook a {\n        padding: 0;\n      }\n      .ExternalClass,\n      .ReadMsgBody {\n        width: 100%;\n      }\n      a,\n      blockquote,\n      body,\n      li,\n      p,\n      table,\n      td {\n        -webkit-text-size-adjust: 100%;\n        -ms-text-size-adjust: 100%;\n      }\n      table,\n      td {\n        mso-table-lspace: 0;\n        mso-table-rspace: 0;\n      }\n      img {\n        -ms-interpolation-mode: bicubic;\n        border: 0;\n        height: auto;\n        outline: 0;\n        text-decoration: none;\n      }\n      table {\n        border-collapse: collapse !important;\n      }\n      #bodyCell,\n      #bodyTable,\n      body {\n        height: 100% !important;\n        margin: 0;\n        padding: 0;\n        font-family: ProximaNova, sans-serif;\n      }\n      #bodyCell {\n        padding: 20px;\n      }\n      #bodyTable {\n        width: 600px;\n      }\n      @font-face {\n        font-family: ProximaNova;\n        src: url(https://cdn.auth0.com/fonts/proxima-nova/proximanova-regular-webfont-webfont.eot);\n        src: url(https://cdn.auth0.com/fonts/proxima-nova/proximanova-regular-webfont-webfont.eot?#iefix)\n            format('embedded-opentype'),\n          url(https://cdn.auth0.com/fonts/proxima-nova/proximanova-regular-webfont-webfont.woff)\n            format('woff');\n        font-weight: 400;\n        font-style: normal;\n      }\n      @font-face {\n        font-family: ProximaNova;\n        src: url(https://cdn.auth0.com/fonts/proxima-nova/proximanova-semibold-webfont-webfont.eot);\n        src: url(https://cdn.auth0.com/fonts/proxima-nova/proximanova-semibold-webfont-webfont.eot?#iefix)\n            format('embedded-opentype'),\n          url(https://cdn.auth0.com/fonts/proxima-nova/proximanova-semibold-webfont-webfont.woff)\n            format('woff');\n        font-weight: 600;\n        font-style: normal;\n      }\n      @media only screen and (max-width: 480px) {\n        #bodyTable,\n        body {\n          width: 100% !important;\n        }\n        a,\n        blockquote,\n        body,\n        li,\n        p,\n        table,\n        td {\n          -webkit-text-size-adjust: none !important;\n        }\n        body {\n          min-width: 100% !important;\n        }\n        #bodyTable {\n          max-width: 600px !important;\n        }\n        #signIn {\n          max-width: 280px !important;\n        }\n      }\n    </style>\n  </head>\n  <body>\n    <center>\n      <table\n        style=\"\n          width: 600px;\n          -webkit-text-size-adjust: 100%;\n          -ms-text-size-adjust: 100%;\n          mso-table-lspace: 0pt;\n          mso-table-rspace: 0pt;\n          margin: 0;\n          padding: 0;\n          font-family: 'ProximaNova', sans-serif;\n          border-collapse: collapse !important;\n          height: 100% !important;\n        \"\n        align=\"center\"\n        border=\"0\"\n        cellpadding=\"0\"\n        cellspacing=\"0\"\n        height=\"100%\"\n        width=\"100%\"\n        id=\"bodyTable\"\n      >\n        <tr>\n          <td\n            align=\"center\"\n            valign=\"top\"\n            id=\"bodyCell\"\n            style=\"\n              -webkit-text-size-adjust: 100%;\n              -ms-text-size-adjust: 100%;\n              mso-table-lspace: 0pt;\n              mso-table-rspace: 0pt;\n              margin: 0;\n              padding: 20px;\n              font-family: 'ProximaNova', sans-serif;\n              height: 100% !important;\n            \"\n          >\n            <div class=\"main\">\n              <p\n                style=\"\n                  text-align: center;\n                  -webkit-text-size-adjust: 100%;\n                  -ms-text-size-adjust: 100%;\n                  margin-bottom: 30px;\n                \"\n              >\n                <img\n                  src=\"https://cdn.auth0.com/styleguide/2.0.9/lib/logos/img/badge.png\"\n                  width=\"50\"\n                  alt=\"Your logo goes here\"\n                  style=\"\n                    -ms-interpolation-mode: bicubic;\n                    border: 0;\n                    height: auto;\n                    line-height: 100%;\n                    outline: none;\n                    text-decoration: none;\n                  \"\n                />\n              </p>\n\n              <h1>Welcome to {{ application.name}}!</h1>\n\n              <p>\n                Thank you for signing up. Please verify your email address by clicking the following\n                link:\n              </p>\n\n              <p><a href=\"{{ url }}\">Confirm my account</a></p>\n\n              <p>\n                If you are having any issues with your account, please don’t hesitate to contact us\n                by replying to this mail.\n              </p>\n\n              <br />\n              Haha!!!\n              <br />\n\n              <strong>{{ application.name }}</strong>\n\n              <br /><br />\n              <hr style=\"border: 2px solid #eaeef3; border-bottom: 0; margin: 20px 0\" />\n              <p\n                style=\"\n                  text-align: center;\n                  color: #a9b3bc;\n                  -webkit-text-size-adjust: 100%;\n                  -ms-text-size-adjust: 100%;\n                \"\n              >\n                If you did not make this request, please contact us by replying to this mail.\n              </p>\n            </div>\n          </td>\n        </tr>\n      </table>\n    </center>\n  </body>\n</html>\n",
            "from": "",
            "subject": "",
            "syntax": "liquid",
            "urlLifetimeInSeconds": 432000,
            "enabled": true
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/email-templates/welcome_email",
        "body": {
            "template": "welcome_email",
            "body": "<html>\n  <body>\n    <h1>Welcome!</h1>\n  </body>\n</html>\n",
            "enabled": false,
            "from": "",
            "resultUrl": "https://example.com/welcome",
            "subject": "Welcome",
            "syntax": "liquid",
            "urlLifetimeInSeconds": 3600
        },
        "status": 200,
        "response": {
            "template": "welcome_email",
            "body": "<html>\n  <body>\n    <h1>Welcome!</h1>\n  </body>\n</html>\n",
            "from": "",
            "resultUrl": "https://example.com/welcome",
            "subject": "Welcome",
            "syntax": "liquid",
            "urlLifetimeInSeconds": 3600,
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/clients?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 9,
            "start": 0,
            "limit": 100,
            "clients": [
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Deploy CLI",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "GIW99EUCF9DFExh77WPMyTMzT8NN4J3A",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "API Explorer Application",
                    "allowed_clients": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "XU0w5uRFW1SqpUhj2jbCSw8frIzLm0Sy",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Quickstarts API (Test Application)",
                    "client_metadata": {
                        "foo": "bar"
                    },
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "SGGydPjIPyKng0FSsuQlibOiw8ommNEY",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Node App",
                    "allowed_clients": [],
                    "allowed_logout_urls": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "allowed_origins": [],
                    "client_id": "1vm5ohgMsawRxt6Fa6Npk1UYJ1l2nuvE",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "regular_web",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "web_origins": [],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "The Default App",
                    "allowed_clients": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "sso": false,
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "YSecmXJKthxfPEeSdw9MmHYvKirQMDaJ",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Terraform Provider",
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "HExWXv0uOuIIXQnS9r5nwJxA5m1I6sGb",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Test SPA",
                    "allowed_clients": [],
                    "allowed_logout_urls": [
                        "http://localhost:3000"
                    ],
                    "callbacks": [
                        "http://localhost:3000"
                    ],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "expiring",
                        "leeway": 0,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "infinite_token_lifetime": false,
                        "infinite_idle_token_lifetime": false,
                        "rotation_type": "rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "3B10Z0hTUMzznwvs7wloxqEbCtFmBdH4",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "none",
                    "app_type": "spa",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token"
                    ],
                    "web_origins": [
                        "http://localhost:3000"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "auth0-deploy-cli-extension",
                    "allowed_clients": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "QzMkcMQ8CCVt4Xxe032vVWVUbRe2Yc9X",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": true,
                    "callbacks": [],
                    "is_first_party": true,
                    "name": "All Applications",
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "owners": [
                        "mr|samlp|okta|will.vedder@auth0.com",
                        "mr|google-oauth2|102002633619863830825"
                    ],
                    "custom_login_page": "<html>TEST123</html>\n",
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "Isi93ibGHIGwmdYjsLwTOn7Gu7nwxU3V",
                    "client_secret": "[REDACTED]",
                    "custom_login_page_on": true
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/client-grants?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 3,
            "start": 0,
            "limit": 100,
            "client_grants": [
                {
                    "id": "cgr_LqXJaOGv8Zo9pj8w",
                    "client_id": "HExWXv0uOuIIXQnS9r5nwJxA5m1I6sGb",
                    "audience": "https://auth0-deploy-cli-e2e.us.auth0.com/api/v2/",
                    "scope": [
                        "read:client_grants",
                        "create:client_grants",
                        "delete:client_grants",
                        "update:client_grants",
                        "read:users",
                        "update:users",
                        "delete:users",
                        "create:users",
                        "read:users_app_metadata",
                        "update:users_app_metadata",
                        "delete:users_app_metadata",
                        "create:users_app_metadata",
                        "read:user_custom_blocks",
                        "create:user_custom_blocks",
                        "delete:user_custom_blocks",
                        "create:user_tickets",
                        "read:clients",
                        "update:clients",
                        "delete:clients",
                        "create:clients",
                        "read:client_keys",
                        "update:client_keys",
                        "delete:client_keys",
                        "create:client_keys",
                        "read:connections",
                        "update:connections",
                        "delete:connections",
                        "create:connections",
                        "read:resource_servers",
                        "update:resource_servers",
                        "delete:resource_servers",
                        "create:resource_servers",
                        "read:device_credentials",
                        "update:device_credentials",
                        "delete:device_credentials",
                        "create:device_credentials",
                        "read:rules",
                        "update:rules",
                        "delete:rules",
                        "create:rules",
                        "read:rules_configs",
                        "update:rules_configs",
                        "delete:rules_configs",
                        "read:hooks",
                        "update:hooks",
                        "delete:hooks",
                        "create:hooks",
                        "read:actions",
                        "update:actions",
                        "delete:actions",
                        "create:actions",
                        "read:email_provider",
                        "update:email_provider",
                        "delete:email_provider",
                        "create:email_provider",
                        "blacklist:tokens",
                        "read:stats",
                        "read:insights",
                        "read:tenant_settings",
                        "update:tenant_settings",
                        "read:logs",
                        "read:logs_users",
                        "read:shields",
                        "create:shields",
                        "update:shields",
                        "delete:shields",
                        "read:anomaly_blocks",
                        "delete:anomaly_blocks",
                        "update:triggers",
                        "read:triggers",
                        "read:grants",
                        "delete:grants",
                        "read:guardian_factors",
                        "update:guardian_factors",
                        "read:guardian_enrollments",
                        "delete:guardian_enrollments",
                        "create:guardian_enrollment_tickets",
                        "read:user_idp_tokens",
                        "create:passwords_checking_job",
                        "delete:passwords_checking_job",
                        "read:custom_domains",
                        "delete:custom_domains",
                        "create:custom_domains",
                        "update:custom_domains",
                        "read:email_templates",
                        "create:email_templates",
                        "update:email_templates",
                        "read:mfa_policies",
                        "update:mfa_policies",
                        "read:roles",
                        "create:roles",
                        "delete:roles",
                        "update:roles",
                        "read:prompts",
                        "update:prompts",
                        "read:branding",
                        "update:branding",
                        "delete:branding",
                        "read:log_streams",
                        "create:log_streams",
                        "delete:log_streams",
                        "update:log_streams",
                        "create:signing_keys",
                        "read:signing_keys",
                        "update:signing_keys",
                        "read:limits",
                        "update:limits",
                        "create:role_members",
                        "read:role_members",
                        "delete:role_members",
                        "read:entitlements",
                        "read:attack_protection",
                        "update:attack_protection",
                        "read:organizations",
                        "update:organizations",
                        "create:organizations",
                        "delete:organizations",
                        "create:organization_members",
                        "read:organization_members",
                        "delete:organization_members",
                        "create:organization_connections",
                        "read:organization_connections",
                        "update:organization_connections",
                        "delete:organization_connections",
                        "create:organization_member_roles",
                        "read:organization_member_roles",
                        "delete:organization_member_roles",
                        "create:organization_invitations",
                        "read:organization_invitations",
                        "delete:organization_invitations"
                    ]
                },
                {
                    "id": "cgr_iodSzvwxqm51tLZF",
                    "client_id": "GIW99EUCF9DFExh77WPMyTMzT8NN4J3A",
                    "audience": "https://auth0-deploy-cli-e2e.us.auth0.com/api/v2/",
                    "scope": [
                        "read:client_grants",
                        "create:client_grants",
                        "delete:client_grants",
                        "update:client_grants",
                        "read:users",
                        "update:users",
                        "delete:users",
                        "create:users",
                        "read:users_app_metadata",
                        "update:users_app_metadata",
                        "delete:users_app_metadata",
                        "create:users_app_metadata",
                        "read:user_custom_blocks",
                        "create:user_custom_blocks",
                        "delete:user_custom_blocks",
                        "create:user_tickets",
                        "read:clients",
                        "update:clients",
                        "delete:clients",
                        "create:clients",
                        "read:client_keys",
                        "update:client_keys",
                        "delete:client_keys",
                        "create:client_keys",
                        "read:connections",
                        "update:connections",
                        "delete:connections",
                        "create:connections",
                        "read:resource_servers",
                        "update:resource_servers",
                        "delete:resource_servers",
                        "create:resource_servers",
                        "read:device_credentials",
                        "update:device_credentials",
                        "delete:device_credentials",
                        "create:device_credentials",
                        "read:rules",
                        "update:rules",
                        "delete:rules",
                        "create:rules",
                        "read:rules_configs",
                        "update:rules_configs",
                        "delete:rules_configs",
                        "read:hooks",
                        "update:hooks",
                        "delete:hooks",
                        "create:hooks",
                        "read:actions",
                        "update:actions",
                        "delete:actions",
                        "create:actions",
                        "read:email_provider",
                        "update:email_provider",
                        "delete:email_provider",
                        "create:email_provider",
                        "blacklist:tokens",
                        "read:stats",
                        "read:insights",
                        "read:tenant_settings",
                        "update:tenant_settings",
                        "read:logs",
                        "read:logs_users",
                        "read:shields",
                        "create:shields",
                        "update:shields",
                        "delete:shields",
                        "read:anomaly_blocks",
                        "delete:anomaly_blocks",
                        "update:triggers",
                        "read:triggers",
                        "read:grants",
                        "delete:grants",
                        "read:guardian_factors",
                        "update:guardian_factors",
                        "read:guardian_enrollments",
                        "delete:guardian_enrollments",
                        "create:guardian_enrollment_tickets",
                        "read:user_idp_tokens",
                        "create:passwords_checking_job",
                        "delete:passwords_checking_job",
                        "read:custom_domains",
                        "delete:custom_domains",
                        "create:custom_domains",
                        "update:custom_domains",
                        "read:email_templates",
                        "create:email_templates",
                        "update:email_templates",
                        "read:mfa_policies",
                        "update:mfa_policies",
                        "read:roles",
                        "create:roles",
                        "delete:roles",
                        "update:roles",
                        "read:prompts",
                        "update:prompts",
                        "read:branding",
                        "update:branding",
                        "delete:branding",
                        "read:log_streams",
                        "create:log_streams",
                        "delete:log_streams",
                        "update:log_streams",
                        "create:signing_keys",
                        "read:signing_keys",
                        "update:signing_keys",
                        "read:limits",
                        "update:limits",
                        "create:role_members",
                        "read:role_members",
                        "delete:role_members",
                        "read:entitlements",
                        "read:attack_protection",
                        "update:attack_protection",
                        "read:organizations",
                        "update:organizations",
                        "create:organizations",
                        "delete:organizations",
                        "create:organization_members",
                        "read:organization_members",
                        "delete:organization_members",
                        "create:organization_connections",
                        "read:organization_connections",
                        "update:organization_connections",
                        "delete:organization_connections",
                        "create:organization_member_roles",
                        "read:organization_member_roles",
                        "delete:organization_member_roles",
                        "create:organization_invitations",
                        "read:organization_invitations",
                        "delete:organization_invitations",
                        "read:organizations_summary",
                        "create:actions_log_sessions",
                        "create:authentication_methods",
                        "read:authentication_methods",
                        "update:authentication_methods",
                        "delete:authentication_methods"
                    ]
                },
                {
                    "id": "cgr_qLYwKx2lpFqml2X2",
                    "client_id": "XU0w5uRFW1SqpUhj2jbCSw8frIzLm0Sy",
                    "audience": "https://auth0-deploy-cli-e2e.us.auth0.com/api/v2/",
                    "scope": [
                        "read:client_grants",
                        "create:client_grants",
                        "delete:client_grants",
                        "update:client_grants",
                        "read:users",
                        "update:users",
                        "delete:users",
                        "create:users",
                        "read:users_app_metadata",
                        "update:users_app_metadata",
                        "delete:users_app_metadata",
                        "create:users_app_metadata",
                        "read:user_custom_blocks",
                        "create:user_custom_blocks",
                        "delete:user_custom_blocks",
                        "create:user_tickets",
                        "read:clients",
                        "update:clients",
                        "delete:clients",
                        "create:clients",
                        "read:client_keys",
                        "update:client_keys",
                        "delete:client_keys",
                        "create:client_keys",
                        "read:connections",
                        "update:connections",
                        "delete:connections",
                        "create:connections",
                        "read:resource_servers",
                        "update:resource_servers",
                        "delete:resource_servers",
                        "create:resource_servers",
                        "read:device_credentials",
                        "update:device_credentials",
                        "delete:device_credentials",
                        "create:device_credentials",
                        "read:rules",
                        "update:rules",
                        "delete:rules",
                        "create:rules",
                        "read:rules_configs",
                        "update:rules_configs",
                        "delete:rules_configs",
                        "read:hooks",
                        "update:hooks",
                        "delete:hooks",
                        "create:hooks",
                        "read:actions",
                        "update:actions",
                        "delete:actions",
                        "create:actions",
                        "read:email_provider",
                        "update:email_provider",
                        "delete:email_provider",
                        "create:email_provider",
                        "blacklist:tokens",
                        "read:stats",
                        "read:insights",
                        "read:tenant_settings",
                        "update:tenant_settings",
                        "read:logs",
                        "read:logs_users",
                        "read:shields",
                        "create:shields",
                        "update:shields",
                        "delete:shields",
                        "read:anomaly_blocks",
                        "delete:anomaly_blocks",
                        "update:triggers",
                        "read:triggers",
                        "read:grants",
                        "delete:grants",
                        "read:guardian_factors",
                        "update:guardian_factors",
                        "read:guardian_enrollments",
                        "delete:guardian_enrollments",
                        "create:guardian_enrollment_tickets",
                        "read:user_idp_tokens",
                        "create:passwords_checking_job",
                        "delete:passwords_checking_job",
                        "read:custom_domains",
                        "delete:custom_domains",
                        "create:custom_domains",
                        "update:custom_domains",
                        "read:email_templates",
                        "create:email_templates",
                        "update:email_templates",
                        "read:mfa_policies",
                        "update:mfa_policies",
                        "read:roles",
                        "create:roles",
                        "delete:roles",
                        "update:roles",
                        "read:prompts",
                        "update:prompts",
                        "read:branding",
                        "update:branding",
                        "delete:branding",
                        "read:log_streams",
                        "create:log_streams",
                        "delete:log_streams",
                        "update:log_streams",
                        "create:signing_keys",
                        "read:signing_keys",
                        "update:signing_keys",
                        "read:limits",
                        "update:limits",
                        "create:role_members",
                        "read:role_members",
                        "delete:role_members",
                        "read:entitlements",
                        "read:attack_protection",
                        "update:attack_protection",
                        "read:organizations",
                        "update:organizations",
                        "create:organizations",
                        "delete:organizations",
                        "create:organization_members",
                        "read:organization_members",
                        "delete:organization_members",
                        "create:organization_connections",
                        "read:organization_connections",
                        "update:organization_connections",
                        "delete:organization_connections",
                        "create:organization_member_roles",
                        "read:organization_member_roles",
                        "delete:organization_member_roles",
                        "create:organization_invitations",
                        "read:organization_invitations",
                        "delete:organization_invitations"
                    ]
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/client-grants/cgr_LqXJaOGv8Zo9pj8w",
        "body": {
            "scope": [
                "read:client_grants",
                "create:client_grants",
                "delete:client_grants",
                "update:client_grants",
                "read:users",
                "update:users",
                "delete:users",
                "create:users",
                "read:users_app_metadata",
                "update:users_app_metadata",
                "delete:users_app_metadata",
                "create:users_app_metadata",
                "read:user_custom_blocks",
                "create:user_custom_blocks",
                "delete:user_custom_blocks",
                "create:user_tickets",
                "read:clients",
                "update:clients",
                "delete:clients",
                "create:clients",
                "read:client_keys",
                "update:client_keys",
                "delete:client_keys",
                "create:client_keys",
                "read:connections",
                "update:connections",
                "delete:connections",
                "create:connections",
                "read:resource_servers",
                "update:resource_servers",
                "delete:resource_servers",
                "create:resource_servers",
                "read:device_credentials",
                "update:device_credentials",
                "delete:device_credentials",
                "create:device_credentials",
                "read:rules",
                "update:rules",
                "delete:rules",
                "create:rules",
                "read:rules_configs",
                "update:rules_configs",
                "delete:rules_configs",
                "read:hooks",
                "update:hooks",
                "delete:hooks",
                "create:hooks",
                "read:actions",
                "update:actions",
                "delete:actions",
                "create:actions",
                "read:email_provider",
                "update:email_provider",
                "delete:email_provider",
                "create:email_provider",
                "blacklist:tokens",
                "read:stats",
                "read:insights",
                "read:tenant_settings",
                "update:tenant_settings",
                "read:logs",
                "read:logs_users",
                "read:shields",
                "create:shields",
                "update:shields",
                "delete:shields",
                "read:anomaly_blocks",
                "delete:anomaly_blocks",
                "update:triggers",
                "read:triggers",
                "read:grants",
                "delete:grants",
                "read:guardian_factors",
                "update:guardian_factors",
                "read:guardian_enrollments",
                "delete:guardian_enrollments",
                "create:guardian_enrollment_tickets",
                "read:user_idp_tokens",
                "create:passwords_checking_job",
                "delete:passwords_checking_job",
                "read:custom_domains",
                "delete:custom_domains",
                "create:custom_domains",
                "update:custom_domains",
                "read:email_templates",
                "create:email_templates",
                "update:email_templates",
                "read:mfa_policies",
                "update:mfa_policies",
                "read:roles",
                "create:roles",
                "delete:roles",
                "update:roles",
                "read:prompts",
                "update:prompts",
                "read:branding",
                "update:branding",
                "delete:branding",
                "read:log_streams",
                "create:log_streams",
                "delete:log_streams",
                "update:log_streams",
                "create:signing_keys",
                "read:signing_keys",
                "update:signing_keys",
                "read:limits",
                "update:limits",
                "create:role_members",
                "read:role_members",
                "delete:role_members",
                "read:entitlements",
                "read:attack_protection",
                "update:attack_protection",
                "read:organizations",
                "update:organizations",
                "create:organizations",
                "delete:organizations",
                "create:organization_members",
                "read:organization_members",
                "delete:organization_members",
                "create:organization_connections",
                "read:organization_connections",
                "update:organization_connections",
                "delete:organization_connections",
                "create:organization_member_roles",
                "read:organization_member_roles",
                "delete:organization_member_roles",
                "create:organization_invitations",
                "read:organization_invitations",
                "delete:organization_invitations"
            ]
        },
        "status": 200,
        "response": {
            "id": "cgr_LqXJaOGv8Zo9pj8w",
            "client_id": "HExWXv0uOuIIXQnS9r5nwJxA5m1I6sGb",
            "audience": "https://auth0-deploy-cli-e2e.us.auth0.com/api/v2/",
            "scope": [
                "read:client_grants",
                "create:client_grants",
                "delete:client_grants",
                "update:client_grants",
                "read:users",
                "update:users",
                "delete:users",
                "create:users",
                "read:users_app_metadata",
                "update:users_app_metadata",
                "delete:users_app_metadata",
                "create:users_app_metadata",
                "read:user_custom_blocks",
                "create:user_custom_blocks",
                "delete:user_custom_blocks",
                "create:user_tickets",
                "read:clients",
                "update:clients",
                "delete:clients",
                "create:clients",
                "read:client_keys",
                "update:client_keys",
                "delete:client_keys",
                "create:client_keys",
                "read:connections",
                "update:connections",
                "delete:connections",
                "create:connections",
                "read:resource_servers",
                "update:resource_servers",
                "delete:resource_servers",
                "create:resource_servers",
                "read:device_credentials",
                "update:device_credentials",
                "delete:device_credentials",
                "create:device_credentials",
                "read:rules",
                "update:rules",
                "delete:rules",
                "create:rules",
                "read:rules_configs",
                "update:rules_configs",
                "delete:rules_configs",
                "read:hooks",
                "update:hooks",
                "delete:hooks",
                "create:hooks",
                "read:actions",
                "update:actions",
                "delete:actions",
                "create:actions",
                "read:email_provider",
                "update:email_provider",
                "delete:email_provider",
                "create:email_provider",
                "blacklist:tokens",
                "read:stats",
                "read:insights",
                "read:tenant_settings",
                "update:tenant_settings",
                "read:logs",
                "read:logs_users",
                "read:shields",
                "create:shields",
                "update:shields",
                "delete:shields",
                "read:anomaly_blocks",
                "delete:anomaly_blocks",
                "update:triggers",
                "read:triggers",
                "read:grants",
                "delete:grants",
                "read:guardian_factors",
                "update:guardian_factors",
                "read:guardian_enrollments",
                "delete:guardian_enrollments",
                "create:guardian_enrollment_tickets",
                "read:user_idp_tokens",
                "create:passwords_checking_job",
                "delete:passwords_checking_job",
                "read:custom_domains",
                "delete:custom_domains",
                "create:custom_domains",
                "update:custom_domains",
                "read:email_templates",
                "create:email_templates",
                "update:email_templates",
                "read:mfa_policies",
                "update:mfa_policies",
                "read:roles",
                "create:roles",
                "delete:roles",
                "update:roles",
                "read:prompts",
                "update:prompts",
                "read:branding",
                "update:branding",
                "delete:branding",
                "read:log_streams",
                "create:log_streams",
                "delete:log_streams",
                "update:log_streams",
                "create:signing_keys",
                "read:signing_keys",
                "update:signing_keys",
                "read:limits",
                "update:limits",
                "create:role_members",
                "read:role_members",
                "delete:role_members",
                "read:entitlements",
                "read:attack_protection",
                "update:attack_protection",
                "read:organizations",
                "update:organizations",
                "create:organizations",
                "delete:organizations",
                "create:organization_members",
                "read:organization_members",
                "delete:organization_members",
                "create:organization_connections",
                "read:organization_connections",
                "update:organization_connections",
                "delete:organization_connections",
                "create:organization_member_roles",
                "read:organization_member_roles",
                "delete:organization_member_roles",
                "create:organization_invitations",
                "read:organization_invitations",
                "delete:organization_invitations"
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/client-grants/cgr_qLYwKx2lpFqml2X2",
        "body": {
            "scope": [
                "read:client_grants",
                "create:client_grants",
                "delete:client_grants",
                "update:client_grants",
                "read:users",
                "update:users",
                "delete:users",
                "create:users",
                "read:users_app_metadata",
                "update:users_app_metadata",
                "delete:users_app_metadata",
                "create:users_app_metadata",
                "read:user_custom_blocks",
                "create:user_custom_blocks",
                "delete:user_custom_blocks",
                "create:user_tickets",
                "read:clients",
                "update:clients",
                "delete:clients",
                "create:clients",
                "read:client_keys",
                "update:client_keys",
                "delete:client_keys",
                "create:client_keys",
                "read:connections",
                "update:connections",
                "delete:connections",
                "create:connections",
                "read:resource_servers",
                "update:resource_servers",
                "delete:resource_servers",
                "create:resource_servers",
                "read:device_credentials",
                "update:device_credentials",
                "delete:device_credentials",
                "create:device_credentials",
                "read:rules",
                "update:rules",
                "delete:rules",
                "create:rules",
                "read:rules_configs",
                "update:rules_configs",
                "delete:rules_configs",
                "read:hooks",
                "update:hooks",
                "delete:hooks",
                "create:hooks",
                "read:actions",
                "update:actions",
                "delete:actions",
                "create:actions",
                "read:email_provider",
                "update:email_provider",
                "delete:email_provider",
                "create:email_provider",
                "blacklist:tokens",
                "read:stats",
                "read:insights",
                "read:tenant_settings",
                "update:tenant_settings",
                "read:logs",
                "read:logs_users",
                "read:shields",
                "create:shields",
                "update:shields",
                "delete:shields",
                "read:anomaly_blocks",
                "delete:anomaly_blocks",
                "update:triggers",
                "read:triggers",
                "read:grants",
                "delete:grants",
                "read:guardian_factors",
                "update:guardian_factors",
                "read:guardian_enrollments",
                "delete:guardian_enrollments",
                "create:guardian_enrollment_tickets",
                "read:user_idp_tokens",
                "create:passwords_checking_job",
                "delete:passwords_checking_job",
                "read:custom_domains",
                "delete:custom_domains",
                "create:custom_domains",
                "update:custom_domains",
                "read:email_templates",
                "create:email_templates",
                "update:email_templates",
                "read:mfa_policies",
                "update:mfa_policies",
                "read:roles",
                "create:roles",
                "delete:roles",
                "update:roles",
                "read:prompts",
                "update:prompts",
                "read:branding",
                "update:branding",
                "delete:branding",
                "read:log_streams",
                "create:log_streams",
                "delete:log_streams",
                "update:log_streams",
                "create:signing_keys",
                "read:signing_keys",
                "update:signing_keys",
                "read:limits",
                "update:limits",
                "create:role_members",
                "read:role_members",
                "delete:role_members",
                "read:entitlements",
                "read:attack_protection",
                "update:attack_protection",
                "read:organizations",
                "update:organizations",
                "create:organizations",
                "delete:organizations",
                "create:organization_members",
                "read:organization_members",
                "delete:organization_members",
                "create:organization_connections",
                "read:organization_connections",
                "update:organization_connections",
                "delete:organization_connections",
                "create:organization_member_roles",
                "read:organization_member_roles",
                "delete:organization_member_roles",
                "create:organization_invitations",
                "read:organization_invitations",
                "delete:organization_invitations"
            ]
        },
        "status": 200,
        "response": {
            "id": "cgr_qLYwKx2lpFqml2X2",
            "client_id": "XU0w5uRFW1SqpUhj2jbCSw8frIzLm0Sy",
            "audience": "https://auth0-deploy-cli-e2e.us.auth0.com/api/v2/",
            "scope": [
                "read:client_grants",
                "create:client_grants",
                "delete:client_grants",
                "update:client_grants",
                "read:users",
                "update:users",
                "delete:users",
                "create:users",
                "read:users_app_metadata",
                "update:users_app_metadata",
                "delete:users_app_metadata",
                "create:users_app_metadata",
                "read:user_custom_blocks",
                "create:user_custom_blocks",
                "delete:user_custom_blocks",
                "create:user_tickets",
                "read:clients",
                "update:clients",
                "delete:clients",
                "create:clients",
                "read:client_keys",
                "update:client_keys",
                "delete:client_keys",
                "create:client_keys",
                "read:connections",
                "update:connections",
                "delete:connections",
                "create:connections",
                "read:resource_servers",
                "update:resource_servers",
                "delete:resource_servers",
                "create:resource_servers",
                "read:device_credentials",
                "update:device_credentials",
                "delete:device_credentials",
                "create:device_credentials",
                "read:rules",
                "update:rules",
                "delete:rules",
                "create:rules",
                "read:rules_configs",
                "update:rules_configs",
                "delete:rules_configs",
                "read:hooks",
                "update:hooks",
                "delete:hooks",
                "create:hooks",
                "read:actions",
                "update:actions",
                "delete:actions",
                "create:actions",
                "read:email_provider",
                "update:email_provider",
                "delete:email_provider",
                "create:email_provider",
                "blacklist:tokens",
                "read:stats",
                "read:insights",
                "read:tenant_settings",
                "update:tenant_settings",
                "read:logs",
                "read:logs_users",
                "read:shields",
                "create:shields",
                "update:shields",
                "delete:shields",
                "read:anomaly_blocks",
                "delete:anomaly_blocks",
                "update:triggers",
                "read:triggers",
                "read:grants",
                "delete:grants",
                "read:guardian_factors",
                "update:guardian_factors",
                "read:guardian_enrollments",
                "delete:guardian_enrollments",
                "create:guardian_enrollment_tickets",
                "read:user_idp_tokens",
                "create:passwords_checking_job",
                "delete:passwords_checking_job",
                "read:custom_domains",
                "delete:custom_domains",
                "create:custom_domains",
                "update:custom_domains",
                "read:email_templates",
                "create:email_templates",
                "update:email_templates",
                "read:mfa_policies",
                "update:mfa_policies",
                "read:roles",
                "create:roles",
                "delete:roles",
                "update:roles",
                "read:prompts",
                "update:prompts",
                "read:branding",
                "update:branding",
                "delete:branding",
                "read:log_streams",
                "create:log_streams",
                "delete:log_streams",
                "update:log_streams",
                "create:signing_keys",
                "read:signing_keys",
                "update:signing_keys",
                "read:limits",
                "update:limits",
                "create:role_members",
                "read:role_members",
                "delete:role_members",
                "read:entitlements",
                "read:attack_protection",
                "update:attack_protection",
                "read:organizations",
                "update:organizations",
                "create:organizations",
                "delete:organizations",
                "create:organization_members",
                "read:organization_members",
                "delete:organization_members",
                "create:organization_connections",
                "read:organization_connections",
                "update:organization_connections",
                "delete:organization_connections",
                "create:organization_member_roles",
                "read:organization_member_roles",
                "delete:organization_member_roles",
                "create:organization_invitations",
                "read:organization_invitations",
                "delete:organization_invitations"
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/roles?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "roles": [
                {
                    "id": "rol_wcV6kDjzalQO0sdX",
                    "name": "Admin",
                    "description": "Can read and write things"
                },
                {
                    "id": "rol_Ts4uBi7Ldr8h2a9U",
                    "name": "Reader",
                    "description": "Can only read things"
                },
                {
                    "id": "rol_WlBcFYlpZ389Ejeu",
                    "name": "read_only",
                    "description": "Read Only"
                },
                {
                    "id": "rol_dk0j8wmM5cqTmJtv",
                    "name": "read_osnly",
                    "description": "Readz Only"
                }
            ],
            "start": 0,
            "limit": 100,
            "total": 4
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/roles/rol_wcV6kDjzalQO0sdX/permissions?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "permissions": [],
            "start": 0,
            "limit": 100,
            "total": 0
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/roles/rol_Ts4uBi7Ldr8h2a9U/permissions?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "permissions": [],
            "start": 0,
            "limit": 100,
            "total": 0
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/roles/rol_WlBcFYlpZ389Ejeu/permissions?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "permissions": [],
            "start": 0,
            "limit": 100,
            "total": 0
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/roles/rol_dk0j8wmM5cqTmJtv/permissions?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "permissions": [],
            "start": 0,
            "limit": 100,
            "total": 0
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/roles/rol_WlBcFYlpZ389Ejeu",
        "body": {
            "name": "read_only",
            "description": "Read Only"
        },
        "status": 200,
        "response": {
            "id": "rol_WlBcFYlpZ389Ejeu",
            "name": "read_only",
            "description": "Read Only"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/roles/rol_Ts4uBi7Ldr8h2a9U",
        "body": {
            "name": "Reader",
            "description": "Can only read things"
        },
        "status": 200,
        "response": {
            "id": "rol_Ts4uBi7Ldr8h2a9U",
            "name": "Reader",
            "description": "Can only read things"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/roles/rol_wcV6kDjzalQO0sdX",
        "body": {
            "name": "Admin",
            "description": "Can read and write things"
        },
        "status": 200,
        "response": {
            "id": "rol_wcV6kDjzalQO0sdX",
            "name": "Admin",
            "description": "Can read and write things"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/roles/rol_dk0j8wmM5cqTmJtv",
        "body": {
            "name": "read_osnly",
            "description": "Readz Only"
        },
        "status": 200,
        "response": {
            "id": "rol_dk0j8wmM5cqTmJtv",
            "name": "read_osnly",
            "description": "Readz Only"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/actions/actions?page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "actions": [
                {
                    "id": "ba3c7735-4129-4795-90bc-a0d2e710446f",
                    "name": "My Custom Action",
                    "supported_triggers": [
                        {
                            "id": "post-login",
                            "version": "v2"
                        }
                    ],
                    "created_at": "2023-06-08T11:54:13.417080135Z",
                    "updated_at": "2023-06-08T11:54:13.423062084Z",
                    "code": "/**\n * Handler that will be called during the execution of a PostLogin flow.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\nexports.onExecutePostLogin = async (event, api) => {\n  console.log('Some custom action!');\n};\n\n/**\n * Handler that will be invoked when this action is resuming after an external redirect. If your\n * onExecutePostLogin function does not perform a redirect, this function can be safely ignored.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\n// exports.onContinuePostLogin = async (event, api) => {\n// };\n",
                    "dependencies": [],
                    "runtime": "node16",
                    "status": "built",
                    "secrets": [],
                    "current_version": {
                        "id": "fd271806-041c-4414-b905-680d7cbf56f0",
                        "code": "/**\n * Handler that will be called during the execution of a PostLogin flow.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\nexports.onExecutePostLogin = async (event, api) => {\n  console.log('Some custom action!');\n};\n\n/**\n * Handler that will be invoked when this action is resuming after an external redirect. If your\n * onExecutePostLogin function does not perform a redirect, this function can be safely ignored.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\n// exports.onContinuePostLogin = async (event, api) => {\n// };\n",
                        "runtime": "node16",
                        "status": "BUILT",
                        "number": 1,
                        "build_time": "2023-06-08T11:54:13.785454473Z",
                        "created_at": "2023-06-08T11:54:13.676371626Z",
                        "updated_at": "2023-06-08T11:54:13.787140416Z"
                    },
                    "deployed_version": {
                        "code": "/**\n * Handler that will be called during the execution of a PostLogin flow.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\nexports.onExecutePostLogin = async (event, api) => {\n  console.log('Some custom action!');\n};\n\n/**\n * Handler that will be invoked when this action is resuming after an external redirect. If your\n * onExecutePostLogin function does not perform a redirect, this function can be safely ignored.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\n// exports.onContinuePostLogin = async (event, api) => {\n// };\n",
                        "dependencies": [],
                        "id": "fd271806-041c-4414-b905-680d7cbf56f0",
                        "deployed": true,
                        "number": 1,
                        "built_at": "2023-06-08T11:54:13.785454473Z",
                        "secrets": [],
                        "status": "built",
                        "created_at": "2023-06-08T11:54:13.676371626Z",
                        "updated_at": "2023-06-08T11:54:13.787140416Z",
                        "runtime": "node16",
                        "supported_triggers": [
                            {
                                "id": "post-login",
                                "version": "v2"
                            }
                        ]
                    },
                    "all_changes_deployed": true
                }
            ],
            "total": 1,
            "per_page": 100
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/actions/actions/ba3c7735-4129-4795-90bc-a0d2e710446f",
        "body": {
            "name": "My Custom Action",
            "code": "/**\n * Handler that will be called during the execution of a PostLogin flow.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\nexports.onExecutePostLogin = async (event, api) => {\n  console.log('Some custom action!');\n};\n\n/**\n * Handler that will be invoked when this action is resuming after an external redirect. If your\n * onExecutePostLogin function does not perform a redirect, this function can be safely ignored.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\n// exports.onContinuePostLogin = async (event, api) => {\n// };\n",
            "dependencies": [],
            "runtime": "node16",
            "secrets": [],
            "supported_triggers": [
                {
                    "id": "post-login",
                    "version": "v2"
                }
            ]
        },
        "status": 200,
        "response": {
            "id": "ba3c7735-4129-4795-90bc-a0d2e710446f",
            "name": "My Custom Action",
            "supported_triggers": [
                {
                    "id": "post-login",
                    "version": "v2"
                }
            ],
            "created_at": "2023-06-08T11:54:13.417080135Z",
            "updated_at": "2023-06-08T11:54:41.997331984Z",
            "code": "/**\n * Handler that will be called during the execution of a PostLogin flow.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\nexports.onExecutePostLogin = async (event, api) => {\n  console.log('Some custom action!');\n};\n\n/**\n * Handler that will be invoked when this action is resuming after an external redirect. If your\n * onExecutePostLogin function does not perform a redirect, this function can be safely ignored.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\n// exports.onContinuePostLogin = async (event, api) => {\n// };\n",
            "dependencies": [],
            "runtime": "node16",
            "status": "pending",
            "secrets": [],
            "current_version": {
                "id": "fd271806-041c-4414-b905-680d7cbf56f0",
                "code": "/**\n * Handler that will be called during the execution of a PostLogin flow.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\nexports.onExecutePostLogin = async (event, api) => {\n  console.log('Some custom action!');\n};\n\n/**\n * Handler that will be invoked when this action is resuming after an external redirect. If your\n * onExecutePostLogin function does not perform a redirect, this function can be safely ignored.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\n// exports.onContinuePostLogin = async (event, api) => {\n// };\n",
                "runtime": "node16",
                "status": "BUILT",
                "number": 1,
                "build_time": "2023-06-08T11:54:13.785454473Z",
                "created_at": "2023-06-08T11:54:13.676371626Z",
                "updated_at": "2023-06-08T11:54:13.787140416Z"
            },
            "deployed_version": {
                "code": "/**\n * Handler that will be called during the execution of a PostLogin flow.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\nexports.onExecutePostLogin = async (event, api) => {\n  console.log('Some custom action!');\n};\n\n/**\n * Handler that will be invoked when this action is resuming after an external redirect. If your\n * onExecutePostLogin function does not perform a redirect, this function can be safely ignored.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\n// exports.onContinuePostLogin = async (event, api) => {\n// };\n",
                "dependencies": [],
                "id": "fd271806-041c-4414-b905-680d7cbf56f0",
                "deployed": true,
                "number": 1,
                "built_at": "2023-06-08T11:54:13.785454473Z",
                "secrets": [],
                "status": "built",
                "created_at": "2023-06-08T11:54:13.676371626Z",
                "updated_at": "2023-06-08T11:54:13.787140416Z",
                "runtime": "node16",
                "supported_triggers": [
                    {
                        "id": "post-login",
                        "version": "v2"
                    }
                ]
            },
            "all_changes_deployed": true
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/actions/actions?page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "actions": [
                {
                    "id": "ba3c7735-4129-4795-90bc-a0d2e710446f",
                    "name": "My Custom Action",
                    "supported_triggers": [
                        {
                            "id": "post-login",
                            "version": "v2"
                        }
                    ],
                    "created_at": "2023-06-08T11:54:13.417080135Z",
                    "updated_at": "2023-06-08T11:54:41.997331984Z",
                    "code": "/**\n * Handler that will be called during the execution of a PostLogin flow.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\nexports.onExecutePostLogin = async (event, api) => {\n  console.log('Some custom action!');\n};\n\n/**\n * Handler that will be invoked when this action is resuming after an external redirect. If your\n * onExecutePostLogin function does not perform a redirect, this function can be safely ignored.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\n// exports.onContinuePostLogin = async (event, api) => {\n// };\n",
                    "dependencies": [],
                    "runtime": "node16",
                    "status": "built",
                    "secrets": [],
                    "current_version": {
                        "id": "fd271806-041c-4414-b905-680d7cbf56f0",
                        "code": "/**\n * Handler that will be called during the execution of a PostLogin flow.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\nexports.onExecutePostLogin = async (event, api) => {\n  console.log('Some custom action!');\n};\n\n/**\n * Handler that will be invoked when this action is resuming after an external redirect. If your\n * onExecutePostLogin function does not perform a redirect, this function can be safely ignored.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\n// exports.onContinuePostLogin = async (event, api) => {\n// };\n",
                        "runtime": "node16",
                        "status": "BUILT",
                        "number": 1,
                        "build_time": "2023-06-08T11:54:13.785454473Z",
                        "created_at": "2023-06-08T11:54:13.676371626Z",
                        "updated_at": "2023-06-08T11:54:13.787140416Z"
                    },
                    "deployed_version": {
                        "code": "/**\n * Handler that will be called during the execution of a PostLogin flow.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\nexports.onExecutePostLogin = async (event, api) => {\n  console.log('Some custom action!');\n};\n\n/**\n * Handler that will be invoked when this action is resuming after an external redirect. If your\n * onExecutePostLogin function does not perform a redirect, this function can be safely ignored.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\n// exports.onContinuePostLogin = async (event, api) => {\n// };\n",
                        "dependencies": [],
                        "id": "fd271806-041c-4414-b905-680d7cbf56f0",
                        "deployed": true,
                        "number": 1,
                        "built_at": "2023-06-08T11:54:13.785454473Z",
                        "secrets": [],
                        "status": "built",
                        "created_at": "2023-06-08T11:54:13.676371626Z",
                        "updated_at": "2023-06-08T11:54:13.787140416Z",
                        "runtime": "node16",
                        "supported_triggers": [
                            {
                                "id": "post-login",
                                "version": "v2"
                            }
                        ]
                    },
                    "all_changes_deployed": true
                }
            ],
            "total": 1,
            "per_page": 100
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "POST",
        "path": "/api/v2/actions/actions/ba3c7735-4129-4795-90bc-a0d2e710446f/deploy",
        "body": {},
        "status": 200,
        "response": {
            "code": "/**\n * Handler that will be called during the execution of a PostLogin flow.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\nexports.onExecutePostLogin = async (event, api) => {\n  console.log('Some custom action!');\n};\n\n/**\n * Handler that will be invoked when this action is resuming after an external redirect. If your\n * onExecutePostLogin function does not perform a redirect, this function can be safely ignored.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\n// exports.onContinuePostLogin = async (event, api) => {\n// };\n",
            "dependencies": [],
            "id": "57ca6419-0699-42c9-9a0e-ac8b66063b7e",
            "deployed": false,
            "number": 2,
            "secrets": [],
            "status": "built",
            "created_at": "2023-06-08T11:54:42.391096187Z",
            "updated_at": "2023-06-08T11:54:42.391096187Z",
            "runtime": "node16",
            "supported_triggers": [
                {
                    "id": "post-login",
                    "version": "v2"
                }
            ],
            "action": {
                "id": "ba3c7735-4129-4795-90bc-a0d2e710446f",
                "name": "My Custom Action",
                "supported_triggers": [
                    {
                        "id": "post-login",
                        "version": "v2"
                    }
                ],
                "created_at": "2023-06-08T11:54:13.417080135Z",
                "updated_at": "2023-06-08T11:54:41.989555228Z",
                "all_changes_deployed": false
            }
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/organizations?include_totals=true",
        "body": "",
        "status": 200,
        "response": {
            "organizations": [
                {
                    "id": "org_ShVRhWhyBzS8oZU9",
                    "name": "org1",
                    "display_name": "Organization",
                    "branding": {
                        "colors": {
                            "page_background": "#fff5f5",
                            "primary": "#57ddff"
                        }
                    }
                },
                {
                    "id": "org_KCee3xhTZHWuMJ5P",
                    "name": "org2",
                    "display_name": "Organization2"
                }
            ],
            "start": 0,
            "limit": 50,
            "total": 2
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/organizations?include_totals=true&take=50",
        "body": "",
        "status": 200,
        "response": {
            "organizations": [
                {
                    "id": "org_ShVRhWhyBzS8oZU9",
                    "name": "org1",
                    "display_name": "Organization",
                    "branding": {
                        "colors": {
                            "page_background": "#fff5f5",
                            "primary": "#57ddff"
                        }
                    }
                },
                {
                    "id": "org_KCee3xhTZHWuMJ5P",
                    "name": "org2",
                    "display_name": "Organization2"
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/organizations/org_ShVRhWhyBzS8oZU9/enabled_connections",
        "body": "",
        "status": 200,
        "response": [],
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/organizations/org_KCee3xhTZHWuMJ5P/enabled_connections",
        "body": "",
        "status": 200,
        "response": [],
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/connections?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 2,
            "start": 0,
            "limit": 100,
            "connections": [
                {
                    "id": "con_C0M89u62wEIGN19r",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "import_mode": false,
                        "customScripts": {
                            "login": "function login(email, password, callback) {\n  // This script should authenticate a user against the credentials stored in\n  // your database.\n  // It is executed when a user attempts to log in or immediately after signing\n  // up (as a verification that the user was successfully signed up).\n  //\n  // Everything returned by this script will be set as part of the user profile\n  // and will be visible by any of the tenant admins. Avoid adding attributes\n  // with values such as passwords, keys, secrets, etc.\n  //\n  // The `password` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database. For example:\n  //\n  //     var bcrypt = require('bcrypt@0.8.5');\n  //     bcrypt.compare(password, dbPasswordHash, function(err, res)) { ... }\n  //\n  // There are three ways this script can finish:\n  // 1. The user's credentials are valid. The returned user profile should be in\n  // the following format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema\n  //     var profile = {\n  //       user_id: ..., // user_id is mandatory\n  //       email: ...,\n  //       [...]\n  //     };\n  //     callback(null, profile);\n  // 2. The user's credentials are invalid\n  //     callback(new WrongUsernameOrPasswordError(email, \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n  //\n  // A list of Node.js modules which can be referenced is available here:\n  //\n  //    https://tehsis.github.io/webtaskio-canirequire/\n  console.log('AYYYYYE');\n\n  const msg =\n    'Please implement the Login script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "create": "function create(user, callback) {\n  // This script should create a user entry in your existing database. It will\n  // be executed when a user attempts to sign up, or when a user is created\n  // through the Auth0 dashboard or API.\n  // When this script has finished executing, the Login script will be\n  // executed immediately afterwards, to verify that the user was created\n  // successfully.\n  //\n  // The user object will always contain the following properties:\n  // * email: the user's email\n  // * password: the password entered by the user, in plain text\n  // * tenant: the name of this Auth0 account\n  // * client_id: the client ID of the application where the user signed up, or\n  //              API key if created through the API or Auth0 dashboard\n  // * connection: the name of this database connection\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully created\n  //     callback(null);\n  // 2. This user already exists in your database\n  //     callback(new ValidationError(\"user_exists\", \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Create script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "delete": "function remove(id, callback) {\n  // This script remove a user from your existing database.\n  // It is executed whenever a user is deleted from the API or Auth0 dashboard.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user was removed successfully:\n  //     callback(null);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Delete script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "verify": "function verify(email, callback) {\n  // This script should mark the current user's email address as verified in\n  // your database.\n  // It is executed whenever a user clicks the verification link sent by email.\n  // These emails can be customized at https://manage.auth0.com/#/emails.\n  // It is safe to assume that the user's email already exists in your database,\n  // because verification emails, if enabled, are sent immediately after a\n  // successful signup.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user's email was verified successfully\n  //     callback(null, true);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the verification link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Verify script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "get_user": "function getByEmail(email, callback) {\n  // This script should retrieve a user profile from your existing database,\n  // without authenticating the user.\n  // It is used to check if a user exists before executing flows that do not\n  // require authentication (signup and password reset).\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully found. The profile should be in the following\n  // format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema.\n  //     callback(null, profile);\n  // 2. A user was not found\n  //     callback(null);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Get User script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "change_password": "function changePassword(email, newPassword, callback) {\n  // This script should change the password stored for the current user in your\n  // database. It is executed when the user clicks on the confirmation link\n  // after a reset password request.\n  // The content and behavior of password confirmation emails can be customized\n  // here: https://manage.auth0.com/#/emails\n  // The `newPassword` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database.\n  //\n  // There are three ways that this script can finish:\n  // 1. The user's password was updated successfully:\n  //     callback(null, true);\n  // 2. The user's password was not updated:\n  //     callback(null, false);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the confirmation link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Change Password script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n"
                        },
                        "disable_signup": false,
                        "passwordPolicy": "low",
                        "password_history": {
                            "size": 5,
                            "enable": false
                        },
                        "strategy_version": 2,
                        "requires_username": true,
                        "password_dictionary": {
                            "enable": true,
                            "dictionary": []
                        },
                        "brute_force_protection": true,
                        "password_no_personal_info": {
                            "enable": true
                        },
                        "password_complexity_options": {
                            "min_length": 8
                        },
                        "enabledDatabaseCustomization": true
                    },
                    "strategy": "auth0",
                    "name": "boo-baz-db-connection-test",
                    "is_domain_connection": false,
                    "realms": [
                        "boo-baz-db-connection-test"
                    ],
                    "enabled_clients": [
                        "1vm5ohgMsawRxt6Fa6Npk1UYJ1l2nuvE",
                        "QzMkcMQ8CCVt4Xxe032vVWVUbRe2Yc9X"
                    ]
                },
                {
                    "id": "con_F8LduAZ8OQNa5Opz",
                    "options": {
                        "email": true,
                        "scope": [
                            "email",
                            "profile"
                        ],
                        "profile": true
                    },
                    "strategy": "google-oauth2",
                    "name": "google-oauth2",
                    "is_domain_connection": false,
                    "realms": [
                        "google-oauth2"
                    ],
                    "enabled_clients": [
                        "YSecmXJKthxfPEeSdw9MmHYvKirQMDaJ",
                        "QzMkcMQ8CCVt4Xxe032vVWVUbRe2Yc9X"
                    ]
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/organizations/org_ShVRhWhyBzS8oZU9",
        "body": {
            "branding": {
                "colors": {
                    "page_background": "#fff5f5",
                    "primary": "#57ddff"
                }
            },
            "display_name": "Organization"
        },
        "status": 200,
        "response": {
            "branding": {
                "colors": {
                    "page_background": "#fff5f5",
                    "primary": "#57ddff"
                }
            },
            "id": "org_ShVRhWhyBzS8oZU9",
            "display_name": "Organization",
            "name": "org1"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/organizations/org_KCee3xhTZHWuMJ5P",
        "body": {
            "display_name": "Organization2"
        },
        "status": 200,
        "response": {
            "id": "org_KCee3xhTZHWuMJ5P",
            "display_name": "Organization2",
            "name": "org2"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/tenants/settings",
        "body": {
            "allowed_logout_urls": [
                "https://mycompany.org/logoutCallback"
            ],
            "enabled_locales": [
                "en"
            ],
            "flags": {
                "change_pwd_flow_v1": false,
                "enable_apis_section": false,
                "enable_client_connections": false,
                "enable_custom_domain_in_emails": false,
                "enable_dynamic_client_registration": false,
                "enable_public_signup_user_exists_error": true,
                "revoke_refresh_token_grant": false,
                "disable_clickjack_protection_headers": false,
                "enable_pipeline2": false
            },
            "friendly_name": "My Test Tenant",
            "picture_url": "https://upload.wikimedia.org/wikipedia/commons/0/0d/Grandmas_marathon_finishers.png",
            "session_cookie": {
                "mode": "non-persistent"
            },
            "support_email": "support@mycompany.org",
            "support_url": "https://mycompany.org/support",
            "universal_login": {
                "colors": {
                    "primary": "#F8F8F2",
                    "page_background": "#222221"
                }
            },
            "session_lifetime_in_minutes": 181,
            "idle_session_lifetime_in_minutes": 60
        },
        "status": 200,
        "response": {
            "allowed_logout_urls": [
                "https://mycompany.org/logoutCallback"
            ],
            "change_password": {
                "enabled": true,
                "html": "<html>Change Password</html>\n"
            },
            "enabled_locales": [
                "en"
            ],
            "error_page": {
                "html": "<html>Error Page</html>\n",
                "show_log_link": false,
                "url": "https://mycompany.org/error"
            },
            "flags": {
                "allow_changing_enable_sso": false,
                "allow_legacy_delegation_grant_types": true,
                "allow_legacy_ro_grant_types": true,
                "cannot_change_enforce_client_authentication_on_passwordless_start": true,
                "change_pwd_flow_v1": false,
                "disable_impersonation": true,
                "enable_apis_section": false,
                "enable_client_connections": false,
                "enable_custom_domain_in_emails": false,
                "enable_dynamic_client_registration": false,
                "enable_legacy_logs_search_v2": false,
                "enable_public_signup_user_exists_error": true,
                "enable_sso": true,
                "enforce_client_authentication_on_passwordless_start": true,
                "universal_login": true,
                "use_scope_descriptions_for_consent": false,
                "revoke_refresh_token_grant": false,
                "disable_clickjack_protection_headers": false,
                "enable_pipeline2": false
            },
            "friendly_name": "My Test Tenant",
            "guardian_mfa_page": {
                "enabled": true,
                "html": "<html>MFA</html>\n"
            },
            "idle_session_lifetime": 1,
            "picture_url": "https://upload.wikimedia.org/wikipedia/commons/0/0d/Grandmas_marathon_finishers.png",
            "sandbox_version": "12",
            "session_lifetime": 3.0166666666666666,
            "support_email": "support@mycompany.org",
            "support_url": "https://mycompany.org/support",
            "universal_login": {
                "colors": {
                    "primary": "#F8F8F2",
                    "page_background": "#222221"
                }
            },
            "session_cookie": {
                "mode": "non-persistent"
            }
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/rules?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 1,
            "start": 0,
            "limit": 100,
            "rules": [
                {
                    "id": "rul_RK5bxiG7dwT4qznc",
                    "enabled": true,
                    "script": "function (user, context, callback) {\n  callback(null, user, context);\n}\n",
                    "name": "my-rule",
                    "order": 2,
                    "stage": "login_success"
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/rules?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 1,
            "start": 0,
            "limit": 100,
            "rules": [
                {
                    "id": "rul_RK5bxiG7dwT4qznc",
                    "enabled": true,
                    "script": "function (user, context, callback) {\n  callback(null, user, context);\n}\n",
                    "name": "my-rule",
                    "order": 2,
                    "stage": "login_success"
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "DELETE",
        "path": "/api/v2/rules/rul_RK5bxiG7dwT4qznc",
        "body": {},
        "status": 204,
        "response": "",
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/hooks?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 0,
            "start": 0,
            "limit": 100,
            "hooks": []
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/hooks?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 0,
            "start": 0,
            "limit": 100,
            "hooks": []
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/resource-servers?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 1,
            "start": 0,
            "limit": 100,
            "resource_servers": [
                {
                    "id": "62debacc54b4171c0378ea1f",
                    "name": "Auth0 Management API",
                    "identifier": "https://auth0-deploy-cli-e2e.us.auth0.com/api/v2/",
                    "allow_offline_access": false,
                    "skip_consent_for_verifiable_first_party_clients": false,
                    "token_lifetime": 86400,
                    "token_lifetime_for_web": 7200,
                    "signing_alg": "RS256",
                    "scopes": [
                        {
                            "description": "Read Client Grants",
                            "value": "read:client_grants"
                        },
                        {
                            "description": "Create Client Grants",
                            "value": "create:client_grants"
                        },
                        {
                            "description": "Delete Client Grants",
                            "value": "delete:client_grants"
                        },
                        {
                            "description": "Update Client Grants",
                            "value": "update:client_grants"
                        },
                        {
                            "description": "Read Users",
                            "value": "read:users"
                        },
                        {
                            "description": "Update Users",
                            "value": "update:users"
                        },
                        {
                            "description": "Delete Users",
                            "value": "delete:users"
                        },
                        {
                            "description": "Create Users",
                            "value": "create:users"
                        },
                        {
                            "description": "Read Users App Metadata",
                            "value": "read:users_app_metadata"
                        },
                        {
                            "description": "Update Users App Metadata",
                            "value": "update:users_app_metadata"
                        },
                        {
                            "description": "Delete Users App Metadata",
                            "value": "delete:users_app_metadata"
                        },
                        {
                            "description": "Create Users App Metadata",
                            "value": "create:users_app_metadata"
                        },
                        {
                            "description": "Read Custom User Blocks",
                            "value": "read:user_custom_blocks"
                        },
                        {
                            "description": "Create Custom User Blocks",
                            "value": "create:user_custom_blocks"
                        },
                        {
                            "description": "Delete Custom User Blocks",
                            "value": "delete:user_custom_blocks"
                        },
                        {
                            "description": "Create User Tickets",
                            "value": "create:user_tickets"
                        },
                        {
                            "description": "Read Clients",
                            "value": "read:clients"
                        },
                        {
                            "description": "Update Clients",
                            "value": "update:clients"
                        },
                        {
                            "description": "Delete Clients",
                            "value": "delete:clients"
                        },
                        {
                            "description": "Create Clients",
                            "value": "create:clients"
                        },
                        {
                            "description": "Read Client Keys",
                            "value": "read:client_keys"
                        },
                        {
                            "description": "Update Client Keys",
                            "value": "update:client_keys"
                        },
                        {
                            "description": "Delete Client Keys",
                            "value": "delete:client_keys"
                        },
                        {
                            "description": "Create Client Keys",
                            "value": "create:client_keys"
                        },
                        {
                            "description": "Read Connections",
                            "value": "read:connections"
                        },
                        {
                            "description": "Update Connections",
                            "value": "update:connections"
                        },
                        {
                            "description": "Delete Connections",
                            "value": "delete:connections"
                        },
                        {
                            "description": "Create Connections",
                            "value": "create:connections"
                        },
                        {
                            "description": "Read Resource Servers",
                            "value": "read:resource_servers"
                        },
                        {
                            "description": "Update Resource Servers",
                            "value": "update:resource_servers"
                        },
                        {
                            "description": "Delete Resource Servers",
                            "value": "delete:resource_servers"
                        },
                        {
                            "description": "Create Resource Servers",
                            "value": "create:resource_servers"
                        },
                        {
                            "description": "Read Device Credentials",
                            "value": "read:device_credentials"
                        },
                        {
                            "description": "Update Device Credentials",
                            "value": "update:device_credentials"
                        },
                        {
                            "description": "Delete Device Credentials",
                            "value": "delete:device_credentials"
                        },
                        {
                            "description": "Create Device Credentials",
                            "value": "create:device_credentials"
                        },
                        {
                            "description": "Read Rules",
                            "value": "read:rules"
                        },
                        {
                            "description": "Update Rules",
                            "value": "update:rules"
                        },
                        {
                            "description": "Delete Rules",
                            "value": "delete:rules"
                        },
                        {
                            "description": "Create Rules",
                            "value": "create:rules"
                        },
                        {
                            "description": "Read Rules Configs",
                            "value": "read:rules_configs"
                        },
                        {
                            "description": "Update Rules Configs",
                            "value": "update:rules_configs"
                        },
                        {
                            "description": "Delete Rules Configs",
                            "value": "delete:rules_configs"
                        },
                        {
                            "description": "Read Hooks",
                            "value": "read:hooks"
                        },
                        {
                            "description": "Update Hooks",
                            "value": "update:hooks"
                        },
                        {
                            "description": "Delete Hooks",
                            "value": "delete:hooks"
                        },
                        {
                            "description": "Create Hooks",
                            "value": "create:hooks"
                        },
                        {
                            "description": "Read Actions",
                            "value": "read:actions"
                        },
                        {
                            "description": "Update Actions",
                            "value": "update:actions"
                        },
                        {
                            "description": "Delete Actions",
                            "value": "delete:actions"
                        },
                        {
                            "description": "Create Actions",
                            "value": "create:actions"
                        },
                        {
                            "description": "Read Email Provider",
                            "value": "read:email_provider"
                        },
                        {
                            "description": "Update Email Provider",
                            "value": "update:email_provider"
                        },
                        {
                            "description": "Delete Email Provider",
                            "value": "delete:email_provider"
                        },
                        {
                            "description": "Create Email Provider",
                            "value": "create:email_provider"
                        },
                        {
                            "description": "Blacklist Tokens",
                            "value": "blacklist:tokens"
                        },
                        {
                            "description": "Read Stats",
                            "value": "read:stats"
                        },
                        {
                            "description": "Read Insights",
                            "value": "read:insights"
                        },
                        {
                            "description": "Read Tenant Settings",
                            "value": "read:tenant_settings"
                        },
                        {
                            "description": "Update Tenant Settings",
                            "value": "update:tenant_settings"
                        },
                        {
                            "description": "Read Logs",
                            "value": "read:logs"
                        },
                        {
                            "description": "Read logs relating to users",
                            "value": "read:logs_users"
                        },
                        {
                            "description": "Read Shields",
                            "value": "read:shields"
                        },
                        {
                            "description": "Create Shields",
                            "value": "create:shields"
                        },
                        {
                            "description": "Update Shields",
                            "value": "update:shields"
                        },
                        {
                            "description": "Delete Shields",
                            "value": "delete:shields"
                        },
                        {
                            "description": "Read Anomaly Detection Blocks",
                            "value": "read:anomaly_blocks"
                        },
                        {
                            "description": "Delete Anomaly Detection Blocks",
                            "value": "delete:anomaly_blocks"
                        },
                        {
                            "description": "Update Triggers",
                            "value": "update:triggers"
                        },
                        {
                            "description": "Read Triggers",
                            "value": "read:triggers"
                        },
                        {
                            "description": "Read User Grants",
                            "value": "read:grants"
                        },
                        {
                            "description": "Delete User Grants",
                            "value": "delete:grants"
                        },
                        {
                            "description": "Read Guardian factors configuration",
                            "value": "read:guardian_factors"
                        },
                        {
                            "description": "Update Guardian factors",
                            "value": "update:guardian_factors"
                        },
                        {
                            "description": "Read Guardian enrollments",
                            "value": "read:guardian_enrollments"
                        },
                        {
                            "description": "Delete Guardian enrollments",
                            "value": "delete:guardian_enrollments"
                        },
                        {
                            "description": "Create enrollment tickets for Guardian",
                            "value": "create:guardian_enrollment_tickets"
                        },
                        {
                            "description": "Read Users IDP tokens",
                            "value": "read:user_idp_tokens"
                        },
                        {
                            "description": "Create password checking jobs",
                            "value": "create:passwords_checking_job"
                        },
                        {
                            "description": "Deletes password checking job and all its resources",
                            "value": "delete:passwords_checking_job"
                        },
                        {
                            "description": "Read custom domains configurations",
                            "value": "read:custom_domains"
                        },
                        {
                            "description": "Delete custom domains configurations",
                            "value": "delete:custom_domains"
                        },
                        {
                            "description": "Configure new custom domains",
                            "value": "create:custom_domains"
                        },
                        {
                            "description": "Update custom domain configurations",
                            "value": "update:custom_domains"
                        },
                        {
                            "description": "Read email templates",
                            "value": "read:email_templates"
                        },
                        {
                            "description": "Create email templates",
                            "value": "create:email_templates"
                        },
                        {
                            "description": "Update email templates",
                            "value": "update:email_templates"
                        },
                        {
                            "description": "Read Multifactor Authentication policies",
                            "value": "read:mfa_policies"
                        },
                        {
                            "description": "Update Multifactor Authentication policies",
                            "value": "update:mfa_policies"
                        },
                        {
                            "description": "Read roles",
                            "value": "read:roles"
                        },
                        {
                            "description": "Create roles",
                            "value": "create:roles"
                        },
                        {
                            "description": "Delete roles",
                            "value": "delete:roles"
                        },
                        {
                            "description": "Update roles",
                            "value": "update:roles"
                        },
                        {
                            "description": "Read prompts settings",
                            "value": "read:prompts"
                        },
                        {
                            "description": "Update prompts settings",
                            "value": "update:prompts"
                        },
                        {
                            "description": "Read branding settings",
                            "value": "read:branding"
                        },
                        {
                            "description": "Update branding settings",
                            "value": "update:branding"
                        },
                        {
                            "description": "Delete branding settings",
                            "value": "delete:branding"
                        },
                        {
                            "description": "Read log_streams",
                            "value": "read:log_streams"
                        },
                        {
                            "description": "Create log_streams",
                            "value": "create:log_streams"
                        },
                        {
                            "description": "Delete log_streams",
                            "value": "delete:log_streams"
                        },
                        {
                            "description": "Update log_streams",
                            "value": "update:log_streams"
                        },
                        {
                            "description": "Create signing keys",
                            "value": "create:signing_keys"
                        },
                        {
                            "description": "Read signing keys",
                            "value": "read:signing_keys"
                        },
                        {
                            "description": "Update signing keys",
                            "value": "update:signing_keys"
                        },
                        {
                            "description": "Read entity limits",
                            "value": "read:limits"
                        },
                        {
                            "description": "Update entity limits",
                            "value": "update:limits"
                        },
                        {
                            "description": "Create role members",
                            "value": "create:role_members"
                        },
                        {
                            "description": "Read role members",
                            "value": "read:role_members"
                        },
                        {
                            "description": "Update role members",
                            "value": "delete:role_members"
                        },
                        {
                            "description": "Read entitlements",
                            "value": "read:entitlements"
                        },
                        {
                            "description": "Read attack protection",
                            "value": "read:attack_protection"
                        },
                        {
                            "description": "Update attack protection",
                            "value": "update:attack_protection"
                        },
                        {
                            "description": "Read Organizations",
                            "value": "read:organizations"
                        },
                        {
                            "description": "Update Organizations",
                            "value": "update:organizations"
                        },
                        {
                            "description": "Create Organizations",
                            "value": "create:organizations"
                        },
                        {
                            "description": "Delete Organizations",
                            "value": "delete:organizations"
                        },
                        {
                            "description": "Create organization members",
                            "value": "create:organization_members"
                        },
                        {
                            "description": "Read organization members",
                            "value": "read:organization_members"
                        },
                        {
                            "description": "Delete organization members",
                            "value": "delete:organization_members"
                        },
                        {
                            "description": "Create organization connections",
                            "value": "create:organization_connections"
                        },
                        {
                            "description": "Read organization connections",
                            "value": "read:organization_connections"
                        },
                        {
                            "description": "Update organization connections",
                            "value": "update:organization_connections"
                        },
                        {
                            "description": "Delete organization connections",
                            "value": "delete:organization_connections"
                        },
                        {
                            "description": "Create organization member roles",
                            "value": "create:organization_member_roles"
                        },
                        {
                            "description": "Read organization member roles",
                            "value": "read:organization_member_roles"
                        },
                        {
                            "description": "Delete organization member roles",
                            "value": "delete:organization_member_roles"
                        },
                        {
                            "description": "Create organization invitations",
                            "value": "create:organization_invitations"
                        },
                        {
                            "description": "Read organization invitations",
                            "value": "read:organization_invitations"
                        },
                        {
                            "description": "Delete organization invitations",
                            "value": "delete:organization_invitations"
                        },
                        {
                            "description": "Read organization summary",
                            "value": "read:organizations_summary"
                        },
                        {
                            "description": "Create Actions Log Sessions",
                            "value": "create:actions_log_sessions"
                        },
                        {
                            "description": "Create Authentication Methods",
                            "value": "create:authentication_methods"
                        },
                        {
                            "description": "Read Authentication Methods",
                            "value": "read:authentication_methods"
                        },
                        {
                            "description": "Update Authentication Methods",
                            "value": "update:authentication_methods"
                        },
                        {
                            "description": "Delete Authentication Methods",
                            "value": "delete:authentication_methods"
                        },
                        {
                            "value": "read:client_credentials",
                            "description": "Read Client Credentials"
                        },
                        {
                            "value": "create:client_credentials",
                            "description": "Create Client Credentials"
                        },
                        {
                            "value": "update:client_credentials",
                            "description": "Update Client Credentials"
                        },
                        {
                            "value": "delete:client_credentials",
                            "description": "delete Client Credentials"
                        }
                    ],
                    "is_system": true
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/clients?include_totals=true&is_global=false&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 8,
            "start": 0,
            "limit": 100,
            "clients": [
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Deploy CLI",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "GIW99EUCF9DFExh77WPMyTMzT8NN4J3A",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "API Explorer Application",
                    "allowed_clients": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "XU0w5uRFW1SqpUhj2jbCSw8frIzLm0Sy",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Quickstarts API (Test Application)",
                    "client_metadata": {
                        "foo": "bar"
                    },
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "SGGydPjIPyKng0FSsuQlibOiw8ommNEY",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Node App",
                    "allowed_clients": [],
                    "allowed_logout_urls": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "allowed_origins": [],
                    "client_id": "1vm5ohgMsawRxt6Fa6Npk1UYJ1l2nuvE",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "regular_web",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "web_origins": [],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "The Default App",
                    "allowed_clients": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "sso": false,
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "YSecmXJKthxfPEeSdw9MmHYvKirQMDaJ",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Terraform Provider",
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "HExWXv0uOuIIXQnS9r5nwJxA5m1I6sGb",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Test SPA",
                    "allowed_clients": [],
                    "allowed_logout_urls": [
                        "http://localhost:3000"
                    ],
                    "callbacks": [
                        "http://localhost:3000"
                    ],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "expiring",
                        "leeway": 0,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "infinite_token_lifetime": false,
                        "infinite_idle_token_lifetime": false,
                        "rotation_type": "rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "3B10Z0hTUMzznwvs7wloxqEbCtFmBdH4",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "none",
                    "app_type": "spa",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token"
                    ],
                    "web_origins": [
                        "http://localhost:3000"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "auth0-deploy-cli-extension",
                    "allowed_clients": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "QzMkcMQ8CCVt4Xxe032vVWVUbRe2Yc9X",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "DELETE",
        "path": "/api/v2/clients/XU0w5uRFW1SqpUhj2jbCSw8frIzLm0Sy",
        "body": {},
        "status": 204,
        "response": "",
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "DELETE",
        "path": "/api/v2/clients/SGGydPjIPyKng0FSsuQlibOiw8ommNEY",
        "body": {},
        "status": 204,
        "response": "",
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "DELETE",
        "path": "/api/v2/clients/1vm5ohgMsawRxt6Fa6Npk1UYJ1l2nuvE",
        "body": {},
        "status": 204,
        "response": "",
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "DELETE",
        "path": "/api/v2/clients/YSecmXJKthxfPEeSdw9MmHYvKirQMDaJ",
        "body": {},
        "status": 204,
        "response": "",
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "DELETE",
        "path": "/api/v2/clients/HExWXv0uOuIIXQnS9r5nwJxA5m1I6sGb",
        "body": {},
        "status": 204,
        "response": "",
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "DELETE",
        "path": "/api/v2/clients/3B10Z0hTUMzznwvs7wloxqEbCtFmBdH4",
        "body": {},
        "status": 204,
        "response": "",
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "DELETE",
        "path": "/api/v2/clients/QzMkcMQ8CCVt4Xxe032vVWVUbRe2Yc9X",
        "body": {},
        "status": 204,
        "response": "",
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "POST",
        "path": "/api/v2/clients",
        "body": {
            "name": "Default App",
            "callbacks": [],
            "cross_origin_auth": false,
            "custom_login_page_on": true,
            "grant_types": [
                "authorization_code",
                "implicit",
                "refresh_token",
                "client_credentials"
            ],
            "is_first_party": true,
            "is_token_endpoint_ip_header_trusted": false,
            "jwt_configuration": {
                "alg": "RS256",
                "lifetime_in_seconds": 36000,
                "secret_encoded": false
            },
            "oidc_conformant": true,
            "refresh_token": {
                "expiration_type": "non-expiring",
                "leeway": 0,
                "infinite_token_lifetime": true,
                "infinite_idle_token_lifetime": true,
                "token_lifetime": 2592000,
                "idle_token_lifetime": 1296000,
                "rotation_type": "non-rotating"
            },
            "sso_disabled": false
        },
        "status": 201,
        "response": {
            "tenant": "auth0-deploy-cli-e2e",
            "global": false,
            "is_token_endpoint_ip_header_trusted": false,
            "name": "Default App",
            "callbacks": [],
            "cross_origin_auth": false,
            "is_first_party": true,
            "oidc_conformant": true,
            "refresh_token": {
                "expiration_type": "non-expiring",
                "leeway": 0,
                "infinite_token_lifetime": true,
                "infinite_idle_token_lifetime": true,
                "token_lifetime": 2592000,
                "idle_token_lifetime": 1296000,
                "rotation_type": "non-rotating"
            },
            "sso_disabled": false,
            "encrypted": true,
            "signing_keys": [
                {
                    "cert": "[REDACTED]",
                    "key": "[REDACTED]",
                    "pkcs7": "[REDACTED]",
                    "subject": "/CN=auth0-deploy-cli-e2e.us.auth0.com"
                }
            ],
            "client_id": "vJUWRvzcy4KsrFZZfpCUDyweas5Y12yB",
            "callback_url_template": false,
            "client_secret": "[REDACTED]",
            "jwt_configuration": {
                "alg": "RS256",
                "lifetime_in_seconds": 36000,
                "secret_encoded": false
            },
            "grant_types": [
                "authorization_code",
                "implicit",
                "refresh_token",
                "client_credentials"
            ],
            "custom_login_page_on": true
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/emails/provider?include_fields=true&fields=name%2Cenabled%2Ccredentials%2Csettings%2Cdefault_from_address",
        "body": "",
        "status": 200,
        "response": {
            "name": "mandrill",
            "credentials": {},
            "default_from_address": "auth0-user@auth0.com",
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "DELETE",
        "path": "/api/v2/emails/provider",
        "body": {},
        "status": 204,
        "response": "",
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/email",
        "body": {
            "enabled": false
        },
        "status": 200,
        "response": {
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/push-notification",
        "body": {
            "enabled": false
        },
        "status": 200,
        "response": {
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/webauthn-roaming",
        "body": {
            "enabled": false
        },
        "status": 200,
        "response": {
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/sms",
        "body": {
            "enabled": false
        },
        "status": 200,
        "response": {
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/recovery-code",
        "body": {
            "enabled": false
        },
        "status": 200,
        "response": {
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/webauthn-platform",
        "body": {
            "enabled": false
        },
        "status": 200,
        "response": {
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/duo",
        "body": {
            "enabled": false
        },
        "status": 200,
        "response": {
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/otp",
        "body": {
            "enabled": false
        },
        "status": 200,
        "response": {
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/policies",
        "body": [],
        "status": 200,
        "response": [],
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/sms/selected-provider",
        "body": {
            "provider": "auth0"
        },
        "status": 200,
        "response": {
            "provider": "auth0"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/phone/message-types",
        "body": {
            "message_types": []
        },
        "status": 200,
        "response": {
            "message_types": []
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/prompts",
        "body": {
            "universal_login_experience": "new"
        },
        "status": 200,
        "response": {
            "universal_login_experience": "new",
            "identifier_first": true
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/attack-protection/suspicious-ip-throttling",
        "body": {
            "enabled": true,
            "shields": [
                "admin_notification",
                "block"
            ],
            "allowlist": [],
            "stage": {
                "pre-login": {
                    "max_attempts": 100,
                    "rate": 864000
                },
                "pre-user-registration": {
                    "max_attempts": 50,
                    "rate": 1200
                }
            }
        },
        "status": 200,
        "response": {
            "enabled": true,
            "shields": [
                "admin_notification",
                "block"
            ],
            "allowlist": [],
            "stage": {
                "pre-login": {
                    "max_attempts": 100,
                    "rate": 864000
                },
                "pre-user-registration": {
                    "max_attempts": 50,
                    "rate": 1200
                }
            }
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/attack-protection/breached-password-detection",
        "body": {
            "enabled": false,
            "shields": [],
            "admin_notification_frequency": [],
            "method": "standard"
        },
        "status": 200,
        "response": {
            "enabled": false,
            "shields": [],
            "admin_notification_frequency": [],
            "method": "standard",
            "stage": {
                "pre-user-registration": {
                    "shields": []
                }
            }
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/log-streams?paginate=false",
        "body": "",
        "status": 200,
        "response": [
            {
                "id": "lst_0000000000011295",
                "name": "Suspended DD Log Stream",
                "type": "datadog",
                "status": "active",
                "sink": {
                    "datadogApiKey": "some-sensitive-api-key",
                    "datadogRegion": "us"
                }
            },
            {
                "id": "lst_0000000000011296",
                "name": "Amazon EventBridge",
                "type": "eventbridge",
                "status": "active",
                "sink": {
                    "awsAccountId": "123456789012",
                    "awsRegion": "us-east-2",
                    "awsPartnerEventSource": "aws.partner/auth0.com/auth0-deploy-cli-e2e-7c53541c-1bb2-44e5-a03f-307593503278/auth0.logs"
                },
                "filters": [
                    {
                        "type": "category",
                        "name": "auth.login.success"
                    },
                    {
                        "type": "category",
                        "name": "auth.login.notification"
                    },
                    {
                        "type": "category",
                        "name": "auth.login.fail"
                    },
                    {
                        "type": "category",
                        "name": "auth.signup.success"
                    },
                    {
                        "type": "category",
                        "name": "auth.logout.success"
                    },
                    {
                        "type": "category",
                        "name": "auth.logout.fail"
                    },
                    {
                        "type": "category",
                        "name": "auth.silent_auth.fail"
                    },
                    {
                        "type": "category",
                        "name": "auth.silent_auth.success"
                    },
                    {
                        "type": "category",
                        "name": "auth.token_exchange.fail"
                    }
                ]
            }
        ],
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/attack-protection/brute-force-protection",
        "body": {
            "enabled": true,
            "shields": [
                "block",
                "user_notification"
            ],
            "mode": "count_per_identifier_and_ip",
            "allowlist": [],
            "max_attempts": 10
        },
        "status": 200,
        "response": {
            "enabled": true,
            "shields": [
                "block",
                "user_notification"
            ],
            "mode": "count_per_identifier_and_ip",
            "allowlist": [],
            "max_attempts": 10
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "DELETE",
        "path": "/api/v2/log-streams/lst_0000000000011295",
        "body": {},
        "status": 204,
        "response": "",
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "DELETE",
        "path": "/api/v2/log-streams/lst_0000000000011296",
        "body": {},
        "status": 204,
        "response": "",
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/clients?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 3,
            "start": 0,
            "limit": 100,
            "clients": [
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Deploy CLI",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "GIW99EUCF9DFExh77WPMyTMzT8NN4J3A",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Default App",
                    "callbacks": [],
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "vJUWRvzcy4KsrFZZfpCUDyweas5Y12yB",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": true,
                    "callbacks": [],
                    "is_first_party": true,
                    "name": "All Applications",
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "owners": [
                        "mr|samlp|okta|will.vedder@auth0.com",
                        "mr|google-oauth2|102002633619863830825"
                    ],
                    "custom_login_page": "<html>TEST123</html>\n",
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "Isi93ibGHIGwmdYjsLwTOn7Gu7nwxU3V",
                    "client_secret": "[REDACTED]",
                    "custom_login_page_on": true
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/connections?strategy=auth0&include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 1,
            "start": 0,
            "limit": 100,
            "connections": [
                {
                    "id": "con_C0M89u62wEIGN19r",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "import_mode": false,
                        "customScripts": {
                            "login": "function login(email, password, callback) {\n  // This script should authenticate a user against the credentials stored in\n  // your database.\n  // It is executed when a user attempts to log in or immediately after signing\n  // up (as a verification that the user was successfully signed up).\n  //\n  // Everything returned by this script will be set as part of the user profile\n  // and will be visible by any of the tenant admins. Avoid adding attributes\n  // with values such as passwords, keys, secrets, etc.\n  //\n  // The `password` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database. For example:\n  //\n  //     var bcrypt = require('bcrypt@0.8.5');\n  //     bcrypt.compare(password, dbPasswordHash, function(err, res)) { ... }\n  //\n  // There are three ways this script can finish:\n  // 1. The user's credentials are valid. The returned user profile should be in\n  // the following format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema\n  //     var profile = {\n  //       user_id: ..., // user_id is mandatory\n  //       email: ...,\n  //       [...]\n  //     };\n  //     callback(null, profile);\n  // 2. The user's credentials are invalid\n  //     callback(new WrongUsernameOrPasswordError(email, \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n  //\n  // A list of Node.js modules which can be referenced is available here:\n  //\n  //    https://tehsis.github.io/webtaskio-canirequire/\n  console.log('AYYYYYE');\n\n  const msg =\n    'Please implement the Login script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "create": "function create(user, callback) {\n  // This script should create a user entry in your existing database. It will\n  // be executed when a user attempts to sign up, or when a user is created\n  // through the Auth0 dashboard or API.\n  // When this script has finished executing, the Login script will be\n  // executed immediately afterwards, to verify that the user was created\n  // successfully.\n  //\n  // The user object will always contain the following properties:\n  // * email: the user's email\n  // * password: the password entered by the user, in plain text\n  // * tenant: the name of this Auth0 account\n  // * client_id: the client ID of the application where the user signed up, or\n  //              API key if created through the API or Auth0 dashboard\n  // * connection: the name of this database connection\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully created\n  //     callback(null);\n  // 2. This user already exists in your database\n  //     callback(new ValidationError(\"user_exists\", \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Create script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "delete": "function remove(id, callback) {\n  // This script remove a user from your existing database.\n  // It is executed whenever a user is deleted from the API or Auth0 dashboard.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user was removed successfully:\n  //     callback(null);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Delete script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "verify": "function verify(email, callback) {\n  // This script should mark the current user's email address as verified in\n  // your database.\n  // It is executed whenever a user clicks the verification link sent by email.\n  // These emails can be customized at https://manage.auth0.com/#/emails.\n  // It is safe to assume that the user's email already exists in your database,\n  // because verification emails, if enabled, are sent immediately after a\n  // successful signup.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user's email was verified successfully\n  //     callback(null, true);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the verification link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Verify script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "get_user": "function getByEmail(email, callback) {\n  // This script should retrieve a user profile from your existing database,\n  // without authenticating the user.\n  // It is used to check if a user exists before executing flows that do not\n  // require authentication (signup and password reset).\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully found. The profile should be in the following\n  // format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema.\n  //     callback(null, profile);\n  // 2. A user was not found\n  //     callback(null);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Get User script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "change_password": "function changePassword(email, newPassword, callback) {\n  // This script should change the password stored for the current user in your\n  // database. It is executed when the user clicks on the confirmation link\n  // after a reset password request.\n  // The content and behavior of password confirmation emails can be customized\n  // here: https://manage.auth0.com/#/emails\n  // The `newPassword` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database.\n  //\n  // There are three ways that this script can finish:\n  // 1. The user's password was updated successfully:\n  //     callback(null, true);\n  // 2. The user's password was not updated:\n  //     callback(null, false);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the confirmation link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Change Password script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n"
                        },
                        "disable_signup": false,
                        "passwordPolicy": "low",
                        "password_history": {
                            "size": 5,
                            "enable": false
                        },
                        "strategy_version": 2,
                        "requires_username": true,
                        "password_dictionary": {
                            "enable": true,
                            "dictionary": []
                        },
                        "brute_force_protection": true,
                        "password_no_personal_info": {
                            "enable": true
                        },
                        "password_complexity_options": {
                            "min_length": 8
                        },
                        "enabledDatabaseCustomization": true
                    },
                    "strategy": "auth0",
                    "name": "boo-baz-db-connection-test",
                    "is_domain_connection": false,
                    "realms": [
                        "boo-baz-db-connection-test"
                    ],
                    "enabled_clients": []
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/connections?strategy=auth0&include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 1,
            "start": 0,
            "limit": 100,
            "connections": [
                {
                    "id": "con_C0M89u62wEIGN19r",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "import_mode": false,
                        "customScripts": {
                            "login": "function login(email, password, callback) {\n  // This script should authenticate a user against the credentials stored in\n  // your database.\n  // It is executed when a user attempts to log in or immediately after signing\n  // up (as a verification that the user was successfully signed up).\n  //\n  // Everything returned by this script will be set as part of the user profile\n  // and will be visible by any of the tenant admins. Avoid adding attributes\n  // with values such as passwords, keys, secrets, etc.\n  //\n  // The `password` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database. For example:\n  //\n  //     var bcrypt = require('bcrypt@0.8.5');\n  //     bcrypt.compare(password, dbPasswordHash, function(err, res)) { ... }\n  //\n  // There are three ways this script can finish:\n  // 1. The user's credentials are valid. The returned user profile should be in\n  // the following format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema\n  //     var profile = {\n  //       user_id: ..., // user_id is mandatory\n  //       email: ...,\n  //       [...]\n  //     };\n  //     callback(null, profile);\n  // 2. The user's credentials are invalid\n  //     callback(new WrongUsernameOrPasswordError(email, \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n  //\n  // A list of Node.js modules which can be referenced is available here:\n  //\n  //    https://tehsis.github.io/webtaskio-canirequire/\n  console.log('AYYYYYE');\n\n  const msg =\n    'Please implement the Login script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "create": "function create(user, callback) {\n  // This script should create a user entry in your existing database. It will\n  // be executed when a user attempts to sign up, or when a user is created\n  // through the Auth0 dashboard or API.\n  // When this script has finished executing, the Login script will be\n  // executed immediately afterwards, to verify that the user was created\n  // successfully.\n  //\n  // The user object will always contain the following properties:\n  // * email: the user's email\n  // * password: the password entered by the user, in plain text\n  // * tenant: the name of this Auth0 account\n  // * client_id: the client ID of the application where the user signed up, or\n  //              API key if created through the API or Auth0 dashboard\n  // * connection: the name of this database connection\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully created\n  //     callback(null);\n  // 2. This user already exists in your database\n  //     callback(new ValidationError(\"user_exists\", \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Create script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "delete": "function remove(id, callback) {\n  // This script remove a user from your existing database.\n  // It is executed whenever a user is deleted from the API or Auth0 dashboard.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user was removed successfully:\n  //     callback(null);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Delete script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "verify": "function verify(email, callback) {\n  // This script should mark the current user's email address as verified in\n  // your database.\n  // It is executed whenever a user clicks the verification link sent by email.\n  // These emails can be customized at https://manage.auth0.com/#/emails.\n  // It is safe to assume that the user's email already exists in your database,\n  // because verification emails, if enabled, are sent immediately after a\n  // successful signup.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user's email was verified successfully\n  //     callback(null, true);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the verification link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Verify script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "get_user": "function getByEmail(email, callback) {\n  // This script should retrieve a user profile from your existing database,\n  // without authenticating the user.\n  // It is used to check if a user exists before executing flows that do not\n  // require authentication (signup and password reset).\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully found. The profile should be in the following\n  // format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema.\n  //     callback(null, profile);\n  // 2. A user was not found\n  //     callback(null);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Get User script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "change_password": "function changePassword(email, newPassword, callback) {\n  // This script should change the password stored for the current user in your\n  // database. It is executed when the user clicks on the confirmation link\n  // after a reset password request.\n  // The content and behavior of password confirmation emails can be customized\n  // here: https://manage.auth0.com/#/emails\n  // The `newPassword` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database.\n  //\n  // There are three ways that this script can finish:\n  // 1. The user's password was updated successfully:\n  //     callback(null, true);\n  // 2. The user's password was not updated:\n  //     callback(null, false);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the confirmation link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Change Password script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n"
                        },
                        "disable_signup": false,
                        "passwordPolicy": "low",
                        "password_history": {
                            "size": 5,
                            "enable": false
                        },
                        "strategy_version": 2,
                        "requires_username": true,
                        "password_dictionary": {
                            "enable": true,
                            "dictionary": []
                        },
                        "brute_force_protection": true,
                        "password_no_personal_info": {
                            "enable": true
                        },
                        "password_complexity_options": {
                            "min_length": 8
                        },
                        "enabledDatabaseCustomization": true
                    },
                    "strategy": "auth0",
                    "name": "boo-baz-db-connection-test",
                    "is_domain_connection": false,
                    "realms": [
                        "boo-baz-db-connection-test"
                    ],
                    "enabled_clients": []
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "DELETE",
        "path": "/api/v2/connections/con_C0M89u62wEIGN19r",
        "body": {},
        "status": 202,
        "response": {
            "deleted_at": "2023-06-08T11:54:50.634Z"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "POST",
        "path": "/api/v2/connections",
        "body": {
            "name": "Username-Password-Authentication",
            "strategy": "auth0",
            "enabled_clients": [
                "GIW99EUCF9DFExh77WPMyTMzT8NN4J3A",
                "vJUWRvzcy4KsrFZZfpCUDyweas5Y12yB"
            ],
            "is_domain_connection": false,
            "options": {
                "mfa": {
                    "active": true,
                    "return_enroll_settings": true
                },
                "passwordPolicy": "good",
                "strategy_version": 2,
                "brute_force_protection": true
            },
            "realms": [
                "Username-Password-Authentication"
            ]
        },
        "status": 201,
        "response": {
            "id": "con_6waFQqxaWcJ7rPz6",
            "options": {
                "mfa": {
                    "active": true,
                    "return_enroll_settings": true
                },
                "passwordPolicy": "good",
                "strategy_version": 2,
                "brute_force_protection": true
            },
            "strategy": "auth0",
            "name": "Username-Password-Authentication",
            "is_domain_connection": false,
            "enabled_clients": [
                "GIW99EUCF9DFExh77WPMyTMzT8NN4J3A",
                "vJUWRvzcy4KsrFZZfpCUDyweas5Y12yB"
            ],
            "realms": [
                "Username-Password-Authentication"
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/clients?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 3,
            "start": 0,
            "limit": 100,
            "clients": [
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Deploy CLI",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "GIW99EUCF9DFExh77WPMyTMzT8NN4J3A",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Default App",
                    "callbacks": [],
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "vJUWRvzcy4KsrFZZfpCUDyweas5Y12yB",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": true,
                    "callbacks": [],
                    "is_first_party": true,
                    "name": "All Applications",
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "owners": [
                        "mr|samlp|okta|will.vedder@auth0.com",
                        "mr|google-oauth2|102002633619863830825"
                    ],
                    "custom_login_page": "<html>TEST123</html>\n",
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "Isi93ibGHIGwmdYjsLwTOn7Gu7nwxU3V",
                    "client_secret": "[REDACTED]",
                    "custom_login_page_on": true
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/connections?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 2,
            "start": 0,
            "limit": 100,
            "connections": [
                {
                    "id": "con_F8LduAZ8OQNa5Opz",
                    "options": {
                        "email": true,
                        "scope": [
                            "email",
                            "profile"
                        ],
                        "profile": true
                    },
                    "strategy": "google-oauth2",
                    "name": "google-oauth2",
                    "is_domain_connection": false,
                    "realms": [
                        "google-oauth2"
                    ],
                    "enabled_clients": []
                },
                {
                    "id": "con_6waFQqxaWcJ7rPz6",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "passwordPolicy": "good",
                        "strategy_version": 2,
                        "brute_force_protection": true
                    },
                    "strategy": "auth0",
                    "name": "Username-Password-Authentication",
                    "is_domain_connection": false,
                    "realms": [
                        "Username-Password-Authentication"
                    ],
                    "enabled_clients": [
                        "GIW99EUCF9DFExh77WPMyTMzT8NN4J3A",
                        "vJUWRvzcy4KsrFZZfpCUDyweas5Y12yB"
                    ]
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/connections?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 2,
            "start": 0,
            "limit": 100,
            "connections": [
                {
                    "id": "con_F8LduAZ8OQNa5Opz",
                    "options": {
                        "email": true,
                        "scope": [
                            "email",
                            "profile"
                        ],
                        "profile": true
                    },
                    "strategy": "google-oauth2",
                    "name": "google-oauth2",
                    "is_domain_connection": false,
                    "realms": [
                        "google-oauth2"
                    ],
                    "enabled_clients": []
                },
                {
                    "id": "con_6waFQqxaWcJ7rPz6",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "passwordPolicy": "good",
                        "strategy_version": 2,
                        "brute_force_protection": true
                    },
                    "strategy": "auth0",
                    "name": "Username-Password-Authentication",
                    "is_domain_connection": false,
                    "realms": [
                        "Username-Password-Authentication"
                    ],
                    "enabled_clients": [
                        "GIW99EUCF9DFExh77WPMyTMzT8NN4J3A",
                        "vJUWRvzcy4KsrFZZfpCUDyweas5Y12yB"
                    ]
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "DELETE",
        "path": "/api/v2/connections/con_F8LduAZ8OQNa5Opz",
        "body": {},
        "status": 202,
        "response": {
            "deleted_at": "2023-06-08T11:54:51.527Z"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/clients?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 3,
            "start": 0,
            "limit": 100,
            "clients": [
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Deploy CLI",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "GIW99EUCF9DFExh77WPMyTMzT8NN4J3A",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Default App",
                    "callbacks": [],
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "vJUWRvzcy4KsrFZZfpCUDyweas5Y12yB",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": true,
                    "callbacks": [],
                    "is_first_party": true,
                    "name": "All Applications",
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "owners": [
                        "mr|samlp|okta|will.vedder@auth0.com",
                        "mr|google-oauth2|102002633619863830825"
                    ],
                    "custom_login_page": "<html>TEST123</html>\n",
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "Isi93ibGHIGwmdYjsLwTOn7Gu7nwxU3V",
                    "client_secret": "[REDACTED]",
                    "custom_login_page_on": true
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/client-grants?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 1,
            "start": 0,
            "limit": 100,
            "client_grants": [
                {
                    "id": "cgr_iodSzvwxqm51tLZF",
                    "client_id": "GIW99EUCF9DFExh77WPMyTMzT8NN4J3A",
                    "audience": "https://auth0-deploy-cli-e2e.us.auth0.com/api/v2/",
                    "scope": [
                        "read:client_grants",
                        "create:client_grants",
                        "delete:client_grants",
                        "update:client_grants",
                        "read:users",
                        "update:users",
                        "delete:users",
                        "create:users",
                        "read:users_app_metadata",
                        "update:users_app_metadata",
                        "delete:users_app_metadata",
                        "create:users_app_metadata",
                        "read:user_custom_blocks",
                        "create:user_custom_blocks",
                        "delete:user_custom_blocks",
                        "create:user_tickets",
                        "read:clients",
                        "update:clients",
                        "delete:clients",
                        "create:clients",
                        "read:client_keys",
                        "update:client_keys",
                        "delete:client_keys",
                        "create:client_keys",
                        "read:connections",
                        "update:connections",
                        "delete:connections",
                        "create:connections",
                        "read:resource_servers",
                        "update:resource_servers",
                        "delete:resource_servers",
                        "create:resource_servers",
                        "read:device_credentials",
                        "update:device_credentials",
                        "delete:device_credentials",
                        "create:device_credentials",
                        "read:rules",
                        "update:rules",
                        "delete:rules",
                        "create:rules",
                        "read:rules_configs",
                        "update:rules_configs",
                        "delete:rules_configs",
                        "read:hooks",
                        "update:hooks",
                        "delete:hooks",
                        "create:hooks",
                        "read:actions",
                        "update:actions",
                        "delete:actions",
                        "create:actions",
                        "read:email_provider",
                        "update:email_provider",
                        "delete:email_provider",
                        "create:email_provider",
                        "blacklist:tokens",
                        "read:stats",
                        "read:insights",
                        "read:tenant_settings",
                        "update:tenant_settings",
                        "read:logs",
                        "read:logs_users",
                        "read:shields",
                        "create:shields",
                        "update:shields",
                        "delete:shields",
                        "read:anomaly_blocks",
                        "delete:anomaly_blocks",
                        "update:triggers",
                        "read:triggers",
                        "read:grants",
                        "delete:grants",
                        "read:guardian_factors",
                        "update:guardian_factors",
                        "read:guardian_enrollments",
                        "delete:guardian_enrollments",
                        "create:guardian_enrollment_tickets",
                        "read:user_idp_tokens",
                        "create:passwords_checking_job",
                        "delete:passwords_checking_job",
                        "read:custom_domains",
                        "delete:custom_domains",
                        "create:custom_domains",
                        "update:custom_domains",
                        "read:email_templates",
                        "create:email_templates",
                        "update:email_templates",
                        "read:mfa_policies",
                        "update:mfa_policies",
                        "read:roles",
                        "create:roles",
                        "delete:roles",
                        "update:roles",
                        "read:prompts",
                        "update:prompts",
                        "read:branding",
                        "update:branding",
                        "delete:branding",
                        "read:log_streams",
                        "create:log_streams",
                        "delete:log_streams",
                        "update:log_streams",
                        "create:signing_keys",
                        "read:signing_keys",
                        "update:signing_keys",
                        "read:limits",
                        "update:limits",
                        "create:role_members",
                        "read:role_members",
                        "delete:role_members",
                        "read:entitlements",
                        "read:attack_protection",
                        "update:attack_protection",
                        "read:organizations",
                        "update:organizations",
                        "create:organizations",
                        "delete:organizations",
                        "create:organization_members",
                        "read:organization_members",
                        "delete:organization_members",
                        "create:organization_connections",
                        "read:organization_connections",
                        "update:organization_connections",
                        "delete:organization_connections",
                        "create:organization_member_roles",
                        "read:organization_member_roles",
                        "delete:organization_member_roles",
                        "create:organization_invitations",
                        "read:organization_invitations",
                        "delete:organization_invitations",
                        "read:organizations_summary",
                        "create:actions_log_sessions",
                        "create:authentication_methods",
                        "read:authentication_methods",
                        "update:authentication_methods",
                        "delete:authentication_methods"
                    ]
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/roles?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "roles": [
                {
                    "id": "rol_wcV6kDjzalQO0sdX",
                    "name": "Admin",
                    "description": "Can read and write things"
                },
                {
                    "id": "rol_Ts4uBi7Ldr8h2a9U",
                    "name": "Reader",
                    "description": "Can only read things"
                },
                {
                    "id": "rol_WlBcFYlpZ389Ejeu",
                    "name": "read_only",
                    "description": "Read Only"
                },
                {
                    "id": "rol_dk0j8wmM5cqTmJtv",
                    "name": "read_osnly",
                    "description": "Readz Only"
                }
            ],
            "start": 0,
            "limit": 100,
            "total": 4
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/roles/rol_wcV6kDjzalQO0sdX/permissions?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "permissions": [],
            "start": 0,
            "limit": 100,
            "total": 0
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/roles/rol_Ts4uBi7Ldr8h2a9U/permissions?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "permissions": [],
            "start": 0,
            "limit": 100,
            "total": 0
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/roles/rol_WlBcFYlpZ389Ejeu/permissions?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "permissions": [],
            "start": 0,
            "limit": 100,
            "total": 0
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/roles/rol_dk0j8wmM5cqTmJtv/permissions?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "permissions": [],
            "start": 0,
            "limit": 100,
            "total": 0
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "DELETE",
        "path": "/api/v2/roles/rol_wcV6kDjzalQO0sdX",
        "body": {},
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "DELETE",
        "path": "/api/v2/roles/rol_Ts4uBi7Ldr8h2a9U",
        "body": {},
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "DELETE",
        "path": "/api/v2/roles/rol_WlBcFYlpZ389Ejeu",
        "body": {},
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "DELETE",
        "path": "/api/v2/roles/rol_dk0j8wmM5cqTmJtv",
        "body": {},
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/actions/actions?page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "actions": [
                {
                    "id": "ba3c7735-4129-4795-90bc-a0d2e710446f",
                    "name": "My Custom Action",
                    "supported_triggers": [
                        {
                            "id": "post-login",
                            "version": "v2"
                        }
                    ],
                    "created_at": "2023-06-08T11:54:13.417080135Z",
                    "updated_at": "2023-06-08T11:54:41.997331984Z",
                    "code": "/**\n * Handler that will be called during the execution of a PostLogin flow.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\nexports.onExecutePostLogin = async (event, api) => {\n  console.log('Some custom action!');\n};\n\n/**\n * Handler that will be invoked when this action is resuming after an external redirect. If your\n * onExecutePostLogin function does not perform a redirect, this function can be safely ignored.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\n// exports.onContinuePostLogin = async (event, api) => {\n// };\n",
                    "dependencies": [],
                    "runtime": "node16",
                    "status": "built",
                    "secrets": [],
                    "current_version": {
                        "id": "57ca6419-0699-42c9-9a0e-ac8b66063b7e",
                        "code": "/**\n * Handler that will be called during the execution of a PostLogin flow.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\nexports.onExecutePostLogin = async (event, api) => {\n  console.log('Some custom action!');\n};\n\n/**\n * Handler that will be invoked when this action is resuming after an external redirect. If your\n * onExecutePostLogin function does not perform a redirect, this function can be safely ignored.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\n// exports.onContinuePostLogin = async (event, api) => {\n// };\n",
                        "runtime": "node16",
                        "status": "BUILT",
                        "number": 2,
                        "build_time": "2023-06-08T11:54:42.468898025Z",
                        "created_at": "2023-06-08T11:54:42.391096187Z",
                        "updated_at": "2023-06-08T11:54:42.470369045Z"
                    },
                    "deployed_version": {
                        "code": "/**\n * Handler that will be called during the execution of a PostLogin flow.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\nexports.onExecutePostLogin = async (event, api) => {\n  console.log('Some custom action!');\n};\n\n/**\n * Handler that will be invoked when this action is resuming after an external redirect. If your\n * onExecutePostLogin function does not perform a redirect, this function can be safely ignored.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\n// exports.onContinuePostLogin = async (event, api) => {\n// };\n",
                        "dependencies": [],
                        "id": "57ca6419-0699-42c9-9a0e-ac8b66063b7e",
                        "deployed": true,
                        "number": 2,
                        "built_at": "2023-06-08T11:54:42.468898025Z",
                        "secrets": [],
                        "status": "built",
                        "created_at": "2023-06-08T11:54:42.391096187Z",
                        "updated_at": "2023-06-08T11:54:42.470369045Z",
                        "runtime": "node16",
                        "supported_triggers": [
                            {
                                "id": "post-login",
                                "version": "v2"
                            }
                        ]
                    },
                    "all_changes_deployed": true
                }
            ],
            "total": 1,
            "per_page": 100
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "DELETE",
        "path": "/api/v2/actions/actions/ba3c7735-4129-4795-90bc-a0d2e710446f?force=true",
        "body": {},
        "status": 204,
        "response": "",
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/actions/actions?page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "actions": [],
            "per_page": 100
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/organizations?include_totals=true",
        "body": "",
        "status": 200,
        "response": {
            "organizations": [
                {
                    "id": "org_ShVRhWhyBzS8oZU9",
                    "name": "org1",
                    "display_name": "Organization",
                    "branding": {
                        "colors": {
                            "page_background": "#fff5f5",
                            "primary": "#57ddff"
                        }
                    }
                },
                {
                    "id": "org_KCee3xhTZHWuMJ5P",
                    "name": "org2",
                    "display_name": "Organization2"
                }
            ],
            "start": 0,
            "limit": 50,
            "total": 2
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/organizations?include_totals=true&take=50",
        "body": "",
        "status": 200,
        "response": {
            "organizations": [
                {
                    "id": "org_ShVRhWhyBzS8oZU9",
                    "name": "org1",
                    "display_name": "Organization",
                    "branding": {
                        "colors": {
                            "page_background": "#fff5f5",
                            "primary": "#57ddff"
                        }
                    }
                },
                {
                    "id": "org_KCee3xhTZHWuMJ5P",
                    "name": "org2",
                    "display_name": "Organization2"
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/organizations/org_ShVRhWhyBzS8oZU9/enabled_connections",
        "body": "",
        "status": 200,
        "response": [],
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/organizations/org_KCee3xhTZHWuMJ5P/enabled_connections",
        "body": "",
        "status": 200,
        "response": [],
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/connections?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 1,
            "start": 0,
            "limit": 100,
            "connections": [
                {
                    "id": "con_6waFQqxaWcJ7rPz6",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "passwordPolicy": "good",
                        "strategy_version": 2,
                        "brute_force_protection": true
                    },
                    "strategy": "auth0",
                    "name": "Username-Password-Authentication",
                    "is_domain_connection": false,
                    "realms": [
                        "Username-Password-Authentication"
                    ],
                    "enabled_clients": [
                        "GIW99EUCF9DFExh77WPMyTMzT8NN4J3A",
                        "vJUWRvzcy4KsrFZZfpCUDyweas5Y12yB"
                    ]
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "DELETE",
        "path": "/api/v2/organizations/org_KCee3xhTZHWuMJ5P",
        "body": {},
        "status": 204,
        "response": "",
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "DELETE",
        "path": "/api/v2/organizations/org_ShVRhWhyBzS8oZU9",
        "body": {},
        "status": 204,
        "response": "",
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/tenants/settings",
        "body": {
            "enabled_locales": [
                "en"
            ],
            "flags": {
                "revoke_refresh_token_grant": false,
                "disable_clickjack_protection_headers": false
            }
        },
        "status": 200,
        "response": {
            "allowed_logout_urls": [
                "https://mycompany.org/logoutCallback"
            ],
            "change_password": {
                "enabled": true,
                "html": "<html>Change Password</html>\n"
            },
            "enabled_locales": [
                "en"
            ],
            "error_page": {
                "html": "<html>Error Page</html>\n",
                "show_log_link": false,
                "url": "https://mycompany.org/error"
            },
            "flags": {
                "allow_changing_enable_sso": false,
                "allow_legacy_delegation_grant_types": true,
                "allow_legacy_ro_grant_types": true,
                "cannot_change_enforce_client_authentication_on_passwordless_start": true,
                "change_pwd_flow_v1": false,
                "disable_impersonation": true,
                "enable_apis_section": false,
                "enable_client_connections": false,
                "enable_custom_domain_in_emails": false,
                "enable_dynamic_client_registration": false,
                "enable_legacy_logs_search_v2": false,
                "enable_public_signup_user_exists_error": true,
                "enable_sso": true,
                "enforce_client_authentication_on_passwordless_start": true,
                "universal_login": true,
                "use_scope_descriptions_for_consent": false,
                "revoke_refresh_token_grant": false,
                "disable_clickjack_protection_headers": false,
                "enable_pipeline2": false
            },
            "friendly_name": "My Test Tenant",
            "guardian_mfa_page": {
                "enabled": true,
                "html": "<html>MFA</html>\n"
            },
            "idle_session_lifetime": 1,
            "picture_url": "https://upload.wikimedia.org/wikipedia/commons/0/0d/Grandmas_marathon_finishers.png",
            "sandbox_version": "12",
            "session_lifetime": 3.0166666666666666,
            "support_email": "support@mycompany.org",
            "support_url": "https://mycompany.org/support",
            "universal_login": {
                "colors": {
                    "primary": "#F8F8F2",
                    "page_background": "#222221"
                }
            },
            "session_cookie": {
                "mode": "non-persistent"
            }
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/rules?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 0,
            "start": 0,
            "limit": 100,
            "rules": []
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/rules-configs",
        "body": "",
        "status": 200,
        "response": [],
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/hooks?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 0,
            "start": 0,
            "limit": 100,
            "hooks": []
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/clients?is_global=true&include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 1,
            "start": 0,
            "limit": 100,
            "clients": [
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": true,
                    "callbacks": [],
                    "is_first_party": true,
                    "name": "All Applications",
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "owners": [
                        "mr|samlp|okta|will.vedder@auth0.com",
                        "mr|google-oauth2|102002633619863830825"
                    ],
                    "custom_login_page": "<html>TEST123</html>\n",
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "Isi93ibGHIGwmdYjsLwTOn7Gu7nwxU3V",
                    "client_secret": "[REDACTED]",
                    "custom_login_page_on": true
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/tenants/settings",
        "body": "",
        "status": 200,
        "response": {
            "allowed_logout_urls": [
                "https://mycompany.org/logoutCallback"
            ],
            "change_password": {
                "enabled": true,
                "html": "<html>Change Password</html>\n"
            },
            "enabled_locales": [
                "en"
            ],
            "error_page": {
                "html": "<html>Error Page</html>\n",
                "show_log_link": false,
                "url": "https://mycompany.org/error"
            },
            "flags": {
                "allow_changing_enable_sso": false,
                "allow_legacy_delegation_grant_types": true,
                "allow_legacy_ro_grant_types": true,
                "change_pwd_flow_v1": false,
                "disable_impersonation": true,
                "enable_apis_section": false,
                "enable_client_connections": false,
                "enable_custom_domain_in_emails": false,
                "enable_dynamic_client_registration": false,
                "enable_legacy_logs_search_v2": false,
                "enable_public_signup_user_exists_error": true,
                "enable_sso": true,
                "universal_login": true,
                "use_scope_descriptions_for_consent": false,
                "revoke_refresh_token_grant": false,
                "disable_clickjack_protection_headers": false,
                "enable_pipeline2": false
            },
            "friendly_name": "My Test Tenant",
            "guardian_mfa_page": {
                "enabled": true,
                "html": "<html>MFA</html>\n"
            },
            "idle_session_lifetime": 1,
            "picture_url": "https://upload.wikimedia.org/wikipedia/commons/0/0d/Grandmas_marathon_finishers.png",
            "sandbox_version": "12",
            "session_lifetime": 3.0166666666666666,
            "support_email": "support@mycompany.org",
            "support_url": "https://mycompany.org/support",
            "universal_login": {
                "colors": {
                    "primary": "#F8F8F2",
                    "page_background": "#222221"
                }
            },
            "session_cookie": {
                "mode": "non-persistent"
            },
            "sandbox_versions_available": [
                "16",
                "12"
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/resource-servers?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 1,
            "start": 0,
            "limit": 100,
            "resource_servers": [
                {
                    "id": "62debacc54b4171c0378ea1f",
                    "name": "Auth0 Management API",
                    "identifier": "https://auth0-deploy-cli-e2e.us.auth0.com/api/v2/",
                    "allow_offline_access": false,
                    "skip_consent_for_verifiable_first_party_clients": false,
                    "token_lifetime": 86400,
                    "token_lifetime_for_web": 7200,
                    "signing_alg": "RS256",
                    "scopes": [
                        {
                            "description": "Read Client Grants",
                            "value": "read:client_grants"
                        },
                        {
                            "description": "Create Client Grants",
                            "value": "create:client_grants"
                        },
                        {
                            "description": "Delete Client Grants",
                            "value": "delete:client_grants"
                        },
                        {
                            "description": "Update Client Grants",
                            "value": "update:client_grants"
                        },
                        {
                            "description": "Read Users",
                            "value": "read:users"
                        },
                        {
                            "description": "Update Users",
                            "value": "update:users"
                        },
                        {
                            "description": "Delete Users",
                            "value": "delete:users"
                        },
                        {
                            "description": "Create Users",
                            "value": "create:users"
                        },
                        {
                            "description": "Read Users App Metadata",
                            "value": "read:users_app_metadata"
                        },
                        {
                            "description": "Update Users App Metadata",
                            "value": "update:users_app_metadata"
                        },
                        {
                            "description": "Delete Users App Metadata",
                            "value": "delete:users_app_metadata"
                        },
                        {
                            "description": "Create Users App Metadata",
                            "value": "create:users_app_metadata"
                        },
                        {
                            "description": "Read Custom User Blocks",
                            "value": "read:user_custom_blocks"
                        },
                        {
                            "description": "Create Custom User Blocks",
                            "value": "create:user_custom_blocks"
                        },
                        {
                            "description": "Delete Custom User Blocks",
                            "value": "delete:user_custom_blocks"
                        },
                        {
                            "description": "Create User Tickets",
                            "value": "create:user_tickets"
                        },
                        {
                            "description": "Read Clients",
                            "value": "read:clients"
                        },
                        {
                            "description": "Update Clients",
                            "value": "update:clients"
                        },
                        {
                            "description": "Delete Clients",
                            "value": "delete:clients"
                        },
                        {
                            "description": "Create Clients",
                            "value": "create:clients"
                        },
                        {
                            "description": "Read Client Keys",
                            "value": "read:client_keys"
                        },
                        {
                            "description": "Update Client Keys",
                            "value": "update:client_keys"
                        },
                        {
                            "description": "Delete Client Keys",
                            "value": "delete:client_keys"
                        },
                        {
                            "description": "Create Client Keys",
                            "value": "create:client_keys"
                        },
                        {
                            "description": "Read Connections",
                            "value": "read:connections"
                        },
                        {
                            "description": "Update Connections",
                            "value": "update:connections"
                        },
                        {
                            "description": "Delete Connections",
                            "value": "delete:connections"
                        },
                        {
                            "description": "Create Connections",
                            "value": "create:connections"
                        },
                        {
                            "description": "Read Resource Servers",
                            "value": "read:resource_servers"
                        },
                        {
                            "description": "Update Resource Servers",
                            "value": "update:resource_servers"
                        },
                        {
                            "description": "Delete Resource Servers",
                            "value": "delete:resource_servers"
                        },
                        {
                            "description": "Create Resource Servers",
                            "value": "create:resource_servers"
                        },
                        {
                            "description": "Read Device Credentials",
                            "value": "read:device_credentials"
                        },
                        {
                            "description": "Update Device Credentials",
                            "value": "update:device_credentials"
                        },
                        {
                            "description": "Delete Device Credentials",
                            "value": "delete:device_credentials"
                        },
                        {
                            "description": "Create Device Credentials",
                            "value": "create:device_credentials"
                        },
                        {
                            "description": "Read Rules",
                            "value": "read:rules"
                        },
                        {
                            "description": "Update Rules",
                            "value": "update:rules"
                        },
                        {
                            "description": "Delete Rules",
                            "value": "delete:rules"
                        },
                        {
                            "description": "Create Rules",
                            "value": "create:rules"
                        },
                        {
                            "description": "Read Rules Configs",
                            "value": "read:rules_configs"
                        },
                        {
                            "description": "Update Rules Configs",
                            "value": "update:rules_configs"
                        },
                        {
                            "description": "Delete Rules Configs",
                            "value": "delete:rules_configs"
                        },
                        {
                            "description": "Read Hooks",
                            "value": "read:hooks"
                        },
                        {
                            "description": "Update Hooks",
                            "value": "update:hooks"
                        },
                        {
                            "description": "Delete Hooks",
                            "value": "delete:hooks"
                        },
                        {
                            "description": "Create Hooks",
                            "value": "create:hooks"
                        },
                        {
                            "description": "Read Actions",
                            "value": "read:actions"
                        },
                        {
                            "description": "Update Actions",
                            "value": "update:actions"
                        },
                        {
                            "description": "Delete Actions",
                            "value": "delete:actions"
                        },
                        {
                            "description": "Create Actions",
                            "value": "create:actions"
                        },
                        {
                            "description": "Read Email Provider",
                            "value": "read:email_provider"
                        },
                        {
                            "description": "Update Email Provider",
                            "value": "update:email_provider"
                        },
                        {
                            "description": "Delete Email Provider",
                            "value": "delete:email_provider"
                        },
                        {
                            "description": "Create Email Provider",
                            "value": "create:email_provider"
                        },
                        {
                            "description": "Blacklist Tokens",
                            "value": "blacklist:tokens"
                        },
                        {
                            "description": "Read Stats",
                            "value": "read:stats"
                        },
                        {
                            "description": "Read Insights",
                            "value": "read:insights"
                        },
                        {
                            "description": "Read Tenant Settings",
                            "value": "read:tenant_settings"
                        },
                        {
                            "description": "Update Tenant Settings",
                            "value": "update:tenant_settings"
                        },
                        {
                            "description": "Read Logs",
                            "value": "read:logs"
                        },
                        {
                            "description": "Read logs relating to users",
                            "value": "read:logs_users"
                        },
                        {
                            "description": "Read Shields",
                            "value": "read:shields"
                        },
                        {
                            "description": "Create Shields",
                            "value": "create:shields"
                        },
                        {
                            "description": "Update Shields",
                            "value": "update:shields"
                        },
                        {
                            "description": "Delete Shields",
                            "value": "delete:shields"
                        },
                        {
                            "description": "Read Anomaly Detection Blocks",
                            "value": "read:anomaly_blocks"
                        },
                        {
                            "description": "Delete Anomaly Detection Blocks",
                            "value": "delete:anomaly_blocks"
                        },
                        {
                            "description": "Update Triggers",
                            "value": "update:triggers"
                        },
                        {
                            "description": "Read Triggers",
                            "value": "read:triggers"
                        },
                        {
                            "description": "Read User Grants",
                            "value": "read:grants"
                        },
                        {
                            "description": "Delete User Grants",
                            "value": "delete:grants"
                        },
                        {
                            "description": "Read Guardian factors configuration",
                            "value": "read:guardian_factors"
                        },
                        {
                            "description": "Update Guardian factors",
                            "value": "update:guardian_factors"
                        },
                        {
                            "description": "Read Guardian enrollments",
                            "value": "read:guardian_enrollments"
                        },
                        {
                            "description": "Delete Guardian enrollments",
                            "value": "delete:guardian_enrollments"
                        },
                        {
                            "description": "Create enrollment tickets for Guardian",
                            "value": "create:guardian_enrollment_tickets"
                        },
                        {
                            "description": "Read Users IDP tokens",
                            "value": "read:user_idp_tokens"
                        },
                        {
                            "description": "Create password checking jobs",
                            "value": "create:passwords_checking_job"
                        },
                        {
                            "description": "Deletes password checking job and all its resources",
                            "value": "delete:passwords_checking_job"
                        },
                        {
                            "description": "Read custom domains configurations",
                            "value": "read:custom_domains"
                        },
                        {
                            "description": "Delete custom domains configurations",
                            "value": "delete:custom_domains"
                        },
                        {
                            "description": "Configure new custom domains",
                            "value": "create:custom_domains"
                        },
                        {
                            "description": "Update custom domain configurations",
                            "value": "update:custom_domains"
                        },
                        {
                            "description": "Read email templates",
                            "value": "read:email_templates"
                        },
                        {
                            "description": "Create email templates",
                            "value": "create:email_templates"
                        },
                        {
                            "description": "Update email templates",
                            "value": "update:email_templates"
                        },
                        {
                            "description": "Read Multifactor Authentication policies",
                            "value": "read:mfa_policies"
                        },
                        {
                            "description": "Update Multifactor Authentication policies",
                            "value": "update:mfa_policies"
                        },
                        {
                            "description": "Read roles",
                            "value": "read:roles"
                        },
                        {
                            "description": "Create roles",
                            "value": "create:roles"
                        },
                        {
                            "description": "Delete roles",
                            "value": "delete:roles"
                        },
                        {
                            "description": "Update roles",
                            "value": "update:roles"
                        },
                        {
                            "description": "Read prompts settings",
                            "value": "read:prompts"
                        },
                        {
                            "description": "Update prompts settings",
                            "value": "update:prompts"
                        },
                        {
                            "description": "Read branding settings",
                            "value": "read:branding"
                        },
                        {
                            "description": "Update branding settings",
                            "value": "update:branding"
                        },
                        {
                            "description": "Delete branding settings",
                            "value": "delete:branding"
                        },
                        {
                            "description": "Read log_streams",
                            "value": "read:log_streams"
                        },
                        {
                            "description": "Create log_streams",
                            "value": "create:log_streams"
                        },
                        {
                            "description": "Delete log_streams",
                            "value": "delete:log_streams"
                        },
                        {
                            "description": "Update log_streams",
                            "value": "update:log_streams"
                        },
                        {
                            "description": "Create signing keys",
                            "value": "create:signing_keys"
                        },
                        {
                            "description": "Read signing keys",
                            "value": "read:signing_keys"
                        },
                        {
                            "description": "Update signing keys",
                            "value": "update:signing_keys"
                        },
                        {
                            "description": "Read entity limits",
                            "value": "read:limits"
                        },
                        {
                            "description": "Update entity limits",
                            "value": "update:limits"
                        },
                        {
                            "description": "Create role members",
                            "value": "create:role_members"
                        },
                        {
                            "description": "Read role members",
                            "value": "read:role_members"
                        },
                        {
                            "description": "Update role members",
                            "value": "delete:role_members"
                        },
                        {
                            "description": "Read entitlements",
                            "value": "read:entitlements"
                        },
                        {
                            "description": "Read attack protection",
                            "value": "read:attack_protection"
                        },
                        {
                            "description": "Update attack protection",
                            "value": "update:attack_protection"
                        },
                        {
                            "description": "Read Organizations",
                            "value": "read:organizations"
                        },
                        {
                            "description": "Update Organizations",
                            "value": "update:organizations"
                        },
                        {
                            "description": "Create Organizations",
                            "value": "create:organizations"
                        },
                        {
                            "description": "Delete Organizations",
                            "value": "delete:organizations"
                        },
                        {
                            "description": "Create organization members",
                            "value": "create:organization_members"
                        },
                        {
                            "description": "Read organization members",
                            "value": "read:organization_members"
                        },
                        {
                            "description": "Delete organization members",
                            "value": "delete:organization_members"
                        },
                        {
                            "description": "Create organization connections",
                            "value": "create:organization_connections"
                        },
                        {
                            "description": "Read organization connections",
                            "value": "read:organization_connections"
                        },
                        {
                            "description": "Update organization connections",
                            "value": "update:organization_connections"
                        },
                        {
                            "description": "Delete organization connections",
                            "value": "delete:organization_connections"
                        },
                        {
                            "description": "Create organization member roles",
                            "value": "create:organization_member_roles"
                        },
                        {
                            "description": "Read organization member roles",
                            "value": "read:organization_member_roles"
                        },
                        {
                            "description": "Delete organization member roles",
                            "value": "delete:organization_member_roles"
                        },
                        {
                            "description": "Create organization invitations",
                            "value": "create:organization_invitations"
                        },
                        {
                            "description": "Read organization invitations",
                            "value": "read:organization_invitations"
                        },
                        {
                            "description": "Delete organization invitations",
                            "value": "delete:organization_invitations"
                        },
                        {
                            "description": "Read organization summary",
                            "value": "read:organizations_summary"
                        },
                        {
                            "description": "Create Actions Log Sessions",
                            "value": "create:actions_log_sessions"
                        },
                        {
                            "description": "Create Authentication Methods",
                            "value": "create:authentication_methods"
                        },
                        {
                            "description": "Read Authentication Methods",
                            "value": "read:authentication_methods"
                        },
                        {
                            "description": "Update Authentication Methods",
                            "value": "update:authentication_methods"
                        },
                        {
                            "description": "Delete Authentication Methods",
                            "value": "delete:authentication_methods"
                        },
                        {
                            "value": "read:client_credentials",
                            "description": "Read Client Credentials"
                        },
                        {
                            "value": "create:client_credentials",
                            "description": "Create Client Credentials"
                        },
                        {
                            "value": "update:client_credentials",
                            "description": "Update Client Credentials"
                        },
                        {
                            "value": "delete:client_credentials",
                            "description": "delete Client Credentials"
                        }
                    ],
                    "is_system": true
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/clients?include_totals=true&is_global=false&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 2,
            "start": 0,
            "limit": 100,
            "clients": [
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Deploy CLI",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "GIW99EUCF9DFExh77WPMyTMzT8NN4J3A",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "auth0-deploy-cli-e2e",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Default App",
                    "callbacks": [],
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "vJUWRvzcy4KsrFZZfpCUDyweas5Y12yB",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/connections?strategy=auth0&include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 1,
            "start": 0,
            "limit": 100,
            "connections": [
                {
                    "id": "con_6waFQqxaWcJ7rPz6",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "passwordPolicy": "good",
                        "strategy_version": 2,
                        "brute_force_protection": true
                    },
                    "strategy": "auth0",
                    "name": "Username-Password-Authentication",
                    "is_domain_connection": false,
                    "realms": [
                        "Username-Password-Authentication"
                    ],
                    "enabled_clients": [
                        "GIW99EUCF9DFExh77WPMyTMzT8NN4J3A",
                        "vJUWRvzcy4KsrFZZfpCUDyweas5Y12yB"
                    ]
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/connections?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 1,
            "start": 0,
            "limit": 100,
            "connections": [
                {
                    "id": "con_6waFQqxaWcJ7rPz6",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "passwordPolicy": "good",
                        "strategy_version": 2,
                        "brute_force_protection": true
                    },
                    "strategy": "auth0",
                    "name": "Username-Password-Authentication",
                    "is_domain_connection": false,
                    "realms": [
                        "Username-Password-Authentication"
                    ],
                    "enabled_clients": [
                        "GIW99EUCF9DFExh77WPMyTMzT8NN4J3A",
                        "vJUWRvzcy4KsrFZZfpCUDyweas5Y12yB"
                    ]
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/tenants/settings",
        "body": "",
        "status": 200,
        "response": {
            "allowed_logout_urls": [
                "https://mycompany.org/logoutCallback"
            ],
            "change_password": {
                "enabled": true,
                "html": "<html>Change Password</html>\n"
            },
            "enabled_locales": [
                "en"
            ],
            "error_page": {
                "html": "<html>Error Page</html>\n",
                "show_log_link": false,
                "url": "https://mycompany.org/error"
            },
            "flags": {
                "allow_changing_enable_sso": false,
                "allow_legacy_delegation_grant_types": true,
                "allow_legacy_ro_grant_types": true,
                "change_pwd_flow_v1": false,
                "disable_impersonation": true,
                "enable_apis_section": false,
                "enable_client_connections": false,
                "enable_custom_domain_in_emails": false,
                "enable_dynamic_client_registration": false,
                "enable_legacy_logs_search_v2": false,
                "enable_public_signup_user_exists_error": true,
                "enable_sso": true,
                "universal_login": true,
                "use_scope_descriptions_for_consent": false,
                "revoke_refresh_token_grant": false,
                "disable_clickjack_protection_headers": false,
                "enable_pipeline2": false
            },
            "friendly_name": "My Test Tenant",
            "guardian_mfa_page": {
                "enabled": true,
                "html": "<html>MFA</html>\n"
            },
            "idle_session_lifetime": 1,
            "picture_url": "https://upload.wikimedia.org/wikipedia/commons/0/0d/Grandmas_marathon_finishers.png",
            "sandbox_version": "12",
            "session_lifetime": 3.0166666666666666,
            "support_email": "support@mycompany.org",
            "support_url": "https://mycompany.org/support",
            "universal_login": {
                "colors": {
                    "primary": "#F8F8F2",
                    "page_background": "#222221"
                }
            },
            "session_cookie": {
                "mode": "non-persistent"
            },
            "sandbox_versions_available": [
                "16",
                "12"
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/emails/provider?include_fields=true&fields=name%2Cenabled%2Ccredentials%2Csettings%2Cdefault_from_address",
        "body": "",
        "status": 404,
        "response": {
            "statusCode": 404,
            "error": "Not Found",
            "message": "There is not a configured email provider",
            "errorCode": "inexistent_email_provider"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/email-templates/reset_email",
        "body": "",
        "status": 404,
        "response": {
            "statusCode": 404,
            "error": "Not Found",
            "message": "The template does not exist.",
            "errorCode": "inexistent_email_template"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/email-templates/password_reset",
        "body": "",
        "status": 404,
        "response": {
            "statusCode": 404,
            "error": "Not Found",
            "message": "The template does not exist.",
            "errorCode": "inexistent_email_template"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/email-templates/welcome_email",
        "body": "",
        "status": 200,
        "response": {
            "template": "welcome_email",
            "body": "<html>\n  <body>\n    <h1>Welcome!</h1>\n  </body>\n</html>\n",
            "from": "",
            "resultUrl": "https://example.com/welcome",
            "subject": "Welcome",
            "syntax": "liquid",
            "urlLifetimeInSeconds": 3600,
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/email-templates/stolen_credentials",
        "body": "",
        "status": 404,
        "response": {
            "statusCode": 404,
            "error": "Not Found",
            "message": "The template does not exist.",
            "errorCode": "inexistent_email_template"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/email-templates/user_invitation",
        "body": "",
        "status": 404,
        "response": {
            "statusCode": 404,
            "error": "Not Found",
            "message": "The template does not exist.",
            "errorCode": "inexistent_email_template"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/email-templates/blocked_account",
        "body": "",
        "status": 404,
        "response": {
            "statusCode": 404,
            "error": "Not Found",
            "message": "The template does not exist.",
            "errorCode": "inexistent_email_template"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/email-templates/mfa_oob_code",
        "body": "",
        "status": 404,
        "response": {
            "statusCode": 404,
            "error": "Not Found",
            "message": "The template does not exist.",
            "errorCode": "inexistent_email_template"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/email-templates/enrollment_email",
        "body": "",
        "status": 404,
        "response": {
            "statusCode": 404,
            "error": "Not Found",
            "message": "The template does not exist.",
            "errorCode": "inexistent_email_template"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/email-templates/verify_email",
        "body": "",
        "status": 200,
        "response": {
            "template": "verify_email",
            "body": "<html>\n  <head>\n    <style type=\"text/css\">\n      .ExternalClass,\n      .ExternalClass div,\n      .ExternalClass font,\n      .ExternalClass p,\n      .ExternalClass span,\n      .ExternalClass td,\n      img {\n        line-height: 100%;\n      }\n      #outlook a {\n        padding: 0;\n      }\n      .ExternalClass,\n      .ReadMsgBody {\n        width: 100%;\n      }\n      a,\n      blockquote,\n      body,\n      li,\n      p,\n      table,\n      td {\n        -webkit-text-size-adjust: 100%;\n        -ms-text-size-adjust: 100%;\n      }\n      table,\n      td {\n        mso-table-lspace: 0;\n        mso-table-rspace: 0;\n      }\n      img {\n        -ms-interpolation-mode: bicubic;\n        border: 0;\n        height: auto;\n        outline: 0;\n        text-decoration: none;\n      }\n      table {\n        border-collapse: collapse !important;\n      }\n      #bodyCell,\n      #bodyTable,\n      body {\n        height: 100% !important;\n        margin: 0;\n        padding: 0;\n        font-family: ProximaNova, sans-serif;\n      }\n      #bodyCell {\n        padding: 20px;\n      }\n      #bodyTable {\n        width: 600px;\n      }\n      @font-face {\n        font-family: ProximaNova;\n        src: url(https://cdn.auth0.com/fonts/proxima-nova/proximanova-regular-webfont-webfont.eot);\n        src: url(https://cdn.auth0.com/fonts/proxima-nova/proximanova-regular-webfont-webfont.eot?#iefix)\n            format('embedded-opentype'),\n          url(https://cdn.auth0.com/fonts/proxima-nova/proximanova-regular-webfont-webfont.woff)\n            format('woff');\n        font-weight: 400;\n        font-style: normal;\n      }\n      @font-face {\n        font-family: ProximaNova;\n        src: url(https://cdn.auth0.com/fonts/proxima-nova/proximanova-semibold-webfont-webfont.eot);\n        src: url(https://cdn.auth0.com/fonts/proxima-nova/proximanova-semibold-webfont-webfont.eot?#iefix)\n            format('embedded-opentype'),\n          url(https://cdn.auth0.com/fonts/proxima-nova/proximanova-semibold-webfont-webfont.woff)\n            format('woff');\n        font-weight: 600;\n        font-style: normal;\n      }\n      @media only screen and (max-width: 480px) {\n        #bodyTable,\n        body {\n          width: 100% !important;\n        }\n        a,\n        blockquote,\n        body,\n        li,\n        p,\n        table,\n        td {\n          -webkit-text-size-adjust: none !important;\n        }\n        body {\n          min-width: 100% !important;\n        }\n        #bodyTable {\n          max-width: 600px !important;\n        }\n        #signIn {\n          max-width: 280px !important;\n        }\n      }\n    </style>\n  </head>\n  <body>\n    <center>\n      <table\n        style=\"\n          width: 600px;\n          -webkit-text-size-adjust: 100%;\n          -ms-text-size-adjust: 100%;\n          mso-table-lspace: 0pt;\n          mso-table-rspace: 0pt;\n          margin: 0;\n          padding: 0;\n          font-family: 'ProximaNova', sans-serif;\n          border-collapse: collapse !important;\n          height: 100% !important;\n        \"\n        align=\"center\"\n        border=\"0\"\n        cellpadding=\"0\"\n        cellspacing=\"0\"\n        height=\"100%\"\n        width=\"100%\"\n        id=\"bodyTable\"\n      >\n        <tr>\n          <td\n            align=\"center\"\n            valign=\"top\"\n            id=\"bodyCell\"\n            style=\"\n              -webkit-text-size-adjust: 100%;\n              -ms-text-size-adjust: 100%;\n              mso-table-lspace: 0pt;\n              mso-table-rspace: 0pt;\n              margin: 0;\n              padding: 20px;\n              font-family: 'ProximaNova', sans-serif;\n              height: 100% !important;\n            \"\n          >\n            <div class=\"main\">\n              <p\n                style=\"\n                  text-align: center;\n                  -webkit-text-size-adjust: 100%;\n                  -ms-text-size-adjust: 100%;\n                  margin-bottom: 30px;\n                \"\n              >\n                <img\n                  src=\"https://cdn.auth0.com/styleguide/2.0.9/lib/logos/img/badge.png\"\n                  width=\"50\"\n                  alt=\"Your logo goes here\"\n                  style=\"\n                    -ms-interpolation-mode: bicubic;\n                    border: 0;\n                    height: auto;\n                    line-height: 100%;\n                    outline: none;\n                    text-decoration: none;\n                  \"\n                />\n              </p>\n\n              <h1>Welcome to {{ application.name}}!</h1>\n\n              <p>\n                Thank you for signing up. Please verify your email address by clicking the following\n                link:\n              </p>\n\n              <p><a href=\"{{ url }}\">Confirm my account</a></p>\n\n              <p>\n                If you are having any issues with your account, please don’t hesitate to contact us\n                by replying to this mail.\n              </p>\n\n              <br />\n              Haha!!!\n              <br />\n\n              <strong>{{ application.name }}</strong>\n\n              <br /><br />\n              <hr style=\"border: 2px solid #eaeef3; border-bottom: 0; margin: 20px 0\" />\n              <p\n                style=\"\n                  text-align: center;\n                  color: #a9b3bc;\n                  -webkit-text-size-adjust: 100%;\n                  -ms-text-size-adjust: 100%;\n                \"\n              >\n                If you did not make this request, please contact us by replying to this mail.\n              </p>\n            </div>\n          </td>\n        </tr>\n      </table>\n    </center>\n  </body>\n</html>\n",
            "from": "",
            "subject": "",
            "syntax": "liquid",
            "urlLifetimeInSeconds": 432000,
            "enabled": true
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/email-templates/verify_email_by_code",
        "body": "",
        "status": 404,
        "response": {
            "statusCode": 404,
            "error": "Not Found",
            "message": "The template does not exist.",
            "errorCode": "inexistent_email_template"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/email-templates/change_password",
        "body": "",
        "status": 404,
        "response": {
            "statusCode": 404,
            "error": "Not Found",
            "message": "The template does not exist.",
            "errorCode": "inexistent_email_template"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/client-grants?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "total": 1,
            "start": 0,
            "limit": 100,
            "client_grants": [
                {
                    "id": "cgr_iodSzvwxqm51tLZF",
                    "client_id": "GIW99EUCF9DFExh77WPMyTMzT8NN4J3A",
                    "audience": "https://auth0-deploy-cli-e2e.us.auth0.com/api/v2/",
                    "scope": [
                        "read:client_grants",
                        "create:client_grants",
                        "delete:client_grants",
                        "update:client_grants",
                        "read:users",
                        "update:users",
                        "delete:users",
                        "create:users",
                        "read:users_app_metadata",
                        "update:users_app_metadata",
                        "delete:users_app_metadata",
                        "create:users_app_metadata",
                        "read:user_custom_blocks",
                        "create:user_custom_blocks",
                        "delete:user_custom_blocks",
                        "create:user_tickets",
                        "read:clients",
                        "update:clients",
                        "delete:clients",
                        "create:clients",
                        "read:client_keys",
                        "update:client_keys",
                        "delete:client_keys",
                        "create:client_keys",
                        "read:connections",
                        "update:connections",
                        "delete:connections",
                        "create:connections",
                        "read:resource_servers",
                        "update:resource_servers",
                        "delete:resource_servers",
                        "create:resource_servers",
                        "read:device_credentials",
                        "update:device_credentials",
                        "delete:device_credentials",
                        "create:device_credentials",
                        "read:rules",
                        "update:rules",
                        "delete:rules",
                        "create:rules",
                        "read:rules_configs",
                        "update:rules_configs",
                        "delete:rules_configs",
                        "read:hooks",
                        "update:hooks",
                        "delete:hooks",
                        "create:hooks",
                        "read:actions",
                        "update:actions",
                        "delete:actions",
                        "create:actions",
                        "read:email_provider",
                        "update:email_provider",
                        "delete:email_provider",
                        "create:email_provider",
                        "blacklist:tokens",
                        "read:stats",
                        "read:insights",
                        "read:tenant_settings",
                        "update:tenant_settings",
                        "read:logs",
                        "read:logs_users",
                        "read:shields",
                        "create:shields",
                        "update:shields",
                        "delete:shields",
                        "read:anomaly_blocks",
                        "delete:anomaly_blocks",
                        "update:triggers",
                        "read:triggers",
                        "read:grants",
                        "delete:grants",
                        "read:guardian_factors",
                        "update:guardian_factors",
                        "read:guardian_enrollments",
                        "delete:guardian_enrollments",
                        "create:guardian_enrollment_tickets",
                        "read:user_idp_tokens",
                        "create:passwords_checking_job",
                        "delete:passwords_checking_job",
                        "read:custom_domains",
                        "delete:custom_domains",
                        "create:custom_domains",
                        "update:custom_domains",
                        "read:email_templates",
                        "create:email_templates",
                        "update:email_templates",
                        "read:mfa_policies",
                        "update:mfa_policies",
                        "read:roles",
                        "create:roles",
                        "delete:roles",
                        "update:roles",
                        "read:prompts",
                        "update:prompts",
                        "read:branding",
                        "update:branding",
                        "delete:branding",
                        "read:log_streams",
                        "create:log_streams",
                        "delete:log_streams",
                        "update:log_streams",
                        "create:signing_keys",
                        "read:signing_keys",
                        "update:signing_keys",
                        "read:limits",
                        "update:limits",
                        "create:role_members",
                        "read:role_members",
                        "delete:role_members",
                        "read:entitlements",
                        "read:attack_protection",
                        "update:attack_protection",
                        "read:organizations",
                        "update:organizations",
                        "create:organizations",
                        "delete:organizations",
                        "create:organization_members",
                        "read:organization_members",
                        "delete:organization_members",
                        "create:organization_connections",
                        "read:organization_connections",
                        "update:organization_connections",
                        "delete:organization_connections",
                        "create:organization_member_roles",
                        "read:organization_member_roles",
                        "delete:organization_member_roles",
                        "create:organization_invitations",
                        "read:organization_invitations",
                        "delete:organization_invitations",
                        "read:organizations_summary",
                        "create:actions_log_sessions",
                        "create:authentication_methods",
                        "read:authentication_methods",
                        "update:authentication_methods",
                        "delete:authentication_methods"
                    ]
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/guardian/factors",
        "body": "",
        "status": 200,
        "response": [
            {
                "name": "sms",
                "enabled": false,
                "trial_expired": false
            },
            {
                "name": "push-notification",
                "enabled": false,
                "trial_expired": false
            },
            {
                "name": "otp",
                "enabled": false,
                "trial_expired": false
            },
            {
                "name": "email",
                "enabled": false,
                "trial_expired": false
            },
            {
                "name": "duo",
                "enabled": false,
                "trial_expired": false
            },
            {
                "name": "webauthn-roaming",
                "enabled": false,
                "trial_expired": false
            },
            {
                "name": "webauthn-platform",
                "enabled": false,
                "trial_expired": false
            },
            {
                "name": "recovery-code",
                "enabled": false,
                "trial_expired": false
            }
        ],
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/guardian/factors/push-notification/providers/sns",
        "body": "",
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/guardian/factors/sms/providers/twilio",
        "body": "",
        "status": 200,
        "response": {
            "auth_token": "bar",
            "sid": "foo",
            "from": "from bar",
            "messaging_service_sid": "foo"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/guardian/factors/sms/templates",
        "body": "",
        "status": 200,
        "response": {
            "enrollment_message": "enroll foo",
            "verification_message": "verify foo"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/guardian/policies",
        "body": "",
        "status": 200,
        "response": [],
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/guardian/factors/sms/selected-provider",
        "body": "",
        "status": 200,
        "response": {
            "provider": "auth0"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/guardian/factors/phone/message-types",
        "body": "",
        "status": 200,
        "response": {
            "message_types": []
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/roles?include_totals=true&page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "roles": [],
            "start": 0,
            "limit": 100,
            "total": 0
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/branding",
        "body": "",
        "status": 200,
        "response": {
            "colors": {
                "primary": "#F8F8F2",
                "page_background": "#222221"
            },
            "logo_url": "https://upload.wikimedia.org/wikipedia/commons/0/0d/Grandmas_marathon_finishers.png"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/custom-domains",
        "body": "",
        "status": 200,
        "response": [],
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/prompts",
        "body": "",
        "status": 200,
        "response": {
            "universal_login_experience": "new",
            "identifier_first": true
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/tenants/settings",
        "body": "",
        "status": 200,
        "response": {
            "allowed_logout_urls": [
                "https://mycompany.org/logoutCallback"
            ],
            "change_password": {
                "enabled": true,
                "html": "<html>Change Password</html>\n"
            },
            "enabled_locales": [
                "en"
            ],
            "error_page": {
                "html": "<html>Error Page</html>\n",
                "show_log_link": false,
                "url": "https://mycompany.org/error"
            },
            "flags": {
                "allow_changing_enable_sso": false,
                "allow_legacy_delegation_grant_types": true,
                "allow_legacy_ro_grant_types": true,
                "change_pwd_flow_v1": false,
                "disable_impersonation": true,
                "enable_apis_section": false,
                "enable_client_connections": false,
                "enable_custom_domain_in_emails": false,
                "enable_dynamic_client_registration": false,
                "enable_legacy_logs_search_v2": false,
                "enable_public_signup_user_exists_error": true,
                "enable_sso": true,
                "universal_login": true,
                "use_scope_descriptions_for_consent": false,
                "revoke_refresh_token_grant": false,
                "disable_clickjack_protection_headers": false,
                "enable_pipeline2": false
            },
            "friendly_name": "My Test Tenant",
            "guardian_mfa_page": {
                "enabled": true,
                "html": "<html>MFA</html>\n"
            },
            "idle_session_lifetime": 1,
            "picture_url": "https://upload.wikimedia.org/wikipedia/commons/0/0d/Grandmas_marathon_finishers.png",
            "sandbox_version": "12",
            "session_lifetime": 3.0166666666666666,
            "support_email": "support@mycompany.org",
            "support_url": "https://mycompany.org/support",
            "universal_login": {
                "colors": {
                    "primary": "#F8F8F2",
                    "page_background": "#222221"
                }
            },
            "session_cookie": {
                "mode": "non-persistent"
            },
            "sandbox_versions_available": [
                "16",
                "12"
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/prompts/signup/custom-text/en",
        "body": "",
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/prompts/login-password/custom-text/en",
        "body": "",
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/prompts/login-id/custom-text/en",
        "body": "",
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/prompts/mfa-otp/custom-text/en",
        "body": "",
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/prompts/mfa-sms/custom-text/en",
        "body": "",
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/prompts/mfa-voice/custom-text/en",
        "body": "",
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/prompts/mfa-recovery-code/custom-text/en",
        "body": "",
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/prompts/mfa-phone/custom-text/en",
        "body": "",
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/prompts/login/custom-text/en",
        "body": "",
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/prompts/email-otp-challenge/custom-text/en",
        "body": "",
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/prompts/organizations/custom-text/en",
        "body": "",
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/prompts/mfa/custom-text/en",
        "body": "",
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/prompts/invitation/custom-text/en",
        "body": "",
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/prompts/email-verification/custom-text/en",
        "body": "",
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/prompts/mfa-webauthn/custom-text/en",
        "body": "",
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/prompts/reset-password/custom-text/en",
        "body": "",
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/prompts/login-email-verification/custom-text/en",
        "body": "",
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/prompts/signup-id/custom-text/en",
        "body": "",
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/prompts/consent/custom-text/en",
        "body": "",
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/prompts/mfa-push/custom-text/en",
        "body": "",
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/prompts/common/custom-text/en",
        "body": "",
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/prompts/device-flow/custom-text/en",
        "body": "",
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/prompts/mfa-email/custom-text/en",
        "body": "",
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/prompts/signup-password/custom-text/en",
        "body": "",
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/prompts/status/custom-text/en",
        "body": "",
        "status": 200,
        "response": {},
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/migrations",
        "body": "",
        "status": 200,
        "response": {
            "flags": {
                "role_users_offset_pagination_over_thousand": true
            }
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/actions/actions?page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "actions": [],
            "per_page": 100
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/actions/triggers",
        "body": "",
        "status": 200,
        "response": {
            "triggers": [
                {
                    "id": "post-login",
                    "version": "v1",
                    "status": "DEPRECATED",
                    "runtimes": [
                        "node12"
                    ],
                    "default_runtime": "node12",
                    "compatible_triggers": []
                },
                {
                    "id": "post-login",
                    "version": "v2",
                    "status": "DEPRECATED",
                    "runtimes": [
                        "node12",
                        "node16"
                    ],
                    "default_runtime": "node16",
                    "compatible_triggers": []
                },
                {
                    "id": "post-login",
                    "version": "v3",
                    "status": "CURRENT",
                    "runtimes": [
                        "node12",
                        "node16"
                    ],
                    "default_runtime": "node16",
                    "compatible_triggers": [
                        {
                            "id": "post-login",
                            "version": "v2"
                        }
                    ]
                },
                {
                    "id": "credentials-exchange",
                    "version": "v2",
                    "status": "CURRENT",
                    "runtimes": [
                        "node12",
                        "node16"
                    ],
                    "default_runtime": "node16",
                    "compatible_triggers": []
                },
                {
                    "id": "credentials-exchange",
                    "version": "v1",
                    "status": "DEPRECATED",
                    "runtimes": [
                        "node12"
                    ],
                    "default_runtime": "node12",
                    "compatible_triggers": []
                },
                {
                    "id": "pre-user-registration",
                    "version": "v1",
                    "status": "DEPRECATED",
                    "runtimes": [
                        "node12"
                    ],
                    "default_runtime": "node12",
                    "compatible_triggers": []
                },
                {
                    "id": "pre-user-registration",
                    "version": "v2",
                    "status": "CURRENT",
                    "runtimes": [
                        "node12",
                        "node16"
                    ],
                    "default_runtime": "node16",
                    "compatible_triggers": []
                },
                {
                    "id": "post-user-registration",
                    "version": "v1",
                    "status": "DEPRECATED",
                    "runtimes": [
                        "node12"
                    ],
                    "default_runtime": "node12",
                    "compatible_triggers": []
                },
                {
                    "id": "post-user-registration",
                    "version": "v2",
                    "status": "CURRENT",
                    "runtimes": [
                        "node12",
                        "node16"
                    ],
                    "default_runtime": "node16",
                    "compatible_triggers": []
                },
                {
                    "id": "post-change-password",
                    "version": "v2",
                    "status": "CURRENT",
                    "runtimes": [
                        "node12",
                        "node16"
                    ],
                    "default_runtime": "node16",
                    "compatible_triggers": []
                },
                {
                    "id": "post-change-password",
                    "version": "v1",
                    "status": "DEPRECATED",
                    "runtimes": [
                        "node12"
                    ],
                    "default_runtime": "node12",
                    "compatible_triggers": []
                },
                {
                    "id": "send-phone-message",
                    "version": "v2",
                    "status": "CURRENT",
                    "runtimes": [
                        "node12",
                        "node16"
                    ],
                    "default_runtime": "node16",
                    "compatible_triggers": []
                },
                {
                    "id": "send-phone-message",
                    "version": "v1",
                    "status": "DEPRECATED",
                    "runtimes": [
                        "node12"
                    ],
                    "compatible_triggers": []
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/actions/triggers/post-login/bindings",
        "body": "",
        "status": 200,
        "response": {
            "bindings": [],
            "per_page": 20
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/actions/triggers/credentials-exchange/bindings",
        "body": "",
        "status": 200,
        "response": {
            "bindings": [],
            "per_page": 20
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/actions/triggers/pre-user-registration/bindings",
        "body": "",
        "status": 200,
        "response": {
            "bindings": [],
            "per_page": 20
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/actions/triggers/post-user-registration/bindings",
        "body": "",
        "status": 200,
        "response": {
            "bindings": [],
            "per_page": 20
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/actions/triggers/post-change-password/bindings",
        "body": "",
        "status": 200,
        "response": {
            "bindings": [],
            "per_page": 20
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/actions/triggers/send-phone-message/bindings",
        "body": "",
        "status": 200,
        "response": {
            "bindings": [],
            "per_page": 20
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/organizations?include_totals=true",
        "body": "",
        "status": 200,
        "response": {
            "organizations": [],
            "start": 0,
            "limit": 50,
            "total": 0
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/organizations?include_totals=true&take=50",
        "body": "",
        "status": 200,
        "response": {
            "organizations": []
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/attack-protection/brute-force-protection",
        "body": "",
        "status": 200,
        "response": {
            "enabled": true,
            "shields": [
                "block",
                "user_notification"
            ],
            "mode": "count_per_identifier_and_ip",
            "allowlist": [],
            "max_attempts": 10
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/attack-protection/suspicious-ip-throttling",
        "body": "",
        "status": 200,
        "response": {
            "enabled": true,
            "shields": [
                "admin_notification",
                "block"
            ],
            "allowlist": [],
            "stage": {
                "pre-login": {
                    "max_attempts": 100,
                    "rate": 864000
                },
                "pre-user-registration": {
                    "max_attempts": 50,
                    "rate": 1200
                }
            }
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/attack-protection/breached-password-detection",
        "body": "",
        "status": 200,
        "response": {
            "enabled": false,
            "shields": [],
            "admin_notification_frequency": [],
            "method": "standard",
            "stage": {
                "pre-user-registration": {
                    "shields": []
                }
            }
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/log-streams?paginate=false",
        "body": "",
        "status": 200,
        "response": [],
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/custom-domains?paginate=false",
        "body": "",
        "status": 200,
        "response": [],
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/branding/themes/default",
        "body": "",
        "status": 404,
        "response": {
            "statusCode": 404,
            "error": "Not Found",
            "message": "There was an error retrieving branding settings: invalid theme ID",
            "errorCode": "theme_not_found"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    }
]