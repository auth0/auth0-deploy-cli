[
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/resource-servers?page=0&per_page=100&include_totals=true",
        "body": "",
        "status": 200,
        "response": {
            "total": 2,
            "start": 0,
            "limit": 100,
            "resource_servers": [
                {
                    "id": "6698c226535e13b0f1b2a3c1",
                    "name": "Auth0 Management API",
                    "identifier": "https://kushal-dev.eu.auth0.com/api/v2/",
                    "allow_offline_access": false,
                    "skip_consent_for_verifiable_first_party_clients": false,
                    "token_lifetime": 86400,
                    "token_lifetime_for_web": 7200,
                    "signing_alg": "RS256",
                    "scopes": [
                        {
                            "description": "Read Client Grants",
                            "value": "read:client_grants"
                        },
                        {
                            "description": "Create Client Grants",
                            "value": "create:client_grants"
                        },
                        {
                            "description": "Delete Client Grants",
                            "value": "delete:client_grants"
                        },
                        {
                            "description": "Update Client Grants",
                            "value": "update:client_grants"
                        },
                        {
                            "description": "Read Users",
                            "value": "read:users"
                        },
                        {
                            "description": "Update Users",
                            "value": "update:users"
                        },
                        {
                            "description": "Delete Users",
                            "value": "delete:users"
                        },
                        {
                            "description": "Create Users",
                            "value": "create:users"
                        },
                        {
                            "description": "Read Users App Metadata",
                            "value": "read:users_app_metadata"
                        },
                        {
                            "description": "Update Users App Metadata",
                            "value": "update:users_app_metadata"
                        },
                        {
                            "description": "Delete Users App Metadata",
                            "value": "delete:users_app_metadata"
                        },
                        {
                            "description": "Create Users App Metadata",
                            "value": "create:users_app_metadata"
                        },
                        {
                            "description": "Read Custom User Blocks",
                            "value": "read:user_custom_blocks"
                        },
                        {
                            "description": "Create Custom User Blocks",
                            "value": "create:user_custom_blocks"
                        },
                        {
                            "description": "Delete Custom User Blocks",
                            "value": "delete:user_custom_blocks"
                        },
                        {
                            "description": "Create User Tickets",
                            "value": "create:user_tickets"
                        },
                        {
                            "description": "Read Clients",
                            "value": "read:clients"
                        },
                        {
                            "description": "Update Clients",
                            "value": "update:clients"
                        },
                        {
                            "description": "Delete Clients",
                            "value": "delete:clients"
                        },
                        {
                            "description": "Create Clients",
                            "value": "create:clients"
                        },
                        {
                            "description": "Read Client Keys",
                            "value": "read:client_keys"
                        },
                        {
                            "description": "Update Client Keys",
                            "value": "update:client_keys"
                        },
                        {
                            "description": "Delete Client Keys",
                            "value": "delete:client_keys"
                        },
                        {
                            "description": "Create Client Keys",
                            "value": "create:client_keys"
                        },
                        {
                            "description": "Read Connections",
                            "value": "read:connections"
                        },
                        {
                            "description": "Update Connections",
                            "value": "update:connections"
                        },
                        {
                            "description": "Delete Connections",
                            "value": "delete:connections"
                        },
                        {
                            "description": "Create Connections",
                            "value": "create:connections"
                        },
                        {
                            "description": "Read Resource Servers",
                            "value": "read:resource_servers"
                        },
                        {
                            "description": "Update Resource Servers",
                            "value": "update:resource_servers"
                        },
                        {
                            "description": "Delete Resource Servers",
                            "value": "delete:resource_servers"
                        },
                        {
                            "description": "Create Resource Servers",
                            "value": "create:resource_servers"
                        },
                        {
                            "description": "Read Device Credentials",
                            "value": "read:device_credentials"
                        },
                        {
                            "description": "Update Device Credentials",
                            "value": "update:device_credentials"
                        },
                        {
                            "description": "Delete Device Credentials",
                            "value": "delete:device_credentials"
                        },
                        {
                            "description": "Create Device Credentials",
                            "value": "create:device_credentials"
                        },
                        {
                            "description": "Read Rules",
                            "value": "read:rules"
                        },
                        {
                            "description": "Update Rules",
                            "value": "update:rules"
                        },
                        {
                            "description": "Delete Rules",
                            "value": "delete:rules"
                        },
                        {
                            "description": "Create Rules",
                            "value": "create:rules"
                        },
                        {
                            "description": "Read Rules Configs",
                            "value": "read:rules_configs"
                        },
                        {
                            "description": "Update Rules Configs",
                            "value": "update:rules_configs"
                        },
                        {
                            "description": "Delete Rules Configs",
                            "value": "delete:rules_configs"
                        },
                        {
                            "description": "Read Hooks",
                            "value": "read:hooks"
                        },
                        {
                            "description": "Update Hooks",
                            "value": "update:hooks"
                        },
                        {
                            "description": "Delete Hooks",
                            "value": "delete:hooks"
                        },
                        {
                            "description": "Create Hooks",
                            "value": "create:hooks"
                        },
                        {
                            "description": "Read Actions",
                            "value": "read:actions"
                        },
                        {
                            "description": "Update Actions",
                            "value": "update:actions"
                        },
                        {
                            "description": "Delete Actions",
                            "value": "delete:actions"
                        },
                        {
                            "description": "Create Actions",
                            "value": "create:actions"
                        },
                        {
                            "description": "Read Email Provider",
                            "value": "read:email_provider"
                        },
                        {
                            "description": "Update Email Provider",
                            "value": "update:email_provider"
                        },
                        {
                            "description": "Delete Email Provider",
                            "value": "delete:email_provider"
                        },
                        {
                            "description": "Create Email Provider",
                            "value": "create:email_provider"
                        },
                        {
                            "description": "Blacklist Tokens",
                            "value": "blacklist:tokens"
                        },
                        {
                            "description": "Read Stats",
                            "value": "read:stats"
                        },
                        {
                            "description": "Read Insights",
                            "value": "read:insights"
                        },
                        {
                            "description": "Read Tenant Settings",
                            "value": "read:tenant_settings"
                        },
                        {
                            "description": "Update Tenant Settings",
                            "value": "update:tenant_settings"
                        },
                        {
                            "description": "Read Logs",
                            "value": "read:logs"
                        },
                        {
                            "description": "Read logs relating to users",
                            "value": "read:logs_users"
                        },
                        {
                            "description": "Read Shields",
                            "value": "read:shields"
                        },
                        {
                            "description": "Create Shields",
                            "value": "create:shields"
                        },
                        {
                            "description": "Update Shields",
                            "value": "update:shields"
                        },
                        {
                            "description": "Delete Shields",
                            "value": "delete:shields"
                        },
                        {
                            "description": "Read Anomaly Detection Blocks",
                            "value": "read:anomaly_blocks"
                        },
                        {
                            "description": "Delete Anomaly Detection Blocks",
                            "value": "delete:anomaly_blocks"
                        },
                        {
                            "description": "Update Triggers",
                            "value": "update:triggers"
                        },
                        {
                            "description": "Read Triggers",
                            "value": "read:triggers"
                        },
                        {
                            "description": "Read User Grants",
                            "value": "read:grants"
                        },
                        {
                            "description": "Delete User Grants",
                            "value": "delete:grants"
                        },
                        {
                            "description": "Read Guardian factors configuration",
                            "value": "read:guardian_factors"
                        },
                        {
                            "description": "Update Guardian factors",
                            "value": "update:guardian_factors"
                        },
                        {
                            "description": "Read Guardian enrollments",
                            "value": "read:guardian_enrollments"
                        },
                        {
                            "description": "Delete Guardian enrollments",
                            "value": "delete:guardian_enrollments"
                        },
                        {
                            "description": "Create enrollment tickets for Guardian",
                            "value": "create:guardian_enrollment_tickets"
                        },
                        {
                            "description": "Read Users IDP tokens",
                            "value": "read:user_idp_tokens"
                        },
                        {
                            "description": "Create password checking jobs",
                            "value": "create:passwords_checking_job"
                        },
                        {
                            "description": "Deletes password checking job and all its resources",
                            "value": "delete:passwords_checking_job"
                        },
                        {
                            "description": "Read custom domains configurations",
                            "value": "read:custom_domains"
                        },
                        {
                            "description": "Delete custom domains configurations",
                            "value": "delete:custom_domains"
                        },
                        {
                            "description": "Configure new custom domains",
                            "value": "create:custom_domains"
                        },
                        {
                            "description": "Update custom domain configurations",
                            "value": "update:custom_domains"
                        },
                        {
                            "description": "Read email templates",
                            "value": "read:email_templates"
                        },
                        {
                            "description": "Create email templates",
                            "value": "create:email_templates"
                        },
                        {
                            "description": "Update email templates",
                            "value": "update:email_templates"
                        },
                        {
                            "description": "Read Multifactor Authentication policies",
                            "value": "read:mfa_policies"
                        },
                        {
                            "description": "Update Multifactor Authentication policies",
                            "value": "update:mfa_policies"
                        },
                        {
                            "description": "Read roles",
                            "value": "read:roles"
                        },
                        {
                            "description": "Create roles",
                            "value": "create:roles"
                        },
                        {
                            "description": "Delete roles",
                            "value": "delete:roles"
                        },
                        {
                            "description": "Update roles",
                            "value": "update:roles"
                        },
                        {
                            "description": "Read prompts settings",
                            "value": "read:prompts"
                        },
                        {
                            "description": "Update prompts settings",
                            "value": "update:prompts"
                        },
                        {
                            "description": "Read branding settings",
                            "value": "read:branding"
                        },
                        {
                            "description": "Update branding settings",
                            "value": "update:branding"
                        },
                        {
                            "description": "Delete branding settings",
                            "value": "delete:branding"
                        },
                        {
                            "description": "Read log_streams",
                            "value": "read:log_streams"
                        },
                        {
                            "description": "Create log_streams",
                            "value": "create:log_streams"
                        },
                        {
                            "description": "Delete log_streams",
                            "value": "delete:log_streams"
                        },
                        {
                            "description": "Update log_streams",
                            "value": "update:log_streams"
                        },
                        {
                            "description": "Create signing keys",
                            "value": "create:signing_keys"
                        },
                        {
                            "description": "Read signing keys",
                            "value": "read:signing_keys"
                        },
                        {
                            "description": "Update signing keys",
                            "value": "update:signing_keys"
                        },
                        {
                            "description": "Read entity limits",
                            "value": "read:limits"
                        },
                        {
                            "description": "Update entity limits",
                            "value": "update:limits"
                        },
                        {
                            "description": "Create role members",
                            "value": "create:role_members"
                        },
                        {
                            "description": "Read role members",
                            "value": "read:role_members"
                        },
                        {
                            "description": "Update role members",
                            "value": "delete:role_members"
                        },
                        {
                            "description": "Read entitlements",
                            "value": "read:entitlements"
                        },
                        {
                            "description": "Read attack protection",
                            "value": "read:attack_protection"
                        },
                        {
                            "description": "Update attack protection",
                            "value": "update:attack_protection"
                        },
                        {
                            "description": "Read organization summary",
                            "value": "read:organizations_summary"
                        },
                        {
                            "description": "Create Authentication Methods",
                            "value": "create:authentication_methods"
                        },
                        {
                            "description": "Read Authentication Methods",
                            "value": "read:authentication_methods"
                        },
                        {
                            "description": "Update Authentication Methods",
                            "value": "update:authentication_methods"
                        },
                        {
                            "description": "Delete Authentication Methods",
                            "value": "delete:authentication_methods"
                        },
                        {
                            "description": "Read Organizations",
                            "value": "read:organizations"
                        },
                        {
                            "description": "Update Organizations",
                            "value": "update:organizations"
                        },
                        {
                            "description": "Create Organizations",
                            "value": "create:organizations"
                        },
                        {
                            "description": "Delete Organizations",
                            "value": "delete:organizations"
                        },
                        {
                            "description": "Create organization members",
                            "value": "create:organization_members"
                        },
                        {
                            "description": "Read organization members",
                            "value": "read:organization_members"
                        },
                        {
                            "description": "Delete organization members",
                            "value": "delete:organization_members"
                        },
                        {
                            "description": "Create organization connections",
                            "value": "create:organization_connections"
                        },
                        {
                            "description": "Read organization connections",
                            "value": "read:organization_connections"
                        },
                        {
                            "description": "Update organization connections",
                            "value": "update:organization_connections"
                        },
                        {
                            "description": "Delete organization connections",
                            "value": "delete:organization_connections"
                        },
                        {
                            "description": "Create organization member roles",
                            "value": "create:organization_member_roles"
                        },
                        {
                            "description": "Read organization member roles",
                            "value": "read:organization_member_roles"
                        },
                        {
                            "description": "Delete organization member roles",
                            "value": "delete:organization_member_roles"
                        },
                        {
                            "description": "Create organization invitations",
                            "value": "create:organization_invitations"
                        },
                        {
                            "description": "Read organization invitations",
                            "value": "read:organization_invitations"
                        },
                        {
                            "description": "Delete organization invitations",
                            "value": "delete:organization_invitations"
                        },
                        {
                            "description": "Read SCIM configuration",
                            "value": "read:scim_config"
                        },
                        {
                            "description": "Create SCIM configuration",
                            "value": "create:scim_config"
                        },
                        {
                            "description": "Update SCIM configuration",
                            "value": "update:scim_config"
                        },
                        {
                            "description": "Delete SCIM configuration",
                            "value": "delete:scim_config"
                        },
                        {
                            "description": "Create SCIM token",
                            "value": "create:scim_token"
                        },
                        {
                            "description": "Read SCIM token",
                            "value": "read:scim_token"
                        },
                        {
                            "description": "Delete SCIM token",
                            "value": "delete:scim_token"
                        },
                        {
                            "description": "Delete a Phone Notification Provider",
                            "value": "delete:phone_providers"
                        },
                        {
                            "description": "Create a Phone Notification Provider",
                            "value": "create:phone_providers"
                        },
                        {
                            "description": "Read a Phone Notification Provider",
                            "value": "read:phone_providers"
                        },
                        {
                            "description": "Update a Phone Notification Provider",
                            "value": "update:phone_providers"
                        },
                        {
                            "description": "Delete a Phone Notification Template",
                            "value": "delete:phone_templates"
                        },
                        {
                            "description": "Create a Phone Notification Template",
                            "value": "create:phone_templates"
                        },
                        {
                            "description": "Read a Phone Notification Template",
                            "value": "read:phone_templates"
                        },
                        {
                            "description": "Update a Phone Notification Template",
                            "value": "update:phone_templates"
                        },
                        {
                            "description": "Create encryption keys",
                            "value": "create:encryption_keys"
                        },
                        {
                            "description": "Read encryption keys",
                            "value": "read:encryption_keys"
                        },
                        {
                            "description": "Update encryption keys",
                            "value": "update:encryption_keys"
                        },
                        {
                            "description": "Delete encryption keys",
                            "value": "delete:encryption_keys"
                        },
                        {
                            "description": "Read Sessions",
                            "value": "read:sessions"
                        },
                        {
                            "description": "Delete Sessions",
                            "value": "delete:sessions"
                        },
                        {
                            "description": "Read Refresh Tokens",
                            "value": "read:refresh_tokens"
                        },
                        {
                            "description": "Delete Refresh Tokens",
                            "value": "delete:refresh_tokens"
                        },
                        {
                            "description": "Create Self Service Profiles",
                            "value": "create:self_service_profiles"
                        },
                        {
                            "description": "Read Self Service Profiles",
                            "value": "read:self_service_profiles"
                        },
                        {
                            "description": "Update Self Service Profiles",
                            "value": "update:self_service_profiles"
                        },
                        {
                            "description": "Delete Self Service Profiles",
                            "value": "delete:self_service_profiles"
                        },
                        {
                            "description": "Create SSO Access Tickets",
                            "value": "create:sso_access_tickets"
                        },
                        {
                            "description": "Read Forms",
                            "value": "read:forms"
                        },
                        {
                            "description": "Update Forms",
                            "value": "update:forms"
                        },
                        {
                            "description": "Delete Forms",
                            "value": "delete:forms"
                        },
                        {
                            "description": "Create Forms",
                            "value": "create:forms"
                        },
                        {
                            "description": "Read Flows",
                            "value": "read:flows"
                        },
                        {
                            "description": "Update Flows",
                            "value": "update:flows"
                        },
                        {
                            "description": "Delete Flows",
                            "value": "delete:flows"
                        },
                        {
                            "description": "Create Flows",
                            "value": "create:flows"
                        },
                        {
                            "description": "Read Flows Vault items",
                            "value": "read:flows_vault"
                        },
                        {
                            "description": "Read Flows Vault connections",
                            "value": "read:flows_vault_connections"
                        },
                        {
                            "description": "Update Flows Vault connections",
                            "value": "update:flows_vault_connections"
                        },
                        {
                            "description": "Delete Flows Vault connections",
                            "value": "delete:flows_vault_connections"
                        },
                        {
                            "description": "Create Flows Vault connections",
                            "value": "create:flows_vault_connections"
                        },
                        {
                            "description": "Read Flows Executions",
                            "value": "read:flows_executions"
                        },
                        {
                            "description": "Delete Flows Executions",
                            "value": "delete:flows_executions"
                        },
                        {
                            "description": "Read Connections Options",
                            "value": "read:connections_options"
                        },
                        {
                            "description": "Update Connections Options",
                            "value": "update:connections_options"
                        },
                        {
                            "value": "read:client_credentials",
                            "description": "Read Client Credentials"
                        },
                        {
                            "value": "create:client_credentials",
                            "description": "Create Client Credentials"
                        },
                        {
                            "value": "update:client_credentials",
                            "description": "Update Client Credentials"
                        },
                        {
                            "value": "delete:client_credentials",
                            "description": "delete Client Credentials"
                        }
                    ],
                    "is_system": true
                },
                {
                    "id": "66b2fc64e8c5ef8d40a0fe10",
                    "name": "Role test API",
                    "identifier": "role-test",
                    "allow_offline_access": false,
                    "skip_consent_for_verifiable_first_party_clients": true,
                    "token_lifetime": 86400,
                    "token_lifetime_for_web": 7200,
                    "signing_alg": "RS256",
                    "scopes": [
                        {
                            "value": "read:doc",
                            "description": "doc read permission"
                        },
                        {
                            "value": "update:doc",
                            "description": "doc update permission"
                        },
                        {
                            "value": "read:user",
                            "description": "user read permission"
                        },
                        {
                            "value": "update:user",
                            "description": "user update permission"
                        },
                        {
                            "value": "read:api",
                            "description": "api read permission"
                        },
                        {
                            "value": "update:api",
                            "description": "api update permission"
                        },
                        {
                            "value": "read:post",
                            "description": "post read permission"
                        },
                        {
                            "value": "update:post",
                            "description": "post update permission"
                        },
                        {
                            "value": "read:comment ",
                            "description": "comment read permission"
                        },
                        {
                            "value": "update:comment",
                            "description": "comment update permission"
                        }
                    ],
                    "token_dialect": "access_token"
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/clients?page=0&per_page=100&include_totals=true&is_global=false",
        "body": "",
        "status": 200,
        "response": {
            "total": 16,
            "start": 0,
            "limit": 100,
            "clients": [
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "DeployCLI-Dev",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "custom_login_page_preview": "<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <title>Sign In with Auth0</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\" />\n</head>\n<body>\n\n  <!--[if IE 8]>\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/ie8/0.2.5/ie8.js\"></script>\n  <![endif]-->\n\n  <!--[if lte IE 9]>\n  <script src=\"https://cdn.auth0.com/js/base64.js\"></script>\n  <script src=\"https://cdn.auth0.com/js/es5-shim.min.js\"></script>\n  <![endif]-->\n\n  <script src=\"https://cdn.auth0.com/js/lock/12.5/lock.min.js\"></script>\n  <script>\n    // Decode utf8 characters properly\n    var config = JSON.parse(decodeURIComponent(escape(window.atob('@@config@@'))));\n    config.extraParams = config.extraParams || {};\n    var connection = config.connection;\n    var prompt = config.prompt;\n    var languageDictionary;\n    var language;\n\n    if (config.dict && config.dict.signin && config.dict.signin.title) {\n      languageDictionary = { title: config.dict.signin.title };\n    } else if (typeof config.dict === 'string') {\n      language = config.dict;\n    }\n    var loginHint = config.extraParams.login_hint;\n    var colors = config.colors || {};\n\n    // Available Lock configuration options: https://auth0.com/docs/libraries/lock/lock-configuration\n    var lock = new Auth0Lock(config.clientID, config.auth0Domain, {\n      auth: {\n        redirectUrl: config.callbackURL,\n        responseType: (config.internalOptions || {}).response_type ||\n          (config.callbackOnLocationHash ? 'token' : 'code'),\n        params: config.internalOptions\n      },\n      configurationBaseUrl: config.clientConfigurationBaseUrl,\n      overrides: {\n        __tenant: config.auth0Tenant,\n        __token_issuer: config.authorizationServer.issuer\n      },\n      assetsUrl:  config.assetsUrl,\n      allowedConnections: connection ? [connection] : null,\n      rememberLastLogin: !prompt,\n      language: language,\n      languageBaseUrl: config.languageBaseUrl,\n      languageDictionary: languageDictionary,\n      theme: {\n        //logo:            'YOUR LOGO HERE',\n        primaryColor:    colors.primary ? colors.primary : 'green'\n      },\n      prefill: loginHint ? { email: loginHint, username: loginHint } : null,\n      closable: false,\n      defaultADUsernameFromEmailPrefix: false\n    });\n\n    if(colors.page_background) {\n      var css = '.auth0-lock.auth0-lock .auth0-lock-overlay { background: ' +\n                  colors.page_background +\n                ' }';\n      var style = document.createElement('style');\n\n      style.appendChild(document.createTextNode(css));\n\n      document.body.appendChild(style);\n    }\n\n    lock.show();\n  </script>\n</body>\n</html>  ",
                    "cross_origin_authentication": true,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "Ku5wNRXVrQbnITFA9yCr9b9SlCukFN8L",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "API Explorer Application",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "custom_login_page_preview": "<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <title>Sign In with Auth0</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\" />\n</head>\n<body>\n\n  <!--[if IE 8]>\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/ie8/0.2.5/ie8.js\"></script>\n  <![endif]-->\n\n  <!--[if lte IE 9]>\n  <script src=\"https://cdn.auth0.com/js/base64.js\"></script>\n  <script src=\"https://cdn.auth0.com/js/es5-shim.min.js\"></script>\n  <![endif]-->\n\n  <script src=\"https://cdn.auth0.com/js/lock/12.5/lock.min.js\"></script>\n  <script>\n    // Decode utf8 characters properly\n    var config = JSON.parse(decodeURIComponent(escape(window.atob('@@config@@'))));\n    config.extraParams = config.extraParams || {};\n    var connection = config.connection;\n    var prompt = config.prompt;\n    var languageDictionary;\n    var language;\n\n    if (config.dict && config.dict.signin && config.dict.signin.title) {\n      languageDictionary = { title: config.dict.signin.title };\n    } else if (typeof config.dict === 'string') {\n      language = config.dict;\n    }\n    var loginHint = config.extraParams.login_hint;\n    var colors = config.colors || {};\n\n    // Available Lock configuration options: https://auth0.com/docs/libraries/lock/lock-configuration\n    var lock = new Auth0Lock(config.clientID, config.auth0Domain, {\n      auth: {\n        redirectUrl: config.callbackURL,\n        responseType: (config.internalOptions || {}).response_type ||\n          (config.callbackOnLocationHash ? 'token' : 'code'),\n        params: config.internalOptions\n      },\n      configurationBaseUrl: config.clientConfigurationBaseUrl,\n      overrides: {\n        __tenant: config.auth0Tenant,\n        __token_issuer: config.authorizationServer.issuer\n      },\n      assetsUrl:  config.assetsUrl,\n      allowedConnections: connection ? [connection] : null,\n      rememberLastLogin: !prompt,\n      language: language,\n      languageBaseUrl: config.languageBaseUrl,\n      languageDictionary: languageDictionary,\n      theme: {\n        //logo:            'YOUR LOGO HERE',\n        primaryColor:    colors.primary ? colors.primary : 'green'\n      },\n      prefill: loginHint ? { email: loginHint, username: loginHint } : null,\n      closable: false,\n      defaultADUsernameFromEmailPrefix: false\n    });\n\n    if(colors.page_background) {\n      var css = '.auth0-lock.auth0-lock .auth0-lock-overlay { background: ' +\n                  colors.page_background +\n                ' }';\n      var style = document.createElement('style');\n\n      style.appendChild(document.createTextNode(css));\n\n      document.body.appendChild(style);\n    }\n\n    lock.show();\n  </script>\n</body>\n</html>  ",
                    "cross_origin_authentication": true,
                    "allowed_clients": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "tSJqoA0wpptageIV7f1D2bq3WgSgaPob",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Org test App",
                    "callbacks": [
                        "http://localhost:3000"
                    ],
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "cross_origin_authentication": true,
                    "allowed_clients": [],
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "organization_require_behavior": "post_login_prompt",
                    "organization_usage": "allow",
                    "allowed_logout_urls": [
                        "http://localhost:3000"
                    ],
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "NVZw2D4EQ99E4yIPEj2hE9kZJfyPTz89",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "spa",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token"
                    ],
                    "web_origins": [
                        "http://localhost:3000"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Go test app kushal",
                    "allowed_clients": [],
                    "allowed_logout_urls": [
                        "http://localhost:4002/",
                        "localhost:4002/logout"
                    ],
                    "callbacks": [
                        "http://localhost:4002/",
                        "http://localhost:4002/callback"
                    ],
                    "cross_origin_auth": false,
                    "cross_origin_authentication": true,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "organization_require_behavior": "no_prompt",
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "PxFLsPRVvz3wQrRQNI1dgQCESIDjiv8e",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "regular_web",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Role test API (Test Application)",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "cross_origin_authentication": true,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "nz0xcpycpcsyEzZ9gBlQkJ47e6GPeXQB",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "DeployCLI-E2E",
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "cross_origin_authentication": true,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "36TEM2e0l4GPf0LM8aH1lcJEZBp2DzvY",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Default App",
                    "callbacks": [],
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "cross_origin_authentication": true,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "AF2fEsiqxQ0uGNdrs8J26ibOnmXs3jEX",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Deploy CLI",
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "cross_origin_authentication": true,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "sVMh2iWlCw44yRUt88rEO5cnDA6pvm48",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Auth0-CLI",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "cross_origin_authentication": true,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "gdpNdEa0sdFOX1VZJ4xtycnNR1G5TlRg",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Dev_DAY_APP",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "allowed_clients": [],
                    "allowed_logout_urls": [
                        "http://localhost:3000"
                    ],
                    "callbacks": [
                        "http://localhost:3000/api/auth/callback",
                        "http://localhost:3000"
                    ],
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "ep5F5NHBlHlfjE1ijeuHepR3HUrdYpyv",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "regular_web",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "web_origins": [
                        "http://localhost:3000"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Node App",
                    "allowed_clients": [],
                    "allowed_logout_urls": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "allowed_origins": [],
                    "client_id": "ltna78HqWdPRiEHoLy119Dfs1iRMyR1w",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "regular_web",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "web_origins": [],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Terraform Provider",
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "3ykmF4bLMigp4Zbsznqj9uCPqLB7e95d",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Quickstarts API (Test Application)",
                    "client_metadata": {
                        "foo": "bar"
                    },
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "ixEERdhSidh32R6y7f1pzavjtho1mQoV",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "The Default App",
                    "allowed_clients": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "sso": false,
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "1v0GKWhDqqo1jgK2agXhuOarWC45wra6",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "auth0-deploy-cli-extension",
                    "allowed_clients": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "4mEZRv7D0zLfbSSWbsibdwaoYIVlRP0M",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Test SPA",
                    "allowed_clients": [],
                    "allowed_logout_urls": [
                        "http://localhost:3000"
                    ],
                    "callbacks": [
                        "http://localhost:3000"
                    ],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "expiring",
                        "leeway": 0,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "infinite_token_lifetime": false,
                        "infinite_idle_token_lifetime": false,
                        "rotation_type": "rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "u6vM7mQRWqavasw69Fye6E5mMduHlfOX",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "none",
                    "app_type": "spa",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token"
                    ],
                    "web_origins": [
                        "http://localhost:3000"
                    ],
                    "custom_login_page_on": true
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/clients/AF2fEsiqxQ0uGNdrs8J26ibOnmXs3jEX",
        "body": {
            "name": "Default App",
            "callbacks": [],
            "cross_origin_auth": false,
            "custom_login_page_on": true,
            "grant_types": [
                "authorization_code",
                "implicit",
                "refresh_token",
                "client_credentials"
            ],
            "is_first_party": true,
            "is_token_endpoint_ip_header_trusted": false,
            "jwt_configuration": {
                "alg": "RS256",
                "lifetime_in_seconds": 36000
            },
            "oidc_conformant": true,
            "refresh_token": {
                "expiration_type": "non-expiring",
                "leeway": 0,
                "infinite_token_lifetime": true,
                "infinite_idle_token_lifetime": true,
                "token_lifetime": 2592000,
                "idle_token_lifetime": 1296000,
                "rotation_type": "non-rotating"
            },
            "sso_disabled": false
        },
        "status": 200,
        "response": {
            "tenant": "kushal-dev",
            "global": false,
            "is_token_endpoint_ip_header_trusted": false,
            "name": "Default App",
            "callbacks": [],
            "cross_origin_auth": false,
            "is_first_party": true,
            "oidc_conformant": true,
            "refresh_token": {
                "expiration_type": "non-expiring",
                "leeway": 0,
                "infinite_token_lifetime": true,
                "infinite_idle_token_lifetime": true,
                "token_lifetime": 2592000,
                "idle_token_lifetime": 1296000,
                "rotation_type": "non-rotating"
            },
            "sso_disabled": false,
            "cross_origin_authentication": true,
            "signing_keys": [
                {
                    "cert": "[REDACTED]",
                    "pkcs7": "[REDACTED]",
                    "subject": "/CN=kushal-dev.eu.auth0.com"
                }
            ],
            "client_id": "AF2fEsiqxQ0uGNdrs8J26ibOnmXs3jEX",
            "callback_url_template": false,
            "client_secret": "[REDACTED]",
            "jwt_configuration": {
                "alg": "RS256",
                "lifetime_in_seconds": 36000,
                "secret_encoded": false
            },
            "grant_types": [
                "authorization_code",
                "implicit",
                "refresh_token",
                "client_credentials"
            ],
            "custom_login_page_on": true
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/clients/sVMh2iWlCw44yRUt88rEO5cnDA6pvm48",
        "body": {
            "name": "Deploy CLI",
            "app_type": "non_interactive",
            "cross_origin_auth": false,
            "custom_login_page_on": true,
            "grant_types": [
                "client_credentials"
            ],
            "is_first_party": true,
            "is_token_endpoint_ip_header_trusted": false,
            "jwt_configuration": {
                "alg": "RS256",
                "lifetime_in_seconds": 36000
            },
            "oidc_conformant": true,
            "refresh_token": {
                "expiration_type": "non-expiring",
                "leeway": 0,
                "infinite_token_lifetime": true,
                "infinite_idle_token_lifetime": true,
                "token_lifetime": 31557600,
                "idle_token_lifetime": 2592000,
                "rotation_type": "non-rotating"
            },
            "sso_disabled": false,
            "token_endpoint_auth_method": "client_secret_post"
        },
        "status": 200,
        "response": {
            "tenant": "kushal-dev",
            "global": false,
            "is_token_endpoint_ip_header_trusted": false,
            "name": "Deploy CLI",
            "cross_origin_auth": false,
            "is_first_party": true,
            "oidc_conformant": true,
            "refresh_token": {
                "expiration_type": "non-expiring",
                "leeway": 0,
                "infinite_token_lifetime": true,
                "infinite_idle_token_lifetime": true,
                "token_lifetime": 31557600,
                "idle_token_lifetime": 2592000,
                "rotation_type": "non-rotating"
            },
            "sso_disabled": false,
            "cross_origin_authentication": true,
            "signing_keys": [
                {
                    "cert": "[REDACTED]",
                    "pkcs7": "[REDACTED]",
                    "subject": "/CN=kushal-dev.eu.auth0.com"
                }
            ],
            "client_id": "sVMh2iWlCw44yRUt88rEO5cnDA6pvm48",
            "callback_url_template": false,
            "client_secret": "[REDACTED]",
            "jwt_configuration": {
                "alg": "RS256",
                "lifetime_in_seconds": 36000,
                "secret_encoded": false
            },
            "token_endpoint_auth_method": "client_secret_post",
            "app_type": "non_interactive",
            "grant_types": [
                "client_credentials"
            ],
            "custom_login_page_on": true
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/emails/provider?fields=name%2Cenabled%2Ccredentials%2Csettings%2Cdefault_from_address&include_fields=true",
        "body": "",
        "status": 200,
        "response": {
            "enabled": false,
            "credentials": {},
            "name": "mandrill",
            "default_from_address": "auth0-user@auth0.com"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/duo",
        "body": {
            "enabled": false
        },
        "status": 200,
        "response": {
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/recovery-code",
        "body": {
            "enabled": false
        },
        "status": 200,
        "response": {
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/webauthn-platform",
        "body": {
            "enabled": false
        },
        "status": 200,
        "response": {
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/email",
        "body": {
            "enabled": false
        },
        "status": 200,
        "response": {
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/webauthn-roaming",
        "body": {
            "enabled": false
        },
        "status": 200,
        "response": {
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/push-notification",
        "body": {
            "enabled": false
        },
        "status": 200,
        "response": {
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/otp",
        "body": {
            "enabled": false
        },
        "status": 200,
        "response": {
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/sms",
        "body": {
            "enabled": false
        },
        "status": 200,
        "response": {
            "enabled": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/policies",
        "body": [],
        "status": 200,
        "response": [],
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/phone/selected-provider",
        "body": {
            "provider": "auth0"
        },
        "status": 429,
        "response": {
            "statusCode": 429,
            "error": "Too Many Requests",
            "message": "Global limit has been reached",
            "errorCode": "too_many_requests"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/phone/selected-provider",
        "body": {
            "provider": "auth0"
        },
        "status": 429,
        "response": {
            "statusCode": 429,
            "error": "Too Many Requests",
            "message": "Global limit has been reached",
            "errorCode": "too_many_requests"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/phone/selected-provider",
        "body": {
            "provider": "auth0"
        },
        "status": 429,
        "response": {
            "statusCode": 429,
            "error": "Too Many Requests",
            "message": "Global limit has been reached",
            "errorCode": "too_many_requests"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/phone/selected-provider",
        "body": {
            "provider": "auth0"
        },
        "status": 429,
        "response": {
            "statusCode": 429,
            "error": "Too Many Requests",
            "message": "Global limit has been reached",
            "errorCode": "too_many_requests"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/phone/selected-provider",
        "body": {
            "provider": "auth0"
        },
        "status": 200,
        "response": {
            "provider": "auth0"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PUT",
        "path": "/api/v2/guardian/factors/phone/message-types",
        "body": {
            "message_types": []
        },
        "status": 200,
        "response": {
            "message_types": []
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/prompts",
        "body": {
            "universal_login_experience": "new"
        },
        "status": 200,
        "response": {
            "universal_login_experience": "new",
            "identifier_first": true,
            "enable_ulp_wcag_compliance": false
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/attack-protection/breached-password-detection",
        "body": {
            "enabled": false,
            "shields": [],
            "admin_notification_frequency": [],
            "method": "standard"
        },
        "status": 200,
        "response": {
            "enabled": false,
            "shields": [],
            "admin_notification_frequency": [],
            "method": "standard",
            "stage": {
                "pre-user-registration": {
                    "shields": []
                }
            }
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/attack-protection/brute-force-protection",
        "body": {
            "enabled": true,
            "shields": [
                "block",
                "user_notification"
            ],
            "mode": "count_per_identifier_and_ip",
            "allowlist": [],
            "max_attempts": 10
        },
        "status": 200,
        "response": {
            "enabled": true,
            "shields": [
                "block",
                "user_notification"
            ],
            "mode": "count_per_identifier_and_ip",
            "allowlist": [],
            "max_attempts": 10
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/attack-protection/suspicious-ip-throttling",
        "body": {
            "enabled": true,
            "shields": [
                "admin_notification",
                "block"
            ],
            "allowlist": [],
            "stage": {
                "pre-login": {
                    "max_attempts": 100,
                    "rate": 864000
                },
                "pre-user-registration": {
                    "max_attempts": 50,
                    "rate": 1200
                }
            }
        },
        "status": 200,
        "response": {
            "enabled": true,
            "shields": [
                "admin_notification",
                "block"
            ],
            "allowlist": [],
            "stage": {
                "pre-login": {
                    "max_attempts": 100,
                    "rate": 864000
                },
                "pre-user-registration": {
                    "max_attempts": 50,
                    "rate": 1200
                }
            }
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/log-streams",
        "body": "",
        "status": 200,
        "response": [
            {
                "id": "lst_0000000000004837",
                "name": "Suspended DD Log Stream",
                "type": "datadog",
                "status": "active",
                "sink": {
                    "datadogApiKey": "some-sensitive-api-key",
                    "datadogRegion": "us"
                },
                "isPriority": false
            },
            {
                "id": "lst_0000000000004838",
                "name": "Amazon EventBridge",
                "type": "eventbridge",
                "status": "active",
                "sink": {
                    "awsAccountId": "123456789012",
                    "awsRegion": "us-east-2",
                    "awsPartnerEventSource": "aws.partner/auth0.com/kushal-dev-a9c1f0a1-c9ad-45ea-9e7f-21df517bb0a9/auth0.logs"
                },
                "filters": [
                    {
                        "type": "category",
                        "name": "auth.login.success"
                    },
                    {
                        "type": "category",
                        "name": "auth.login.notification"
                    },
                    {
                        "type": "category",
                        "name": "auth.login.fail"
                    },
                    {
                        "type": "category",
                        "name": "auth.signup.success"
                    },
                    {
                        "type": "category",
                        "name": "auth.logout.success"
                    },
                    {
                        "type": "category",
                        "name": "auth.logout.fail"
                    },
                    {
                        "type": "category",
                        "name": "auth.silent_auth.fail"
                    },
                    {
                        "type": "category",
                        "name": "auth.silent_auth.success"
                    },
                    {
                        "type": "category",
                        "name": "auth.token_exchange.fail"
                    }
                ],
                "isPriority": false
            }
        ],
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/custom-domains",
        "body": "",
        "status": 200,
        "response": [
            {
                "custom_domain_id": "cd_eD0HsFcthsQON2V3",
                "domain": "kushal-cli-test.acmetest.org",
                "primary": true,
                "status": "ready",
                "type": "auth0_managed_certs",
                "verification": {
                    "methods": [
                        {
                            "name": "CNAME",
                            "record": "kushal-dev-cd-ed0hsfcthsqon2v3.edge.tenants.eu.auth0.com",
                            "domain": "kushal-cli-test.acmetest.org"
                        }
                    ]
                },
                "tls_policy": "recommended"
            }
        ],
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/clients?page=0&per_page=100&include_totals=true",
        "body": "",
        "status": 200,
        "response": {
            "total": 17,
            "start": 0,
            "limit": 100,
            "clients": [
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "DeployCLI-Dev",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "custom_login_page_preview": "<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <title>Sign In with Auth0</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\" />\n</head>\n<body>\n\n  <!--[if IE 8]>\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/ie8/0.2.5/ie8.js\"></script>\n  <![endif]-->\n\n  <!--[if lte IE 9]>\n  <script src=\"https://cdn.auth0.com/js/base64.js\"></script>\n  <script src=\"https://cdn.auth0.com/js/es5-shim.min.js\"></script>\n  <![endif]-->\n\n  <script src=\"https://cdn.auth0.com/js/lock/12.5/lock.min.js\"></script>\n  <script>\n    // Decode utf8 characters properly\n    var config = JSON.parse(decodeURIComponent(escape(window.atob('@@config@@'))));\n    config.extraParams = config.extraParams || {};\n    var connection = config.connection;\n    var prompt = config.prompt;\n    var languageDictionary;\n    var language;\n\n    if (config.dict && config.dict.signin && config.dict.signin.title) {\n      languageDictionary = { title: config.dict.signin.title };\n    } else if (typeof config.dict === 'string') {\n      language = config.dict;\n    }\n    var loginHint = config.extraParams.login_hint;\n    var colors = config.colors || {};\n\n    // Available Lock configuration options: https://auth0.com/docs/libraries/lock/lock-configuration\n    var lock = new Auth0Lock(config.clientID, config.auth0Domain, {\n      auth: {\n        redirectUrl: config.callbackURL,\n        responseType: (config.internalOptions || {}).response_type ||\n          (config.callbackOnLocationHash ? 'token' : 'code'),\n        params: config.internalOptions\n      },\n      configurationBaseUrl: config.clientConfigurationBaseUrl,\n      overrides: {\n        __tenant: config.auth0Tenant,\n        __token_issuer: config.authorizationServer.issuer\n      },\n      assetsUrl:  config.assetsUrl,\n      allowedConnections: connection ? [connection] : null,\n      rememberLastLogin: !prompt,\n      language: language,\n      languageBaseUrl: config.languageBaseUrl,\n      languageDictionary: languageDictionary,\n      theme: {\n        //logo:            'YOUR LOGO HERE',\n        primaryColor:    colors.primary ? colors.primary : 'green'\n      },\n      prefill: loginHint ? { email: loginHint, username: loginHint } : null,\n      closable: false,\n      defaultADUsernameFromEmailPrefix: false\n    });\n\n    if(colors.page_background) {\n      var css = '.auth0-lock.auth0-lock .auth0-lock-overlay { background: ' +\n                  colors.page_background +\n                ' }';\n      var style = document.createElement('style');\n\n      style.appendChild(document.createTextNode(css));\n\n      document.body.appendChild(style);\n    }\n\n    lock.show();\n  </script>\n</body>\n</html>  ",
                    "cross_origin_authentication": true,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "Ku5wNRXVrQbnITFA9yCr9b9SlCukFN8L",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "API Explorer Application",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "custom_login_page_preview": "<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <title>Sign In with Auth0</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\" />\n</head>\n<body>\n\n  <!--[if IE 8]>\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/ie8/0.2.5/ie8.js\"></script>\n  <![endif]-->\n\n  <!--[if lte IE 9]>\n  <script src=\"https://cdn.auth0.com/js/base64.js\"></script>\n  <script src=\"https://cdn.auth0.com/js/es5-shim.min.js\"></script>\n  <![endif]-->\n\n  <script src=\"https://cdn.auth0.com/js/lock/12.5/lock.min.js\"></script>\n  <script>\n    // Decode utf8 characters properly\n    var config = JSON.parse(decodeURIComponent(escape(window.atob('@@config@@'))));\n    config.extraParams = config.extraParams || {};\n    var connection = config.connection;\n    var prompt = config.prompt;\n    var languageDictionary;\n    var language;\n\n    if (config.dict && config.dict.signin && config.dict.signin.title) {\n      languageDictionary = { title: config.dict.signin.title };\n    } else if (typeof config.dict === 'string') {\n      language = config.dict;\n    }\n    var loginHint = config.extraParams.login_hint;\n    var colors = config.colors || {};\n\n    // Available Lock configuration options: https://auth0.com/docs/libraries/lock/lock-configuration\n    var lock = new Auth0Lock(config.clientID, config.auth0Domain, {\n      auth: {\n        redirectUrl: config.callbackURL,\n        responseType: (config.internalOptions || {}).response_type ||\n          (config.callbackOnLocationHash ? 'token' : 'code'),\n        params: config.internalOptions\n      },\n      configurationBaseUrl: config.clientConfigurationBaseUrl,\n      overrides: {\n        __tenant: config.auth0Tenant,\n        __token_issuer: config.authorizationServer.issuer\n      },\n      assetsUrl:  config.assetsUrl,\n      allowedConnections: connection ? [connection] : null,\n      rememberLastLogin: !prompt,\n      language: language,\n      languageBaseUrl: config.languageBaseUrl,\n      languageDictionary: languageDictionary,\n      theme: {\n        //logo:            'YOUR LOGO HERE',\n        primaryColor:    colors.primary ? colors.primary : 'green'\n      },\n      prefill: loginHint ? { email: loginHint, username: loginHint } : null,\n      closable: false,\n      defaultADUsernameFromEmailPrefix: false\n    });\n\n    if(colors.page_background) {\n      var css = '.auth0-lock.auth0-lock .auth0-lock-overlay { background: ' +\n                  colors.page_background +\n                ' }';\n      var style = document.createElement('style');\n\n      style.appendChild(document.createTextNode(css));\n\n      document.body.appendChild(style);\n    }\n\n    lock.show();\n  </script>\n</body>\n</html>  ",
                    "cross_origin_authentication": true,
                    "allowed_clients": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "tSJqoA0wpptageIV7f1D2bq3WgSgaPob",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Org test App",
                    "callbacks": [
                        "http://localhost:3000"
                    ],
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "cross_origin_authentication": true,
                    "allowed_clients": [],
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "organization_require_behavior": "post_login_prompt",
                    "organization_usage": "allow",
                    "allowed_logout_urls": [
                        "http://localhost:3000"
                    ],
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "NVZw2D4EQ99E4yIPEj2hE9kZJfyPTz89",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "spa",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token"
                    ],
                    "web_origins": [
                        "http://localhost:3000"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Go test app kushal",
                    "allowed_clients": [],
                    "allowed_logout_urls": [
                        "http://localhost:4002/",
                        "localhost:4002/logout"
                    ],
                    "callbacks": [
                        "http://localhost:4002/",
                        "http://localhost:4002/callback"
                    ],
                    "cross_origin_auth": false,
                    "cross_origin_authentication": true,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "organization_require_behavior": "no_prompt",
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "PxFLsPRVvz3wQrRQNI1dgQCESIDjiv8e",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "regular_web",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Role test API (Test Application)",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "cross_origin_authentication": true,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "nz0xcpycpcsyEzZ9gBlQkJ47e6GPeXQB",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "DeployCLI-E2E",
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "cross_origin_authentication": true,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "36TEM2e0l4GPf0LM8aH1lcJEZBp2DzvY",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Default App",
                    "callbacks": [],
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "cross_origin_authentication": true,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "AF2fEsiqxQ0uGNdrs8J26ibOnmXs3jEX",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Deploy CLI",
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "cross_origin_authentication": true,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "sVMh2iWlCw44yRUt88rEO5cnDA6pvm48",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Auth0-CLI",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "cross_origin_authentication": true,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "gdpNdEa0sdFOX1VZJ4xtycnNR1G5TlRg",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Dev_DAY_APP",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "allowed_clients": [],
                    "allowed_logout_urls": [
                        "http://localhost:3000"
                    ],
                    "callbacks": [
                        "http://localhost:3000/api/auth/callback",
                        "http://localhost:3000"
                    ],
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "ep5F5NHBlHlfjE1ijeuHepR3HUrdYpyv",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "regular_web",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "web_origins": [
                        "http://localhost:3000"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Node App",
                    "allowed_clients": [],
                    "allowed_logout_urls": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "allowed_origins": [],
                    "client_id": "ltna78HqWdPRiEHoLy119Dfs1iRMyR1w",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "regular_web",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "web_origins": [],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Terraform Provider",
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "3ykmF4bLMigp4Zbsznqj9uCPqLB7e95d",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Quickstarts API (Test Application)",
                    "client_metadata": {
                        "foo": "bar"
                    },
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "ixEERdhSidh32R6y7f1pzavjtho1mQoV",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "The Default App",
                    "allowed_clients": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "sso": false,
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "1v0GKWhDqqo1jgK2agXhuOarWC45wra6",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "auth0-deploy-cli-extension",
                    "allowed_clients": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "4mEZRv7D0zLfbSSWbsibdwaoYIVlRP0M",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Test SPA",
                    "allowed_clients": [],
                    "allowed_logout_urls": [
                        "http://localhost:3000"
                    ],
                    "callbacks": [
                        "http://localhost:3000"
                    ],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "expiring",
                        "leeway": 0,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "infinite_token_lifetime": false,
                        "infinite_idle_token_lifetime": false,
                        "rotation_type": "rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "u6vM7mQRWqavasw69Fye6E5mMduHlfOX",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "none",
                    "app_type": "spa",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token"
                    ],
                    "web_origins": [
                        "http://localhost:3000"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": true,
                    "callbacks": [],
                    "is_first_party": true,
                    "name": "All Applications",
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "owners": [
                        "mr|google-oauth2|109614534713742077035"
                    ],
                    "custom_login_page": "<html>TEST123</html>\n",
                    "cross_origin_authentication": true,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "2Mlaa9rTwG8PJkTuRLXoeNOy8MibpSPn",
                    "client_secret": "[REDACTED]",
                    "custom_login_page_on": true
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/connections?per_page=100&page=0&include_totals=true&strategy=auth0",
        "body": "",
        "status": 200,
        "response": {
            "total": 3,
            "start": 0,
            "limit": 100,
            "connections": [
                {
                    "id": "con_1phMfGakxwdqWmih",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "import_mode": false,
                        "customScripts": {
                            "login": "function login(email, password, callback) {\n  // This script should authenticate a user against the credentials stored in\n  // your database.\n  // It is executed when a user attempts to log in or immediately after signing\n  // up (as a verification that the user was successfully signed up).\n  //\n  // Everything returned by this script will be set as part of the user profile\n  // and will be visible by any of the tenant admins. Avoid adding attributes\n  // with values such as passwords, keys, secrets, etc.\n  //\n  // The `password` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database. For example:\n  //\n  //     var bcrypt = require('bcrypt@0.8.5');\n  //     bcrypt.compare(password, dbPasswordHash, function(err, res)) { ... }\n  //\n  // There are three ways this script can finish:\n  // 1. The user's credentials are valid. The returned user profile should be in\n  // the following format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema\n  //     var profile = {\n  //       user_id: ..., // user_id is mandatory\n  //       email: ...,\n  //       [...]\n  //     };\n  //     callback(null, profile);\n  // 2. The user's credentials are invalid\n  //     callback(new WrongUsernameOrPasswordError(email, \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n  //\n  // A list of Node.js modules which can be referenced is available here:\n  //\n  //    https://tehsis.github.io/webtaskio-canirequire/\n  console.log('AYYYYYE');\n\n  const msg =\n    'Please implement the Login script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "create": "function create(user, callback) {\n  // This script should create a user entry in your existing database. It will\n  // be executed when a user attempts to sign up, or when a user is created\n  // through the Auth0 dashboard or API.\n  // When this script has finished executing, the Login script will be\n  // executed immediately afterwards, to verify that the user was created\n  // successfully.\n  //\n  // The user object will always contain the following properties:\n  // * email: the user's email\n  // * password: the password entered by the user, in plain text\n  // * tenant: the name of this Auth0 account\n  // * client_id: the client ID of the application where the user signed up, or\n  //              API key if created through the API or Auth0 dashboard\n  // * connection: the name of this database connection\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully created\n  //     callback(null);\n  // 2. This user already exists in your database\n  //     callback(new ValidationError(\"user_exists\", \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Create script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "delete": "function remove(id, callback) {\n  // This script remove a user from your existing database.\n  // It is executed whenever a user is deleted from the API or Auth0 dashboard.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user was removed successfully:\n  //     callback(null);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Delete script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "verify": "function verify(email, callback) {\n  // This script should mark the current user's email address as verified in\n  // your database.\n  // It is executed whenever a user clicks the verification link sent by email.\n  // These emails can be customized at https://manage.auth0.com/#/emails.\n  // It is safe to assume that the user's email already exists in your database,\n  // because verification emails, if enabled, are sent immediately after a\n  // successful signup.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user's email was verified successfully\n  //     callback(null, true);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the verification link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Verify script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "get_user": "function getByEmail(email, callback) {\n  // This script should retrieve a user profile from your existing database,\n  // without authenticating the user.\n  // It is used to check if a user exists before executing flows that do not\n  // require authentication (signup and password reset).\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully found. The profile should be in the following\n  // format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema.\n  //     callback(null, profile);\n  // 2. A user was not found\n  //     callback(null);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Get User script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "change_password": "function changePassword(email, newPassword, callback) {\n  // This script should change the password stored for the current user in your\n  // database. It is executed when the user clicks on the confirmation link\n  // after a reset password request.\n  // The content and behavior of password confirmation emails can be customized\n  // here: https://manage.auth0.com/#/emails\n  // The `newPassword` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database.\n  //\n  // There are three ways that this script can finish:\n  // 1. The user's password was updated successfully:\n  //     callback(null, true);\n  // 2. The user's password was not updated:\n  //     callback(null, false);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the confirmation link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Change Password script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n"
                        },
                        "disable_signup": false,
                        "passwordPolicy": "low",
                        "passkey_options": {
                            "challenge_ui": "both",
                            "local_enrollment_enabled": true,
                            "progressive_enrollment_enabled": true
                        },
                        "password_history": {
                            "size": 5,
                            "enable": false
                        },
                        "strategy_version": 2,
                        "requires_username": true,
                        "password_dictionary": {
                            "enable": true,
                            "dictionary": []
                        },
                        "authentication_methods": {
                            "passkey": {
                                "enabled": false
                            },
                            "password": {
                                "enabled": true
                            }
                        },
                        "brute_force_protection": true,
                        "password_no_personal_info": {
                            "enable": true
                        },
                        "password_complexity_options": {
                            "min_length": 8
                        },
                        "enabledDatabaseCustomization": true
                    },
                    "strategy": "auth0",
                    "name": "boo-baz-db-connection-test",
                    "is_domain_connection": false,
                    "realms": [
                        "boo-baz-db-connection-test"
                    ],
                    "enabled_clients": [
                        "4mEZRv7D0zLfbSSWbsibdwaoYIVlRP0M",
                        "ltna78HqWdPRiEHoLy119Dfs1iRMyR1w"
                    ]
                },
                {
                    "id": "con_hvEjcU2lcs9383To",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "import_mode": false,
                        "configuration": {},
                        "customScripts": {
                            "login": "function login(email, password, callback) {\n  // This script should authenticate a user against the credentials stored in\n  // your database.\n  // It is executed when a user attempts to log in or immediately after signing\n  // up (as a verification that the user was successfully signed up).\n  //\n  // Everything returned by this script will be set as part of the user profile\n  // and will be visible by any of the tenant admins. Avoid adding attributes\n  // with values such as passwords, keys, secrets, etc.\n  //\n  // The `password` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database. For example:\n  //\n  //     var bcrypt = require('bcrypt@0.8.5');\n  //     bcrypt.compare(password, dbPasswordHash, function(err, res)) { ... }\n  //\n  // There are three ways this script can finish:\n  // 1. The user's credentials are valid. The returned user profile should be in\n  // the following format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema\n  //     var profile = {\n  //       user_id: ..., // user_id is mandatory\n  //       email: ...,\n  //       [...]\n  //     };\n  //     callback(null, profile);\n  // 2. The user's credentials are invalid\n  //     callback(new WrongUsernameOrPasswordError(email, \"my error message\"));\n  //\n  //    Note: Passing no arguments or a falsey first argument to\n  //    `WrongUsernameOrPasswordError` will result in the error being logged as\n  //    an `fu` event (invalid username/email) with an empty string for a user_id.\n  //    Providing a truthy first argument will result in the error being logged\n  //    as an `fp` event (the user exists, but the password is invalid) with a\n  //    user_id value of \"auth0|<first argument>\". See the `Log Event Type Codes`\n  //    documentation for more information about these event types:\n  //    https://auth0.com/docs/deploy-monitor/logs/log-event-type-codes\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n  //\n  // A list of Node.js modules which can be referenced is available here:\n  //\n  //    https://tehsis.github.io/webtaskio-canirequire/\n\n  const msg = 'Please implement the Login script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database/';\n\n  const testURL = \"https://kushal-dev.eu.auth0.com/api\";\n  console.log(\"testURL: \", testURL);\n\n  return callback(new Error(msg));\n}\n",
                            "create": "function create(user, callback) {\n  // This script should create a user entry in your existing database. It will\n  // be executed when a user attempts to sign up, or when a user is created\n  // through the Auth0 dashboard or API.\n  // When this script has finished executing, the Login script will be\n  // executed immediately afterwards, to verify that the user was created\n  // successfully.\n  //\n  // The user object will always contain the following properties:\n  // * email: the user's email\n  // * password: the password entered by the user, in plain text\n  // * tenant: the name of this Auth0 account\n  // * client_id: the client ID of the application where the user signed up, or\n  //              API key if created through the API or Auth0 dashboard\n  // * connection: the name of this database connection\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully created\n  //     callback(null);\n  // 2. This user already exists in your database\n  //     callback(new ValidationError(\"user_exists\", \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n\n  const msg = 'Please implement the Create script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "delete": "function remove(id, callback) {\n  // This script remove a user from your existing database.\n  // It is executed whenever a user is deleted from the API or Auth0 dashboard.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user was removed successfully:\n  //     callback(null);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg = 'Please implement the Delete script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "verify": "function verify(email, callback) {\n  // This script should mark the current user's email address as verified in\n  // your database.\n  // It is executed whenever a user clicks the verification link sent by email.\n  // These emails can be customized at https://manage.auth0.com/#/emails.\n  // It is safe to assume that the user's email already exists in your database,\n  // because verification emails, if enabled, are sent immediately after a\n  // successful signup.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user's email was verified successfully\n  //     callback(null, true);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the verification link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg = 'Please implement the Verify script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "get_user": "function getByEmail(email, callback) {\n  // This script should retrieve a user profile from your existing database,\n  // without authenticating the user.\n  // It is used to check if a user exists before executing flows that do not\n  // require authentication (signup and password reset).\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully found. The profile should be in the following\n  // format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema.\n  //     callback(null, profile);\n  // 2. A user was not found\n  //     callback(null);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg = 'Please implement the Get User script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "change_password": "function changePassword(email, newPassword, callback) {\n  // This script should change the password stored for the current user in your\n  // database. It is executed when the user clicks on the confirmation link\n  // after a reset password request.\n  // The content and behavior of password confirmation emails can be customized\n  // here: https://manage.auth0.com/#/emails\n  // The `newPassword` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database.\n  //\n  // There are three ways that this script can finish:\n  // 1. The user's password was updated successfully:\n  //     callback(null, true);\n  // 2. The user's password was not updated:\n  //     callback(null, false);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the confirmation link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg = 'Please implement the Change Password script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n"
                        },
                        "disable_signup": false,
                        "passwordPolicy": "good",
                        "passkey_options": {
                            "challenge_ui": "both",
                            "local_enrollment_enabled": true,
                            "progressive_enrollment_enabled": true
                        },
                        "password_history": {
                            "size": 5,
                            "enable": false
                        },
                        "strategy_version": 2,
                        "requires_username": true,
                        "password_dictionary": {
                            "enable": false,
                            "dictionary": []
                        },
                        "authentication_methods": {
                            "passkey": {
                                "enabled": false
                            },
                            "password": {
                                "enabled": true
                            }
                        },
                        "brute_force_protection": true,
                        "password_no_personal_info": {
                            "enable": false
                        },
                        "password_complexity_options": {
                            "min_length": 8
                        },
                        "enabledDatabaseCustomization": true
                    },
                    "strategy": "auth0",
                    "name": "DB-connection-Two",
                    "is_domain_connection": false,
                    "realms": [
                        "DB-connection-Two"
                    ],
                    "enabled_clients": []
                },
                {
                    "id": "con_0wl0dLTgEBQTMRrK",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "passwordPolicy": "good",
                        "passkey_options": {
                            "challenge_ui": "both",
                            "local_enrollment_enabled": true,
                            "progressive_enrollment_enabled": true
                        },
                        "strategy_version": 2,
                        "authentication_methods": {
                            "passkey": {
                                "enabled": false
                            },
                            "password": {
                                "enabled": true
                            }
                        },
                        "brute_force_protection": true
                    },
                    "strategy": "auth0",
                    "name": "Username-Password-Authentication",
                    "is_domain_connection": false,
                    "realms": [
                        "Username-Password-Authentication"
                    ],
                    "enabled_clients": [
                        "sVMh2iWlCw44yRUt88rEO5cnDA6pvm48",
                        "gdpNdEa0sdFOX1VZJ4xtycnNR1G5TlRg",
                        "AF2fEsiqxQ0uGNdrs8J26ibOnmXs3jEX",
                        "NVZw2D4EQ99E4yIPEj2hE9kZJfyPTz89",
                        "ep5F5NHBlHlfjE1ijeuHepR3HUrdYpyv",
                        "ltna78HqWdPRiEHoLy119Dfs1iRMyR1w",
                        "ixEERdhSidh32R6y7f1pzavjtho1mQoV",
                        "1v0GKWhDqqo1jgK2agXhuOarWC45wra6",
                        "u6vM7mQRWqavasw69Fye6E5mMduHlfOX",
                        "3ykmF4bLMigp4Zbsznqj9uCPqLB7e95d",
                        "4mEZRv7D0zLfbSSWbsibdwaoYIVlRP0M"
                    ]
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/connections?per_page=100&page=0&include_totals=true&strategy=auth0",
        "body": "",
        "status": 200,
        "response": {
            "total": 3,
            "start": 0,
            "limit": 100,
            "connections": [
                {
                    "id": "con_1phMfGakxwdqWmih",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "import_mode": false,
                        "customScripts": {
                            "login": "function login(email, password, callback) {\n  // This script should authenticate a user against the credentials stored in\n  // your database.\n  // It is executed when a user attempts to log in or immediately after signing\n  // up (as a verification that the user was successfully signed up).\n  //\n  // Everything returned by this script will be set as part of the user profile\n  // and will be visible by any of the tenant admins. Avoid adding attributes\n  // with values such as passwords, keys, secrets, etc.\n  //\n  // The `password` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database. For example:\n  //\n  //     var bcrypt = require('bcrypt@0.8.5');\n  //     bcrypt.compare(password, dbPasswordHash, function(err, res)) { ... }\n  //\n  // There are three ways this script can finish:\n  // 1. The user's credentials are valid. The returned user profile should be in\n  // the following format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema\n  //     var profile = {\n  //       user_id: ..., // user_id is mandatory\n  //       email: ...,\n  //       [...]\n  //     };\n  //     callback(null, profile);\n  // 2. The user's credentials are invalid\n  //     callback(new WrongUsernameOrPasswordError(email, \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n  //\n  // A list of Node.js modules which can be referenced is available here:\n  //\n  //    https://tehsis.github.io/webtaskio-canirequire/\n  console.log('AYYYYYE');\n\n  const msg =\n    'Please implement the Login script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "create": "function create(user, callback) {\n  // This script should create a user entry in your existing database. It will\n  // be executed when a user attempts to sign up, or when a user is created\n  // through the Auth0 dashboard or API.\n  // When this script has finished executing, the Login script will be\n  // executed immediately afterwards, to verify that the user was created\n  // successfully.\n  //\n  // The user object will always contain the following properties:\n  // * email: the user's email\n  // * password: the password entered by the user, in plain text\n  // * tenant: the name of this Auth0 account\n  // * client_id: the client ID of the application where the user signed up, or\n  //              API key if created through the API or Auth0 dashboard\n  // * connection: the name of this database connection\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully created\n  //     callback(null);\n  // 2. This user already exists in your database\n  //     callback(new ValidationError(\"user_exists\", \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Create script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "delete": "function remove(id, callback) {\n  // This script remove a user from your existing database.\n  // It is executed whenever a user is deleted from the API or Auth0 dashboard.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user was removed successfully:\n  //     callback(null);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Delete script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "verify": "function verify(email, callback) {\n  // This script should mark the current user's email address as verified in\n  // your database.\n  // It is executed whenever a user clicks the verification link sent by email.\n  // These emails can be customized at https://manage.auth0.com/#/emails.\n  // It is safe to assume that the user's email already exists in your database,\n  // because verification emails, if enabled, are sent immediately after a\n  // successful signup.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user's email was verified successfully\n  //     callback(null, true);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the verification link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Verify script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "get_user": "function getByEmail(email, callback) {\n  // This script should retrieve a user profile from your existing database,\n  // without authenticating the user.\n  // It is used to check if a user exists before executing flows that do not\n  // require authentication (signup and password reset).\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully found. The profile should be in the following\n  // format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema.\n  //     callback(null, profile);\n  // 2. A user was not found\n  //     callback(null);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Get User script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "change_password": "function changePassword(email, newPassword, callback) {\n  // This script should change the password stored for the current user in your\n  // database. It is executed when the user clicks on the confirmation link\n  // after a reset password request.\n  // The content and behavior of password confirmation emails can be customized\n  // here: https://manage.auth0.com/#/emails\n  // The `newPassword` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database.\n  //\n  // There are three ways that this script can finish:\n  // 1. The user's password was updated successfully:\n  //     callback(null, true);\n  // 2. The user's password was not updated:\n  //     callback(null, false);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the confirmation link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Change Password script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n"
                        },
                        "disable_signup": false,
                        "passwordPolicy": "low",
                        "passkey_options": {
                            "challenge_ui": "both",
                            "local_enrollment_enabled": true,
                            "progressive_enrollment_enabled": true
                        },
                        "password_history": {
                            "size": 5,
                            "enable": false
                        },
                        "strategy_version": 2,
                        "requires_username": true,
                        "password_dictionary": {
                            "enable": true,
                            "dictionary": []
                        },
                        "authentication_methods": {
                            "passkey": {
                                "enabled": false
                            },
                            "password": {
                                "enabled": true
                            }
                        },
                        "brute_force_protection": true,
                        "password_no_personal_info": {
                            "enable": true
                        },
                        "password_complexity_options": {
                            "min_length": 8
                        },
                        "enabledDatabaseCustomization": true
                    },
                    "strategy": "auth0",
                    "name": "boo-baz-db-connection-test",
                    "is_domain_connection": false,
                    "realms": [
                        "boo-baz-db-connection-test"
                    ],
                    "enabled_clients": [
                        "4mEZRv7D0zLfbSSWbsibdwaoYIVlRP0M",
                        "ltna78HqWdPRiEHoLy119Dfs1iRMyR1w"
                    ]
                },
                {
                    "id": "con_hvEjcU2lcs9383To",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "import_mode": false,
                        "configuration": {},
                        "customScripts": {
                            "login": "function login(email, password, callback) {\n  // This script should authenticate a user against the credentials stored in\n  // your database.\n  // It is executed when a user attempts to log in or immediately after signing\n  // up (as a verification that the user was successfully signed up).\n  //\n  // Everything returned by this script will be set as part of the user profile\n  // and will be visible by any of the tenant admins. Avoid adding attributes\n  // with values such as passwords, keys, secrets, etc.\n  //\n  // The `password` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database. For example:\n  //\n  //     var bcrypt = require('bcrypt@0.8.5');\n  //     bcrypt.compare(password, dbPasswordHash, function(err, res)) { ... }\n  //\n  // There are three ways this script can finish:\n  // 1. The user's credentials are valid. The returned user profile should be in\n  // the following format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema\n  //     var profile = {\n  //       user_id: ..., // user_id is mandatory\n  //       email: ...,\n  //       [...]\n  //     };\n  //     callback(null, profile);\n  // 2. The user's credentials are invalid\n  //     callback(new WrongUsernameOrPasswordError(email, \"my error message\"));\n  //\n  //    Note: Passing no arguments or a falsey first argument to\n  //    `WrongUsernameOrPasswordError` will result in the error being logged as\n  //    an `fu` event (invalid username/email) with an empty string for a user_id.\n  //    Providing a truthy first argument will result in the error being logged\n  //    as an `fp` event (the user exists, but the password is invalid) with a\n  //    user_id value of \"auth0|<first argument>\". See the `Log Event Type Codes`\n  //    documentation for more information about these event types:\n  //    https://auth0.com/docs/deploy-monitor/logs/log-event-type-codes\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n  //\n  // A list of Node.js modules which can be referenced is available here:\n  //\n  //    https://tehsis.github.io/webtaskio-canirequire/\n\n  const msg = 'Please implement the Login script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database/';\n\n  const testURL = \"https://kushal-dev.eu.auth0.com/api\";\n  console.log(\"testURL: \", testURL);\n\n  return callback(new Error(msg));\n}\n",
                            "create": "function create(user, callback) {\n  // This script should create a user entry in your existing database. It will\n  // be executed when a user attempts to sign up, or when a user is created\n  // through the Auth0 dashboard or API.\n  // When this script has finished executing, the Login script will be\n  // executed immediately afterwards, to verify that the user was created\n  // successfully.\n  //\n  // The user object will always contain the following properties:\n  // * email: the user's email\n  // * password: the password entered by the user, in plain text\n  // * tenant: the name of this Auth0 account\n  // * client_id: the client ID of the application where the user signed up, or\n  //              API key if created through the API or Auth0 dashboard\n  // * connection: the name of this database connection\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully created\n  //     callback(null);\n  // 2. This user already exists in your database\n  //     callback(new ValidationError(\"user_exists\", \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n\n  const msg = 'Please implement the Create script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "delete": "function remove(id, callback) {\n  // This script remove a user from your existing database.\n  // It is executed whenever a user is deleted from the API or Auth0 dashboard.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user was removed successfully:\n  //     callback(null);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg = 'Please implement the Delete script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "verify": "function verify(email, callback) {\n  // This script should mark the current user's email address as verified in\n  // your database.\n  // It is executed whenever a user clicks the verification link sent by email.\n  // These emails can be customized at https://manage.auth0.com/#/emails.\n  // It is safe to assume that the user's email already exists in your database,\n  // because verification emails, if enabled, are sent immediately after a\n  // successful signup.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user's email was verified successfully\n  //     callback(null, true);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the verification link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg = 'Please implement the Verify script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "get_user": "function getByEmail(email, callback) {\n  // This script should retrieve a user profile from your existing database,\n  // without authenticating the user.\n  // It is used to check if a user exists before executing flows that do not\n  // require authentication (signup and password reset).\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully found. The profile should be in the following\n  // format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema.\n  //     callback(null, profile);\n  // 2. A user was not found\n  //     callback(null);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg = 'Please implement the Get User script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "change_password": "function changePassword(email, newPassword, callback) {\n  // This script should change the password stored for the current user in your\n  // database. It is executed when the user clicks on the confirmation link\n  // after a reset password request.\n  // The content and behavior of password confirmation emails can be customized\n  // here: https://manage.auth0.com/#/emails\n  // The `newPassword` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database.\n  //\n  // There are three ways that this script can finish:\n  // 1. The user's password was updated successfully:\n  //     callback(null, true);\n  // 2. The user's password was not updated:\n  //     callback(null, false);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the confirmation link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg = 'Please implement the Change Password script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n"
                        },
                        "disable_signup": false,
                        "passwordPolicy": "good",
                        "passkey_options": {
                            "challenge_ui": "both",
                            "local_enrollment_enabled": true,
                            "progressive_enrollment_enabled": true
                        },
                        "password_history": {
                            "size": 5,
                            "enable": false
                        },
                        "strategy_version": 2,
                        "requires_username": true,
                        "password_dictionary": {
                            "enable": false,
                            "dictionary": []
                        },
                        "authentication_methods": {
                            "passkey": {
                                "enabled": false
                            },
                            "password": {
                                "enabled": true
                            }
                        },
                        "brute_force_protection": true,
                        "password_no_personal_info": {
                            "enable": false
                        },
                        "password_complexity_options": {
                            "min_length": 8
                        },
                        "enabledDatabaseCustomization": true
                    },
                    "strategy": "auth0",
                    "name": "DB-connection-Two",
                    "is_domain_connection": false,
                    "realms": [
                        "DB-connection-Two"
                    ],
                    "enabled_clients": []
                },
                {
                    "id": "con_0wl0dLTgEBQTMRrK",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "passwordPolicy": "good",
                        "passkey_options": {
                            "challenge_ui": "both",
                            "local_enrollment_enabled": true,
                            "progressive_enrollment_enabled": true
                        },
                        "strategy_version": 2,
                        "authentication_methods": {
                            "passkey": {
                                "enabled": false
                            },
                            "password": {
                                "enabled": true
                            }
                        },
                        "brute_force_protection": true
                    },
                    "strategy": "auth0",
                    "name": "Username-Password-Authentication",
                    "is_domain_connection": false,
                    "realms": [
                        "Username-Password-Authentication"
                    ],
                    "enabled_clients": [
                        "sVMh2iWlCw44yRUt88rEO5cnDA6pvm48",
                        "gdpNdEa0sdFOX1VZJ4xtycnNR1G5TlRg",
                        "AF2fEsiqxQ0uGNdrs8J26ibOnmXs3jEX",
                        "NVZw2D4EQ99E4yIPEj2hE9kZJfyPTz89",
                        "ep5F5NHBlHlfjE1ijeuHepR3HUrdYpyv",
                        "ltna78HqWdPRiEHoLy119Dfs1iRMyR1w",
                        "ixEERdhSidh32R6y7f1pzavjtho1mQoV",
                        "1v0GKWhDqqo1jgK2agXhuOarWC45wra6",
                        "u6vM7mQRWqavasw69Fye6E5mMduHlfOX",
                        "3ykmF4bLMigp4Zbsznqj9uCPqLB7e95d",
                        "4mEZRv7D0zLfbSSWbsibdwaoYIVlRP0M"
                    ]
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/connections/con_0wl0dLTgEBQTMRrK",
        "body": "",
        "status": 200,
        "response": {
            "id": "con_0wl0dLTgEBQTMRrK",
            "options": {
                "mfa": {
                    "active": true,
                    "return_enroll_settings": true
                },
                "passwordPolicy": "good",
                "passkey_options": {
                    "challenge_ui": "both",
                    "local_enrollment_enabled": true,
                    "progressive_enrollment_enabled": true
                },
                "strategy_version": 2,
                "authentication_methods": {
                    "passkey": {
                        "enabled": false
                    },
                    "password": {
                        "enabled": true
                    }
                },
                "brute_force_protection": true
            },
            "strategy": "auth0",
            "name": "Username-Password-Authentication",
            "is_domain_connection": false,
            "enabled_clients": [
                "sVMh2iWlCw44yRUt88rEO5cnDA6pvm48",
                "gdpNdEa0sdFOX1VZJ4xtycnNR1G5TlRg",
                "AF2fEsiqxQ0uGNdrs8J26ibOnmXs3jEX",
                "NVZw2D4EQ99E4yIPEj2hE9kZJfyPTz89",
                "ep5F5NHBlHlfjE1ijeuHepR3HUrdYpyv",
                "ltna78HqWdPRiEHoLy119Dfs1iRMyR1w",
                "ixEERdhSidh32R6y7f1pzavjtho1mQoV",
                "1v0GKWhDqqo1jgK2agXhuOarWC45wra6",
                "u6vM7mQRWqavasw69Fye6E5mMduHlfOX",
                "3ykmF4bLMigp4Zbsznqj9uCPqLB7e95d",
                "4mEZRv7D0zLfbSSWbsibdwaoYIVlRP0M"
            ],
            "realms": [
                "Username-Password-Authentication"
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/connections/con_0wl0dLTgEBQTMRrK",
        "body": {
            "enabled_clients": [
                "AF2fEsiqxQ0uGNdrs8J26ibOnmXs3jEX",
                "sVMh2iWlCw44yRUt88rEO5cnDA6pvm48"
            ],
            "is_domain_connection": false,
            "options": {
                "mfa": {
                    "active": true,
                    "return_enroll_settings": true
                },
                "passwordPolicy": "good",
                "passkey_options": {
                    "challenge_ui": "both",
                    "local_enrollment_enabled": true,
                    "progressive_enrollment_enabled": true
                },
                "strategy_version": 2,
                "authentication_methods": {
                    "passkey": {
                        "enabled": false
                    },
                    "password": {
                        "enabled": true
                    }
                },
                "brute_force_protection": true
            },
            "realms": [
                "Username-Password-Authentication"
            ]
        },
        "status": 200,
        "response": {
            "id": "con_0wl0dLTgEBQTMRrK",
            "options": {
                "mfa": {
                    "active": true,
                    "return_enroll_settings": true
                },
                "passwordPolicy": "good",
                "passkey_options": {
                    "challenge_ui": "both",
                    "local_enrollment_enabled": true,
                    "progressive_enrollment_enabled": true
                },
                "strategy_version": 2,
                "authentication_methods": {
                    "passkey": {
                        "enabled": false
                    },
                    "password": {
                        "enabled": true
                    }
                },
                "brute_force_protection": true
            },
            "strategy": "auth0",
            "name": "Username-Password-Authentication",
            "is_domain_connection": false,
            "enabled_clients": [
                "AF2fEsiqxQ0uGNdrs8J26ibOnmXs3jEX",
                "sVMh2iWlCw44yRUt88rEO5cnDA6pvm48"
            ],
            "realms": [
                "Username-Password-Authentication"
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/clients?page=0&per_page=100&include_totals=true",
        "body": "",
        "status": 200,
        "response": {
            "total": 17,
            "start": 0,
            "limit": 100,
            "clients": [
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "DeployCLI-Dev",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "custom_login_page_preview": "<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <title>Sign In with Auth0</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\" />\n</head>\n<body>\n\n  <!--[if IE 8]>\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/ie8/0.2.5/ie8.js\"></script>\n  <![endif]-->\n\n  <!--[if lte IE 9]>\n  <script src=\"https://cdn.auth0.com/js/base64.js\"></script>\n  <script src=\"https://cdn.auth0.com/js/es5-shim.min.js\"></script>\n  <![endif]-->\n\n  <script src=\"https://cdn.auth0.com/js/lock/12.5/lock.min.js\"></script>\n  <script>\n    // Decode utf8 characters properly\n    var config = JSON.parse(decodeURIComponent(escape(window.atob('@@config@@'))));\n    config.extraParams = config.extraParams || {};\n    var connection = config.connection;\n    var prompt = config.prompt;\n    var languageDictionary;\n    var language;\n\n    if (config.dict && config.dict.signin && config.dict.signin.title) {\n      languageDictionary = { title: config.dict.signin.title };\n    } else if (typeof config.dict === 'string') {\n      language = config.dict;\n    }\n    var loginHint = config.extraParams.login_hint;\n    var colors = config.colors || {};\n\n    // Available Lock configuration options: https://auth0.com/docs/libraries/lock/lock-configuration\n    var lock = new Auth0Lock(config.clientID, config.auth0Domain, {\n      auth: {\n        redirectUrl: config.callbackURL,\n        responseType: (config.internalOptions || {}).response_type ||\n          (config.callbackOnLocationHash ? 'token' : 'code'),\n        params: config.internalOptions\n      },\n      configurationBaseUrl: config.clientConfigurationBaseUrl,\n      overrides: {\n        __tenant: config.auth0Tenant,\n        __token_issuer: config.authorizationServer.issuer\n      },\n      assetsUrl:  config.assetsUrl,\n      allowedConnections: connection ? [connection] : null,\n      rememberLastLogin: !prompt,\n      language: language,\n      languageBaseUrl: config.languageBaseUrl,\n      languageDictionary: languageDictionary,\n      theme: {\n        //logo:            'YOUR LOGO HERE',\n        primaryColor:    colors.primary ? colors.primary : 'green'\n      },\n      prefill: loginHint ? { email: loginHint, username: loginHint } : null,\n      closable: false,\n      defaultADUsernameFromEmailPrefix: false\n    });\n\n    if(colors.page_background) {\n      var css = '.auth0-lock.auth0-lock .auth0-lock-overlay { background: ' +\n                  colors.page_background +\n                ' }';\n      var style = document.createElement('style');\n\n      style.appendChild(document.createTextNode(css));\n\n      document.body.appendChild(style);\n    }\n\n    lock.show();\n  </script>\n</body>\n</html>  ",
                    "cross_origin_authentication": true,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "Ku5wNRXVrQbnITFA9yCr9b9SlCukFN8L",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "API Explorer Application",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "custom_login_page_preview": "<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <title>Sign In with Auth0</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\" />\n</head>\n<body>\n\n  <!--[if IE 8]>\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/ie8/0.2.5/ie8.js\"></script>\n  <![endif]-->\n\n  <!--[if lte IE 9]>\n  <script src=\"https://cdn.auth0.com/js/base64.js\"></script>\n  <script src=\"https://cdn.auth0.com/js/es5-shim.min.js\"></script>\n  <![endif]-->\n\n  <script src=\"https://cdn.auth0.com/js/lock/12.5/lock.min.js\"></script>\n  <script>\n    // Decode utf8 characters properly\n    var config = JSON.parse(decodeURIComponent(escape(window.atob('@@config@@'))));\n    config.extraParams = config.extraParams || {};\n    var connection = config.connection;\n    var prompt = config.prompt;\n    var languageDictionary;\n    var language;\n\n    if (config.dict && config.dict.signin && config.dict.signin.title) {\n      languageDictionary = { title: config.dict.signin.title };\n    } else if (typeof config.dict === 'string') {\n      language = config.dict;\n    }\n    var loginHint = config.extraParams.login_hint;\n    var colors = config.colors || {};\n\n    // Available Lock configuration options: https://auth0.com/docs/libraries/lock/lock-configuration\n    var lock = new Auth0Lock(config.clientID, config.auth0Domain, {\n      auth: {\n        redirectUrl: config.callbackURL,\n        responseType: (config.internalOptions || {}).response_type ||\n          (config.callbackOnLocationHash ? 'token' : 'code'),\n        params: config.internalOptions\n      },\n      configurationBaseUrl: config.clientConfigurationBaseUrl,\n      overrides: {\n        __tenant: config.auth0Tenant,\n        __token_issuer: config.authorizationServer.issuer\n      },\n      assetsUrl:  config.assetsUrl,\n      allowedConnections: connection ? [connection] : null,\n      rememberLastLogin: !prompt,\n      language: language,\n      languageBaseUrl: config.languageBaseUrl,\n      languageDictionary: languageDictionary,\n      theme: {\n        //logo:            'YOUR LOGO HERE',\n        primaryColor:    colors.primary ? colors.primary : 'green'\n      },\n      prefill: loginHint ? { email: loginHint, username: loginHint } : null,\n      closable: false,\n      defaultADUsernameFromEmailPrefix: false\n    });\n\n    if(colors.page_background) {\n      var css = '.auth0-lock.auth0-lock .auth0-lock-overlay { background: ' +\n                  colors.page_background +\n                ' }';\n      var style = document.createElement('style');\n\n      style.appendChild(document.createTextNode(css));\n\n      document.body.appendChild(style);\n    }\n\n    lock.show();\n  </script>\n</body>\n</html>  ",
                    "cross_origin_authentication": true,
                    "allowed_clients": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "tSJqoA0wpptageIV7f1D2bq3WgSgaPob",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Org test App",
                    "callbacks": [
                        "http://localhost:3000"
                    ],
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "cross_origin_authentication": true,
                    "allowed_clients": [],
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "organization_require_behavior": "post_login_prompt",
                    "organization_usage": "allow",
                    "allowed_logout_urls": [
                        "http://localhost:3000"
                    ],
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "NVZw2D4EQ99E4yIPEj2hE9kZJfyPTz89",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "spa",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token"
                    ],
                    "web_origins": [
                        "http://localhost:3000"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Go test app kushal",
                    "allowed_clients": [],
                    "allowed_logout_urls": [
                        "http://localhost:4002/",
                        "localhost:4002/logout"
                    ],
                    "callbacks": [
                        "http://localhost:4002/",
                        "http://localhost:4002/callback"
                    ],
                    "cross_origin_auth": false,
                    "cross_origin_authentication": true,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "organization_require_behavior": "no_prompt",
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "PxFLsPRVvz3wQrRQNI1dgQCESIDjiv8e",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "regular_web",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Role test API (Test Application)",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "cross_origin_authentication": true,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "nz0xcpycpcsyEzZ9gBlQkJ47e6GPeXQB",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "DeployCLI-E2E",
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "cross_origin_authentication": true,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "36TEM2e0l4GPf0LM8aH1lcJEZBp2DzvY",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Default App",
                    "callbacks": [],
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "cross_origin_authentication": true,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "AF2fEsiqxQ0uGNdrs8J26ibOnmXs3jEX",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Deploy CLI",
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "cross_origin_authentication": true,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "sVMh2iWlCw44yRUt88rEO5cnDA6pvm48",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Auth0-CLI",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "cross_origin_authentication": true,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "gdpNdEa0sdFOX1VZJ4xtycnNR1G5TlRg",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Dev_DAY_APP",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "allowed_clients": [],
                    "allowed_logout_urls": [
                        "http://localhost:3000"
                    ],
                    "callbacks": [
                        "http://localhost:3000/api/auth/callback",
                        "http://localhost:3000"
                    ],
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "ep5F5NHBlHlfjE1ijeuHepR3HUrdYpyv",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "regular_web",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "web_origins": [
                        "http://localhost:3000"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Node App",
                    "allowed_clients": [],
                    "allowed_logout_urls": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "allowed_origins": [],
                    "client_id": "ltna78HqWdPRiEHoLy119Dfs1iRMyR1w",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "regular_web",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "web_origins": [],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Terraform Provider",
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "3ykmF4bLMigp4Zbsznqj9uCPqLB7e95d",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Quickstarts API (Test Application)",
                    "client_metadata": {
                        "foo": "bar"
                    },
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "ixEERdhSidh32R6y7f1pzavjtho1mQoV",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "The Default App",
                    "allowed_clients": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "sso": false,
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "1v0GKWhDqqo1jgK2agXhuOarWC45wra6",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "auth0-deploy-cli-extension",
                    "allowed_clients": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "4mEZRv7D0zLfbSSWbsibdwaoYIVlRP0M",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Test SPA",
                    "allowed_clients": [],
                    "allowed_logout_urls": [
                        "http://localhost:3000"
                    ],
                    "callbacks": [
                        "http://localhost:3000"
                    ],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "expiring",
                        "leeway": 0,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "infinite_token_lifetime": false,
                        "infinite_idle_token_lifetime": false,
                        "rotation_type": "rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "u6vM7mQRWqavasw69Fye6E5mMduHlfOX",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "none",
                    "app_type": "spa",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token"
                    ],
                    "web_origins": [
                        "http://localhost:3000"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": true,
                    "callbacks": [],
                    "is_first_party": true,
                    "name": "All Applications",
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "owners": [
                        "mr|google-oauth2|109614534713742077035"
                    ],
                    "custom_login_page": "<html>TEST123</html>\n",
                    "cross_origin_authentication": true,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "2Mlaa9rTwG8PJkTuRLXoeNOy8MibpSPn",
                    "client_secret": "[REDACTED]",
                    "custom_login_page_on": true
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/connections?per_page=100&page=0&include_totals=true",
        "body": "",
        "status": 200,
        "response": {
            "total": 5,
            "start": 0,
            "limit": 100,
            "connections": [
                {
                    "id": "con_1phMfGakxwdqWmih",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "import_mode": false,
                        "customScripts": {
                            "login": "function login(email, password, callback) {\n  // This script should authenticate a user against the credentials stored in\n  // your database.\n  // It is executed when a user attempts to log in or immediately after signing\n  // up (as a verification that the user was successfully signed up).\n  //\n  // Everything returned by this script will be set as part of the user profile\n  // and will be visible by any of the tenant admins. Avoid adding attributes\n  // with values such as passwords, keys, secrets, etc.\n  //\n  // The `password` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database. For example:\n  //\n  //     var bcrypt = require('bcrypt@0.8.5');\n  //     bcrypt.compare(password, dbPasswordHash, function(err, res)) { ... }\n  //\n  // There are three ways this script can finish:\n  // 1. The user's credentials are valid. The returned user profile should be in\n  // the following format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema\n  //     var profile = {\n  //       user_id: ..., // user_id is mandatory\n  //       email: ...,\n  //       [...]\n  //     };\n  //     callback(null, profile);\n  // 2. The user's credentials are invalid\n  //     callback(new WrongUsernameOrPasswordError(email, \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n  //\n  // A list of Node.js modules which can be referenced is available here:\n  //\n  //    https://tehsis.github.io/webtaskio-canirequire/\n  console.log('AYYYYYE');\n\n  const msg =\n    'Please implement the Login script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "create": "function create(user, callback) {\n  // This script should create a user entry in your existing database. It will\n  // be executed when a user attempts to sign up, or when a user is created\n  // through the Auth0 dashboard or API.\n  // When this script has finished executing, the Login script will be\n  // executed immediately afterwards, to verify that the user was created\n  // successfully.\n  //\n  // The user object will always contain the following properties:\n  // * email: the user's email\n  // * password: the password entered by the user, in plain text\n  // * tenant: the name of this Auth0 account\n  // * client_id: the client ID of the application where the user signed up, or\n  //              API key if created through the API or Auth0 dashboard\n  // * connection: the name of this database connection\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully created\n  //     callback(null);\n  // 2. This user already exists in your database\n  //     callback(new ValidationError(\"user_exists\", \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Create script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "delete": "function remove(id, callback) {\n  // This script remove a user from your existing database.\n  // It is executed whenever a user is deleted from the API or Auth0 dashboard.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user was removed successfully:\n  //     callback(null);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Delete script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "verify": "function verify(email, callback) {\n  // This script should mark the current user's email address as verified in\n  // your database.\n  // It is executed whenever a user clicks the verification link sent by email.\n  // These emails can be customized at https://manage.auth0.com/#/emails.\n  // It is safe to assume that the user's email already exists in your database,\n  // because verification emails, if enabled, are sent immediately after a\n  // successful signup.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user's email was verified successfully\n  //     callback(null, true);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the verification link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Verify script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "get_user": "function getByEmail(email, callback) {\n  // This script should retrieve a user profile from your existing database,\n  // without authenticating the user.\n  // It is used to check if a user exists before executing flows that do not\n  // require authentication (signup and password reset).\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully found. The profile should be in the following\n  // format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema.\n  //     callback(null, profile);\n  // 2. A user was not found\n  //     callback(null);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Get User script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "change_password": "function changePassword(email, newPassword, callback) {\n  // This script should change the password stored for the current user in your\n  // database. It is executed when the user clicks on the confirmation link\n  // after a reset password request.\n  // The content and behavior of password confirmation emails can be customized\n  // here: https://manage.auth0.com/#/emails\n  // The `newPassword` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database.\n  //\n  // There are three ways that this script can finish:\n  // 1. The user's password was updated successfully:\n  //     callback(null, true);\n  // 2. The user's password was not updated:\n  //     callback(null, false);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the confirmation link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Change Password script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n"
                        },
                        "disable_signup": false,
                        "passwordPolicy": "low",
                        "passkey_options": {
                            "challenge_ui": "both",
                            "local_enrollment_enabled": true,
                            "progressive_enrollment_enabled": true
                        },
                        "password_history": {
                            "size": 5,
                            "enable": false
                        },
                        "strategy_version": 2,
                        "requires_username": true,
                        "password_dictionary": {
                            "enable": true,
                            "dictionary": []
                        },
                        "authentication_methods": {
                            "passkey": {
                                "enabled": false
                            },
                            "password": {
                                "enabled": true
                            }
                        },
                        "brute_force_protection": true,
                        "password_no_personal_info": {
                            "enable": true
                        },
                        "password_complexity_options": {
                            "min_length": 8
                        },
                        "enabledDatabaseCustomization": true
                    },
                    "strategy": "auth0",
                    "name": "boo-baz-db-connection-test",
                    "is_domain_connection": false,
                    "realms": [
                        "boo-baz-db-connection-test"
                    ],
                    "enabled_clients": [
                        "4mEZRv7D0zLfbSSWbsibdwaoYIVlRP0M",
                        "ltna78HqWdPRiEHoLy119Dfs1iRMyR1w"
                    ]
                },
                {
                    "id": "con_hvEjcU2lcs9383To",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "import_mode": false,
                        "configuration": {},
                        "customScripts": {
                            "login": "function login(email, password, callback) {\n  // This script should authenticate a user against the credentials stored in\n  // your database.\n  // It is executed when a user attempts to log in or immediately after signing\n  // up (as a verification that the user was successfully signed up).\n  //\n  // Everything returned by this script will be set as part of the user profile\n  // and will be visible by any of the tenant admins. Avoid adding attributes\n  // with values such as passwords, keys, secrets, etc.\n  //\n  // The `password` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database. For example:\n  //\n  //     var bcrypt = require('bcrypt@0.8.5');\n  //     bcrypt.compare(password, dbPasswordHash, function(err, res)) { ... }\n  //\n  // There are three ways this script can finish:\n  // 1. The user's credentials are valid. The returned user profile should be in\n  // the following format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema\n  //     var profile = {\n  //       user_id: ..., // user_id is mandatory\n  //       email: ...,\n  //       [...]\n  //     };\n  //     callback(null, profile);\n  // 2. The user's credentials are invalid\n  //     callback(new WrongUsernameOrPasswordError(email, \"my error message\"));\n  //\n  //    Note: Passing no arguments or a falsey first argument to\n  //    `WrongUsernameOrPasswordError` will result in the error being logged as\n  //    an `fu` event (invalid username/email) with an empty string for a user_id.\n  //    Providing a truthy first argument will result in the error being logged\n  //    as an `fp` event (the user exists, but the password is invalid) with a\n  //    user_id value of \"auth0|<first argument>\". See the `Log Event Type Codes`\n  //    documentation for more information about these event types:\n  //    https://auth0.com/docs/deploy-monitor/logs/log-event-type-codes\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n  //\n  // A list of Node.js modules which can be referenced is available here:\n  //\n  //    https://tehsis.github.io/webtaskio-canirequire/\n\n  const msg = 'Please implement the Login script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database/';\n\n  const testURL = \"https://kushal-dev.eu.auth0.com/api\";\n  console.log(\"testURL: \", testURL);\n\n  return callback(new Error(msg));\n}\n",
                            "create": "function create(user, callback) {\n  // This script should create a user entry in your existing database. It will\n  // be executed when a user attempts to sign up, or when a user is created\n  // through the Auth0 dashboard or API.\n  // When this script has finished executing, the Login script will be\n  // executed immediately afterwards, to verify that the user was created\n  // successfully.\n  //\n  // The user object will always contain the following properties:\n  // * email: the user's email\n  // * password: the password entered by the user, in plain text\n  // * tenant: the name of this Auth0 account\n  // * client_id: the client ID of the application where the user signed up, or\n  //              API key if created through the API or Auth0 dashboard\n  // * connection: the name of this database connection\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully created\n  //     callback(null);\n  // 2. This user already exists in your database\n  //     callback(new ValidationError(\"user_exists\", \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n\n  const msg = 'Please implement the Create script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "delete": "function remove(id, callback) {\n  // This script remove a user from your existing database.\n  // It is executed whenever a user is deleted from the API or Auth0 dashboard.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user was removed successfully:\n  //     callback(null);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg = 'Please implement the Delete script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "verify": "function verify(email, callback) {\n  // This script should mark the current user's email address as verified in\n  // your database.\n  // It is executed whenever a user clicks the verification link sent by email.\n  // These emails can be customized at https://manage.auth0.com/#/emails.\n  // It is safe to assume that the user's email already exists in your database,\n  // because verification emails, if enabled, are sent immediately after a\n  // successful signup.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user's email was verified successfully\n  //     callback(null, true);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the verification link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg = 'Please implement the Verify script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "get_user": "function getByEmail(email, callback) {\n  // This script should retrieve a user profile from your existing database,\n  // without authenticating the user.\n  // It is used to check if a user exists before executing flows that do not\n  // require authentication (signup and password reset).\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully found. The profile should be in the following\n  // format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema.\n  //     callback(null, profile);\n  // 2. A user was not found\n  //     callback(null);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg = 'Please implement the Get User script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "change_password": "function changePassword(email, newPassword, callback) {\n  // This script should change the password stored for the current user in your\n  // database. It is executed when the user clicks on the confirmation link\n  // after a reset password request.\n  // The content and behavior of password confirmation emails can be customized\n  // here: https://manage.auth0.com/#/emails\n  // The `newPassword` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database.\n  //\n  // There are three ways that this script can finish:\n  // 1. The user's password was updated successfully:\n  //     callback(null, true);\n  // 2. The user's password was not updated:\n  //     callback(null, false);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the confirmation link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg = 'Please implement the Change Password script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n"
                        },
                        "disable_signup": false,
                        "passwordPolicy": "good",
                        "passkey_options": {
                            "challenge_ui": "both",
                            "local_enrollment_enabled": true,
                            "progressive_enrollment_enabled": true
                        },
                        "password_history": {
                            "size": 5,
                            "enable": false
                        },
                        "strategy_version": 2,
                        "requires_username": true,
                        "password_dictionary": {
                            "enable": false,
                            "dictionary": []
                        },
                        "authentication_methods": {
                            "passkey": {
                                "enabled": false
                            },
                            "password": {
                                "enabled": true
                            }
                        },
                        "brute_force_protection": true,
                        "password_no_personal_info": {
                            "enable": false
                        },
                        "password_complexity_options": {
                            "min_length": 8
                        },
                        "enabledDatabaseCustomization": true
                    },
                    "strategy": "auth0",
                    "name": "DB-connection-Two",
                    "is_domain_connection": false,
                    "realms": [
                        "DB-connection-Two"
                    ],
                    "enabled_clients": []
                },
                {
                    "id": "con_mqMWaGAUUOvPX3Ej",
                    "options": {
                        "email": true,
                        "scope": [
                            "email",
                            "profile"
                        ],
                        "profile": true
                    },
                    "strategy": "google-oauth2",
                    "name": "google-oauth2",
                    "is_domain_connection": false,
                    "realms": [
                        "google-oauth2"
                    ],
                    "enabled_clients": [
                        "1v0GKWhDqqo1jgK2agXhuOarWC45wra6",
                        "4mEZRv7D0zLfbSSWbsibdwaoYIVlRP0M"
                    ]
                },
                {
                    "id": "con_iYlZ1DESGzYFLzgc",
                    "options": {
                        "type": "back_channel",
                        "scope": "openid profile email",
                        "domain": "domain.okta.com",
                        "issuer": "https://domain.okta.com",
                        "jwks_uri": "https://domain.okta.com/oauth2/v1/keys",
                        "client_id": "qwqwqwqw",
                        "attribute_map": {
                            "mapping_mode": "basic_profile"
                        },
                        "client_secret": "[REDACTED]",
                        "oidc_metadata": {
                            "issuer": "https://domain.okta.com",
                            "jwks_uri": "https://domain.okta.com/oauth2/v1/keys",
                            "token_endpoint": "https://domain.okta.com/oauth2/v1/token",
                            "claims_supported": [
                                "iss",
                                "ver",
                                "sub",
                                "aud",
                                "iat",
                                "exp",
                                "jti",
                                "auth_time",
                                "amr",
                                "idp",
                                "nonce",
                                "name",
                                "nickname",
                                "preferred_username",
                                "given_name",
                                "middle_name",
                                "family_name",
                                "email",
                                "email_verified",
                                "profile",
                                "zoneinfo",
                                "locale",
                                "address",
                                "phone_number",
                                "picture",
                                "website",
                                "gender",
                                "birthdate",
                                "updated_at",
                                "at_hash",
                                "c_hash"
                            ],
                            "scopes_supported": [
                                "openid",
                                "email",
                                "profile",
                                "address",
                                "phone",
                                "offline_access",
                                "groups"
                            ],
                            "userinfo_endpoint": "https://domain.okta.com/oauth2/v1/userinfo",
                            "revocation_endpoint": "https://domain.okta.com/oauth2/v1/revoke",
                            "end_session_endpoint": "https://domain.okta.com/oauth2/v1/logout",
                            "grant_types_supported": [
                                "authorization_code",
                                "implicit",
                                "refresh_token",
                                "password",
                                "urn:ietf:params:oauth:grant-type:device_code"
                            ],
                            "registration_endpoint": "https://domain.okta.com/oauth2/v1/clients",
                            "authorization_endpoint": "https://domain.okta.com/oauth2/v1/authorize",
                            "introspection_endpoint": "https://domain.okta.com/oauth2/v1/introspect",
                            "subject_types_supported": [
                                "public"
                            ],
                            "response_modes_supported": [
                                "query",
                                "fragment",
                                "form_post",
                                "okta_post_message"
                            ],
                            "response_types_supported": [
                                "code",
                                "id_token",
                                "code id_token",
                                "code token",
                                "id_token token",
                                "code id_token token"
                            ],
                            "claims_parameter_supported": false,
                            "request_parameter_supported": true,
                            "device_authorization_endpoint": "https://domain.okta.com/oauth2/v1/device/authorize",
                            "request_uri_parameter_supported": false,
                            "code_challenge_methods_supported": [
                                "S256"
                            ],
                            "require_request_uri_registration": false,
                            "dpop_signing_alg_values_supported": [
                                "RS256",
                                "RS384",
                                "RS512",
                                "ES256",
                                "ES384",
                                "ES512"
                            ],
                            "id_token_signing_alg_values_supported": [
                                "RS256"
                            ],
                            "token_endpoint_auth_methods_supported": [
                                "client_secret_basic",
                                "client_secret_post",
                                "client_secret_jwt",
                                "private_key_jwt",
                                "none"
                            ],
                            "revocation_endpoint_auth_methods_supported": [
                                "client_secret_basic",
                                "client_secret_post",
                                "client_secret_jwt",
                                "private_key_jwt",
                                "none"
                            ],
                            "request_object_signing_alg_values_supported": [
                                "HS256",
                                "HS384",
                                "HS512",
                                "RS256",
                                "RS384",
                                "RS512",
                                "ES256",
                                "ES384",
                                "ES512"
                            ],
                            "introspection_endpoint_auth_methods_supported": [
                                "client_secret_basic",
                                "client_secret_post",
                                "client_secret_jwt",
                                "private_key_jwt",
                                "none"
                            ]
                        },
                        "schema_version": "oidc-V4",
                        "token_endpoint": "https://domain.okta.com/oauth2/v1/token",
                        "userinfo_endpoint": "https://domain.okta.com/oauth2/v1/userinfo",
                        "connection_settings": {
                            "pkce": "auto"
                        },
                        "authorization_endpoint": "https://domain.okta.com/oauth2/v1/authorize"
                    },
                    "strategy": "okta",
                    "name": "test-scim-con",
                    "is_domain_connection": false,
                    "show_as_button": false,
                    "display_name": "test-scim-con",
                    "realms": [
                        "test-scim-con"
                    ],
                    "enabled_clients": []
                },
                {
                    "id": "con_0wl0dLTgEBQTMRrK",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "passwordPolicy": "good",
                        "passkey_options": {
                            "challenge_ui": "both",
                            "local_enrollment_enabled": true,
                            "progressive_enrollment_enabled": true
                        },
                        "strategy_version": 2,
                        "authentication_methods": {
                            "passkey": {
                                "enabled": false
                            },
                            "password": {
                                "enabled": true
                            }
                        },
                        "brute_force_protection": true
                    },
                    "strategy": "auth0",
                    "name": "Username-Password-Authentication",
                    "is_domain_connection": false,
                    "realms": [
                        "Username-Password-Authentication"
                    ],
                    "enabled_clients": [
                        "sVMh2iWlCw44yRUt88rEO5cnDA6pvm48",
                        "AF2fEsiqxQ0uGNdrs8J26ibOnmXs3jEX"
                    ]
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/connections/con_iYlZ1DESGzYFLzgc/scim-configuration",
        "body": "",
        "status": 200,
        "response": {
            "tenant_name": "kushal-dev",
            "connection_id": "con_iYlZ1DESGzYFLzgc",
            "connection_name": "test-scim-con",
            "strategy": "okta",
            "mapping": [
                {
                    "scim": "user_Name",
                    "auth0": "preferred_username"
                },
                {
                    "scim": "emails[primary eq true].value",
                    "auth0": "email"
                },
                {
                    "scim": "externalId",
                    "auth0": "app_metadata.external_id"
                },
                {
                    "scim": "active",
                    "auth0": "blocked"
                },
                {
                    "scim": "displayName",
                    "auth0": "name"
                },
                {
                    "scim": "name.givenName",
                    "auth0": "given_name"
                },
                {
                    "scim": "name.familyName",
                    "auth0": "family_name"
                },
                {
                    "scim": "name.middleName",
                    "auth0": "app_metadata.middle_name"
                },
                {
                    "scim": "name.honorificPrefix",
                    "auth0": "app_metadata.honorific_prefix"
                },
                {
                    "scim": "name.honorificSuffix",
                    "auth0": "app_metadata.honorific_suffix"
                },
                {
                    "scim": "nickName",
                    "auth0": "nickname"
                },
                {
                    "scim": "photos[type eq \"photo\"].value",
                    "auth0": "picture"
                },
                {
                    "scim": "phoneNumbers[primary eq true].value",
                    "auth0": "app_metadata.primary_phone_number"
                },
                {
                    "scim": "phoneNumbers[type eq \"mobile\"].value",
                    "auth0": "app_metadata.mobile_phone_number"
                },
                {
                    "scim": "addresses[type eq \"work\"].streetAddress",
                    "auth0": "app_metadata.street_address"
                },
                {
                    "scim": "addresses[type eq \"work\"].locality",
                    "auth0": "app_metadata.city"
                },
                {
                    "scim": "addresses[type eq \"work\"].region",
                    "auth0": "app_metadata.state"
                },
                {
                    "scim": "addresses[type eq \"work\"].postalCode",
                    "auth0": "app_metadata.postal_code"
                },
                {
                    "scim": "addresses[type eq \"work\"].formatted",
                    "auth0": "app_metadata.postal_address"
                },
                {
                    "scim": "addresses[type eq \"work\"].country",
                    "auth0": "app_metadata.country"
                },
                {
                    "scim": "profileUrl",
                    "auth0": "app_metadata.profile_url"
                },
                {
                    "scim": "userType",
                    "auth0": "app_metadata.user_type"
                },
                {
                    "scim": "title",
                    "auth0": "app_metadata.title"
                },
                {
                    "scim": "preferredLanguage",
                    "auth0": "app_metadata.language"
                },
                {
                    "scim": "locale",
                    "auth0": "app_metadata.locale"
                },
                {
                    "scim": "timezone",
                    "auth0": "app_metadata.timezone"
                },
                {
                    "scim": "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User.employeeNumber",
                    "auth0": "app_metadata.employee_id"
                },
                {
                    "scim": "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User.costCenter",
                    "auth0": "app_metadata.cost_center"
                },
                {
                    "scim": "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User.organization",
                    "auth0": "app_metadata.organization"
                },
                {
                    "scim": "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User.division",
                    "auth0": "app_metadata.division"
                },
                {
                    "scim": "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User.department",
                    "auth0": "app_metadata.department"
                },
                {
                    "scim": "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User.manager",
                    "auth0": "app_metadata.manager"
                }
            ],
            "updated_on": "2024-09-26T07:32:32.925Z",
            "created_at": "2024-09-24T11:32:46.187Z",
            "user_id_attribute": "externalId"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/connections?per_page=100&page=0&include_totals=true",
        "body": "",
        "status": 429,
        "response": {
            "statusCode": 429,
            "error": "Too Many Requests",
            "message": "Global limit has been reached",
            "errorCode": "too_many_requests"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/connections?per_page=100&page=0&include_totals=true",
        "body": "",
        "status": 429,
        "response": {
            "statusCode": 429,
            "error": "Too Many Requests",
            "message": "Global limit has been reached",
            "errorCode": "too_many_requests"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/connections?per_page=100&page=0&include_totals=true",
        "body": "",
        "status": 429,
        "response": {
            "statusCode": 429,
            "error": "Too Many Requests",
            "message": "Global limit has been reached",
            "errorCode": "too_many_requests"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/connections?per_page=100&page=0&include_totals=true",
        "body": "",
        "status": 429,
        "response": {
            "statusCode": 429,
            "error": "Too Many Requests",
            "message": "Global limit has been reached",
            "errorCode": "too_many_requests"
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/connections?per_page=100&page=0&include_totals=true",
        "body": "",
        "status": 200,
        "response": {
            "total": 5,
            "start": 0,
            "limit": 100,
            "connections": [
                {
                    "id": "con_1phMfGakxwdqWmih",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "import_mode": false,
                        "customScripts": {
                            "login": "function login(email, password, callback) {\n  // This script should authenticate a user against the credentials stored in\n  // your database.\n  // It is executed when a user attempts to log in or immediately after signing\n  // up (as a verification that the user was successfully signed up).\n  //\n  // Everything returned by this script will be set as part of the user profile\n  // and will be visible by any of the tenant admins. Avoid adding attributes\n  // with values such as passwords, keys, secrets, etc.\n  //\n  // The `password` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database. For example:\n  //\n  //     var bcrypt = require('bcrypt@0.8.5');\n  //     bcrypt.compare(password, dbPasswordHash, function(err, res)) { ... }\n  //\n  // There are three ways this script can finish:\n  // 1. The user's credentials are valid. The returned user profile should be in\n  // the following format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema\n  //     var profile = {\n  //       user_id: ..., // user_id is mandatory\n  //       email: ...,\n  //       [...]\n  //     };\n  //     callback(null, profile);\n  // 2. The user's credentials are invalid\n  //     callback(new WrongUsernameOrPasswordError(email, \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n  //\n  // A list of Node.js modules which can be referenced is available here:\n  //\n  //    https://tehsis.github.io/webtaskio-canirequire/\n  console.log('AYYYYYE');\n\n  const msg =\n    'Please implement the Login script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "create": "function create(user, callback) {\n  // This script should create a user entry in your existing database. It will\n  // be executed when a user attempts to sign up, or when a user is created\n  // through the Auth0 dashboard or API.\n  // When this script has finished executing, the Login script will be\n  // executed immediately afterwards, to verify that the user was created\n  // successfully.\n  //\n  // The user object will always contain the following properties:\n  // * email: the user's email\n  // * password: the password entered by the user, in plain text\n  // * tenant: the name of this Auth0 account\n  // * client_id: the client ID of the application where the user signed up, or\n  //              API key if created through the API or Auth0 dashboard\n  // * connection: the name of this database connection\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully created\n  //     callback(null);\n  // 2. This user already exists in your database\n  //     callback(new ValidationError(\"user_exists\", \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Create script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "delete": "function remove(id, callback) {\n  // This script remove a user from your existing database.\n  // It is executed whenever a user is deleted from the API or Auth0 dashboard.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user was removed successfully:\n  //     callback(null);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Delete script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "verify": "function verify(email, callback) {\n  // This script should mark the current user's email address as verified in\n  // your database.\n  // It is executed whenever a user clicks the verification link sent by email.\n  // These emails can be customized at https://manage.auth0.com/#/emails.\n  // It is safe to assume that the user's email already exists in your database,\n  // because verification emails, if enabled, are sent immediately after a\n  // successful signup.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user's email was verified successfully\n  //     callback(null, true);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the verification link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Verify script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "get_user": "function getByEmail(email, callback) {\n  // This script should retrieve a user profile from your existing database,\n  // without authenticating the user.\n  // It is used to check if a user exists before executing flows that do not\n  // require authentication (signup and password reset).\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully found. The profile should be in the following\n  // format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema.\n  //     callback(null, profile);\n  // 2. A user was not found\n  //     callback(null);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Get User script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "change_password": "function changePassword(email, newPassword, callback) {\n  // This script should change the password stored for the current user in your\n  // database. It is executed when the user clicks on the confirmation link\n  // after a reset password request.\n  // The content and behavior of password confirmation emails can be customized\n  // here: https://manage.auth0.com/#/emails\n  // The `newPassword` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database.\n  //\n  // There are three ways that this script can finish:\n  // 1. The user's password was updated successfully:\n  //     callback(null, true);\n  // 2. The user's password was not updated:\n  //     callback(null, false);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the confirmation link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Change Password script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n"
                        },
                        "disable_signup": false,
                        "passwordPolicy": "low",
                        "passkey_options": {
                            "challenge_ui": "both",
                            "local_enrollment_enabled": true,
                            "progressive_enrollment_enabled": true
                        },
                        "password_history": {
                            "size": 5,
                            "enable": false
                        },
                        "strategy_version": 2,
                        "requires_username": true,
                        "password_dictionary": {
                            "enable": true,
                            "dictionary": []
                        },
                        "authentication_methods": {
                            "passkey": {
                                "enabled": false
                            },
                            "password": {
                                "enabled": true
                            }
                        },
                        "brute_force_protection": true,
                        "password_no_personal_info": {
                            "enable": true
                        },
                        "password_complexity_options": {
                            "min_length": 8
                        },
                        "enabledDatabaseCustomization": true
                    },
                    "strategy": "auth0",
                    "name": "boo-baz-db-connection-test",
                    "is_domain_connection": false,
                    "realms": [
                        "boo-baz-db-connection-test"
                    ],
                    "enabled_clients": [
                        "4mEZRv7D0zLfbSSWbsibdwaoYIVlRP0M",
                        "ltna78HqWdPRiEHoLy119Dfs1iRMyR1w"
                    ]
                },
                {
                    "id": "con_hvEjcU2lcs9383To",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "import_mode": false,
                        "configuration": {},
                        "customScripts": {
                            "login": "function login(email, password, callback) {\n  // This script should authenticate a user against the credentials stored in\n  // your database.\n  // It is executed when a user attempts to log in or immediately after signing\n  // up (as a verification that the user was successfully signed up).\n  //\n  // Everything returned by this script will be set as part of the user profile\n  // and will be visible by any of the tenant admins. Avoid adding attributes\n  // with values such as passwords, keys, secrets, etc.\n  //\n  // The `password` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database. For example:\n  //\n  //     var bcrypt = require('bcrypt@0.8.5');\n  //     bcrypt.compare(password, dbPasswordHash, function(err, res)) { ... }\n  //\n  // There are three ways this script can finish:\n  // 1. The user's credentials are valid. The returned user profile should be in\n  // the following format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema\n  //     var profile = {\n  //       user_id: ..., // user_id is mandatory\n  //       email: ...,\n  //       [...]\n  //     };\n  //     callback(null, profile);\n  // 2. The user's credentials are invalid\n  //     callback(new WrongUsernameOrPasswordError(email, \"my error message\"));\n  //\n  //    Note: Passing no arguments or a falsey first argument to\n  //    `WrongUsernameOrPasswordError` will result in the error being logged as\n  //    an `fu` event (invalid username/email) with an empty string for a user_id.\n  //    Providing a truthy first argument will result in the error being logged\n  //    as an `fp` event (the user exists, but the password is invalid) with a\n  //    user_id value of \"auth0|<first argument>\". See the `Log Event Type Codes`\n  //    documentation for more information about these event types:\n  //    https://auth0.com/docs/deploy-monitor/logs/log-event-type-codes\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n  //\n  // A list of Node.js modules which can be referenced is available here:\n  //\n  //    https://tehsis.github.io/webtaskio-canirequire/\n\n  const msg = 'Please implement the Login script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database/';\n\n  const testURL = \"https://kushal-dev.eu.auth0.com/api\";\n  console.log(\"testURL: \", testURL);\n\n  return callback(new Error(msg));\n}\n",
                            "create": "function create(user, callback) {\n  // This script should create a user entry in your existing database. It will\n  // be executed when a user attempts to sign up, or when a user is created\n  // through the Auth0 dashboard or API.\n  // When this script has finished executing, the Login script will be\n  // executed immediately afterwards, to verify that the user was created\n  // successfully.\n  //\n  // The user object will always contain the following properties:\n  // * email: the user's email\n  // * password: the password entered by the user, in plain text\n  // * tenant: the name of this Auth0 account\n  // * client_id: the client ID of the application where the user signed up, or\n  //              API key if created through the API or Auth0 dashboard\n  // * connection: the name of this database connection\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully created\n  //     callback(null);\n  // 2. This user already exists in your database\n  //     callback(new ValidationError(\"user_exists\", \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n\n  const msg = 'Please implement the Create script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "delete": "function remove(id, callback) {\n  // This script remove a user from your existing database.\n  // It is executed whenever a user is deleted from the API or Auth0 dashboard.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user was removed successfully:\n  //     callback(null);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg = 'Please implement the Delete script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "verify": "function verify(email, callback) {\n  // This script should mark the current user's email address as verified in\n  // your database.\n  // It is executed whenever a user clicks the verification link sent by email.\n  // These emails can be customized at https://manage.auth0.com/#/emails.\n  // It is safe to assume that the user's email already exists in your database,\n  // because verification emails, if enabled, are sent immediately after a\n  // successful signup.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user's email was verified successfully\n  //     callback(null, true);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the verification link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg = 'Please implement the Verify script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "get_user": "function getByEmail(email, callback) {\n  // This script should retrieve a user profile from your existing database,\n  // without authenticating the user.\n  // It is used to check if a user exists before executing flows that do not\n  // require authentication (signup and password reset).\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully found. The profile should be in the following\n  // format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema.\n  //     callback(null, profile);\n  // 2. A user was not found\n  //     callback(null);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg = 'Please implement the Get User script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "change_password": "function changePassword(email, newPassword, callback) {\n  // This script should change the password stored for the current user in your\n  // database. It is executed when the user clicks on the confirmation link\n  // after a reset password request.\n  // The content and behavior of password confirmation emails can be customized\n  // here: https://manage.auth0.com/#/emails\n  // The `newPassword` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database.\n  //\n  // There are three ways that this script can finish:\n  // 1. The user's password was updated successfully:\n  //     callback(null, true);\n  // 2. The user's password was not updated:\n  //     callback(null, false);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the confirmation link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg = 'Please implement the Change Password script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n"
                        },
                        "disable_signup": false,
                        "passwordPolicy": "good",
                        "passkey_options": {
                            "challenge_ui": "both",
                            "local_enrollment_enabled": true,
                            "progressive_enrollment_enabled": true
                        },
                        "password_history": {
                            "size": 5,
                            "enable": false
                        },
                        "strategy_version": 2,
                        "requires_username": true,
                        "password_dictionary": {
                            "enable": false,
                            "dictionary": []
                        },
                        "authentication_methods": {
                            "passkey": {
                                "enabled": false
                            },
                            "password": {
                                "enabled": true
                            }
                        },
                        "brute_force_protection": true,
                        "password_no_personal_info": {
                            "enable": false
                        },
                        "password_complexity_options": {
                            "min_length": 8
                        },
                        "enabledDatabaseCustomization": true
                    },
                    "strategy": "auth0",
                    "name": "DB-connection-Two",
                    "is_domain_connection": false,
                    "realms": [
                        "DB-connection-Two"
                    ],
                    "enabled_clients": []
                },
                {
                    "id": "con_mqMWaGAUUOvPX3Ej",
                    "options": {
                        "email": true,
                        "scope": [
                            "email",
                            "profile"
                        ],
                        "profile": true
                    },
                    "strategy": "google-oauth2",
                    "name": "google-oauth2",
                    "is_domain_connection": false,
                    "realms": [
                        "google-oauth2"
                    ],
                    "enabled_clients": [
                        "1v0GKWhDqqo1jgK2agXhuOarWC45wra6",
                        "4mEZRv7D0zLfbSSWbsibdwaoYIVlRP0M"
                    ]
                },
                {
                    "id": "con_iYlZ1DESGzYFLzgc",
                    "options": {
                        "type": "back_channel",
                        "scope": "openid profile email",
                        "domain": "domain.okta.com",
                        "issuer": "https://domain.okta.com",
                        "jwks_uri": "https://domain.okta.com/oauth2/v1/keys",
                        "client_id": "qwqwqwqw",
                        "attribute_map": {
                            "mapping_mode": "basic_profile"
                        },
                        "client_secret": "[REDACTED]",
                        "oidc_metadata": {
                            "issuer": "https://domain.okta.com",
                            "jwks_uri": "https://domain.okta.com/oauth2/v1/keys",
                            "token_endpoint": "https://domain.okta.com/oauth2/v1/token",
                            "claims_supported": [
                                "iss",
                                "ver",
                                "sub",
                                "aud",
                                "iat",
                                "exp",
                                "jti",
                                "auth_time",
                                "amr",
                                "idp",
                                "nonce",
                                "name",
                                "nickname",
                                "preferred_username",
                                "given_name",
                                "middle_name",
                                "family_name",
                                "email",
                                "email_verified",
                                "profile",
                                "zoneinfo",
                                "locale",
                                "address",
                                "phone_number",
                                "picture",
                                "website",
                                "gender",
                                "birthdate",
                                "updated_at",
                                "at_hash",
                                "c_hash"
                            ],
                            "scopes_supported": [
                                "openid",
                                "email",
                                "profile",
                                "address",
                                "phone",
                                "offline_access",
                                "groups"
                            ],
                            "userinfo_endpoint": "https://domain.okta.com/oauth2/v1/userinfo",
                            "revocation_endpoint": "https://domain.okta.com/oauth2/v1/revoke",
                            "end_session_endpoint": "https://domain.okta.com/oauth2/v1/logout",
                            "grant_types_supported": [
                                "authorization_code",
                                "implicit",
                                "refresh_token",
                                "password",
                                "urn:ietf:params:oauth:grant-type:device_code"
                            ],
                            "registration_endpoint": "https://domain.okta.com/oauth2/v1/clients",
                            "authorization_endpoint": "https://domain.okta.com/oauth2/v1/authorize",
                            "introspection_endpoint": "https://domain.okta.com/oauth2/v1/introspect",
                            "subject_types_supported": [
                                "public"
                            ],
                            "response_modes_supported": [
                                "query",
                                "fragment",
                                "form_post",
                                "okta_post_message"
                            ],
                            "response_types_supported": [
                                "code",
                                "id_token",
                                "code id_token",
                                "code token",
                                "id_token token",
                                "code id_token token"
                            ],
                            "claims_parameter_supported": false,
                            "request_parameter_supported": true,
                            "device_authorization_endpoint": "https://domain.okta.com/oauth2/v1/device/authorize",
                            "request_uri_parameter_supported": false,
                            "code_challenge_methods_supported": [
                                "S256"
                            ],
                            "require_request_uri_registration": false,
                            "dpop_signing_alg_values_supported": [
                                "RS256",
                                "RS384",
                                "RS512",
                                "ES256",
                                "ES384",
                                "ES512"
                            ],
                            "id_token_signing_alg_values_supported": [
                                "RS256"
                            ],
                            "token_endpoint_auth_methods_supported": [
                                "client_secret_basic",
                                "client_secret_post",
                                "client_secret_jwt",
                                "private_key_jwt",
                                "none"
                            ],
                            "revocation_endpoint_auth_methods_supported": [
                                "client_secret_basic",
                                "client_secret_post",
                                "client_secret_jwt",
                                "private_key_jwt",
                                "none"
                            ],
                            "request_object_signing_alg_values_supported": [
                                "HS256",
                                "HS384",
                                "HS512",
                                "RS256",
                                "RS384",
                                "RS512",
                                "ES256",
                                "ES384",
                                "ES512"
                            ],
                            "introspection_endpoint_auth_methods_supported": [
                                "client_secret_basic",
                                "client_secret_post",
                                "client_secret_jwt",
                                "private_key_jwt",
                                "none"
                            ]
                        },
                        "schema_version": "oidc-V4",
                        "token_endpoint": "https://domain.okta.com/oauth2/v1/token",
                        "userinfo_endpoint": "https://domain.okta.com/oauth2/v1/userinfo",
                        "connection_settings": {
                            "pkce": "auto"
                        },
                        "authorization_endpoint": "https://domain.okta.com/oauth2/v1/authorize"
                    },
                    "strategy": "okta",
                    "name": "test-scim-con",
                    "is_domain_connection": false,
                    "show_as_button": false,
                    "display_name": "test-scim-con",
                    "realms": [
                        "test-scim-con"
                    ],
                    "enabled_clients": []
                },
                {
                    "id": "con_0wl0dLTgEBQTMRrK",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "passwordPolicy": "good",
                        "passkey_options": {
                            "challenge_ui": "both",
                            "local_enrollment_enabled": true,
                            "progressive_enrollment_enabled": true
                        },
                        "strategy_version": 2,
                        "authentication_methods": {
                            "passkey": {
                                "enabled": false
                            },
                            "password": {
                                "enabled": true
                            }
                        },
                        "brute_force_protection": true
                    },
                    "strategy": "auth0",
                    "name": "Username-Password-Authentication",
                    "is_domain_connection": false,
                    "realms": [
                        "Username-Password-Authentication"
                    ],
                    "enabled_clients": [
                        "sVMh2iWlCw44yRUt88rEO5cnDA6pvm48",
                        "AF2fEsiqxQ0uGNdrs8J26ibOnmXs3jEX"
                    ]
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/connections/con_mqMWaGAUUOvPX3Ej",
        "body": {
            "enabled_clients": [
                "AF2fEsiqxQ0uGNdrs8J26ibOnmXs3jEX",
                "sVMh2iWlCw44yRUt88rEO5cnDA6pvm48"
            ],
            "is_domain_connection": false,
            "options": {
                "email": true,
                "scope": [
                    "email",
                    "profile"
                ],
                "profile": true
            }
        },
        "status": 200,
        "response": {
            "id": "con_mqMWaGAUUOvPX3Ej",
            "options": {
                "email": true,
                "scope": [
                    "email",
                    "profile"
                ],
                "profile": true
            },
            "strategy": "google-oauth2",
            "name": "google-oauth2",
            "is_domain_connection": false,
            "enabled_clients": [
                "AF2fEsiqxQ0uGNdrs8J26ibOnmXs3jEX",
                "sVMh2iWlCw44yRUt88rEO5cnDA6pvm48"
            ],
            "realms": [
                "google-oauth2"
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/clients?page=0&per_page=100&include_totals=true",
        "body": "",
        "status": 200,
        "response": {
            "total": 17,
            "start": 0,
            "limit": 100,
            "clients": [
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "DeployCLI-Dev",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "custom_login_page_preview": "<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <title>Sign In with Auth0</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\" />\n</head>\n<body>\n\n  <!--[if IE 8]>\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/ie8/0.2.5/ie8.js\"></script>\n  <![endif]-->\n\n  <!--[if lte IE 9]>\n  <script src=\"https://cdn.auth0.com/js/base64.js\"></script>\n  <script src=\"https://cdn.auth0.com/js/es5-shim.min.js\"></script>\n  <![endif]-->\n\n  <script src=\"https://cdn.auth0.com/js/lock/12.5/lock.min.js\"></script>\n  <script>\n    // Decode utf8 characters properly\n    var config = JSON.parse(decodeURIComponent(escape(window.atob('@@config@@'))));\n    config.extraParams = config.extraParams || {};\n    var connection = config.connection;\n    var prompt = config.prompt;\n    var languageDictionary;\n    var language;\n\n    if (config.dict && config.dict.signin && config.dict.signin.title) {\n      languageDictionary = { title: config.dict.signin.title };\n    } else if (typeof config.dict === 'string') {\n      language = config.dict;\n    }\n    var loginHint = config.extraParams.login_hint;\n    var colors = config.colors || {};\n\n    // Available Lock configuration options: https://auth0.com/docs/libraries/lock/lock-configuration\n    var lock = new Auth0Lock(config.clientID, config.auth0Domain, {\n      auth: {\n        redirectUrl: config.callbackURL,\n        responseType: (config.internalOptions || {}).response_type ||\n          (config.callbackOnLocationHash ? 'token' : 'code'),\n        params: config.internalOptions\n      },\n      configurationBaseUrl: config.clientConfigurationBaseUrl,\n      overrides: {\n        __tenant: config.auth0Tenant,\n        __token_issuer: config.authorizationServer.issuer\n      },\n      assetsUrl:  config.assetsUrl,\n      allowedConnections: connection ? [connection] : null,\n      rememberLastLogin: !prompt,\n      language: language,\n      languageBaseUrl: config.languageBaseUrl,\n      languageDictionary: languageDictionary,\n      theme: {\n        //logo:            'YOUR LOGO HERE',\n        primaryColor:    colors.primary ? colors.primary : 'green'\n      },\n      prefill: loginHint ? { email: loginHint, username: loginHint } : null,\n      closable: false,\n      defaultADUsernameFromEmailPrefix: false\n    });\n\n    if(colors.page_background) {\n      var css = '.auth0-lock.auth0-lock .auth0-lock-overlay { background: ' +\n                  colors.page_background +\n                ' }';\n      var style = document.createElement('style');\n\n      style.appendChild(document.createTextNode(css));\n\n      document.body.appendChild(style);\n    }\n\n    lock.show();\n  </script>\n</body>\n</html>  ",
                    "cross_origin_authentication": true,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "Ku5wNRXVrQbnITFA9yCr9b9SlCukFN8L",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "API Explorer Application",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "custom_login_page_preview": "<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <title>Sign In with Auth0</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\" />\n</head>\n<body>\n\n  <!--[if IE 8]>\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/ie8/0.2.5/ie8.js\"></script>\n  <![endif]-->\n\n  <!--[if lte IE 9]>\n  <script src=\"https://cdn.auth0.com/js/base64.js\"></script>\n  <script src=\"https://cdn.auth0.com/js/es5-shim.min.js\"></script>\n  <![endif]-->\n\n  <script src=\"https://cdn.auth0.com/js/lock/12.5/lock.min.js\"></script>\n  <script>\n    // Decode utf8 characters properly\n    var config = JSON.parse(decodeURIComponent(escape(window.atob('@@config@@'))));\n    config.extraParams = config.extraParams || {};\n    var connection = config.connection;\n    var prompt = config.prompt;\n    var languageDictionary;\n    var language;\n\n    if (config.dict && config.dict.signin && config.dict.signin.title) {\n      languageDictionary = { title: config.dict.signin.title };\n    } else if (typeof config.dict === 'string') {\n      language = config.dict;\n    }\n    var loginHint = config.extraParams.login_hint;\n    var colors = config.colors || {};\n\n    // Available Lock configuration options: https://auth0.com/docs/libraries/lock/lock-configuration\n    var lock = new Auth0Lock(config.clientID, config.auth0Domain, {\n      auth: {\n        redirectUrl: config.callbackURL,\n        responseType: (config.internalOptions || {}).response_type ||\n          (config.callbackOnLocationHash ? 'token' : 'code'),\n        params: config.internalOptions\n      },\n      configurationBaseUrl: config.clientConfigurationBaseUrl,\n      overrides: {\n        __tenant: config.auth0Tenant,\n        __token_issuer: config.authorizationServer.issuer\n      },\n      assetsUrl:  config.assetsUrl,\n      allowedConnections: connection ? [connection] : null,\n      rememberLastLogin: !prompt,\n      language: language,\n      languageBaseUrl: config.languageBaseUrl,\n      languageDictionary: languageDictionary,\n      theme: {\n        //logo:            'YOUR LOGO HERE',\n        primaryColor:    colors.primary ? colors.primary : 'green'\n      },\n      prefill: loginHint ? { email: loginHint, username: loginHint } : null,\n      closable: false,\n      defaultADUsernameFromEmailPrefix: false\n    });\n\n    if(colors.page_background) {\n      var css = '.auth0-lock.auth0-lock .auth0-lock-overlay { background: ' +\n                  colors.page_background +\n                ' }';\n      var style = document.createElement('style');\n\n      style.appendChild(document.createTextNode(css));\n\n      document.body.appendChild(style);\n    }\n\n    lock.show();\n  </script>\n</body>\n</html>  ",
                    "cross_origin_authentication": true,
                    "allowed_clients": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "tSJqoA0wpptageIV7f1D2bq3WgSgaPob",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Org test App",
                    "callbacks": [
                        "http://localhost:3000"
                    ],
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "cross_origin_authentication": true,
                    "allowed_clients": [],
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "organization_require_behavior": "post_login_prompt",
                    "organization_usage": "allow",
                    "allowed_logout_urls": [
                        "http://localhost:3000"
                    ],
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "NVZw2D4EQ99E4yIPEj2hE9kZJfyPTz89",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "spa",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token"
                    ],
                    "web_origins": [
                        "http://localhost:3000"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Go test app kushal",
                    "allowed_clients": [],
                    "allowed_logout_urls": [
                        "http://localhost:4002/",
                        "localhost:4002/logout"
                    ],
                    "callbacks": [
                        "http://localhost:4002/",
                        "http://localhost:4002/callback"
                    ],
                    "cross_origin_auth": false,
                    "cross_origin_authentication": true,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "organization_require_behavior": "no_prompt",
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "PxFLsPRVvz3wQrRQNI1dgQCESIDjiv8e",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "regular_web",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Role test API (Test Application)",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "cross_origin_authentication": true,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "nz0xcpycpcsyEzZ9gBlQkJ47e6GPeXQB",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "DeployCLI-E2E",
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "cross_origin_authentication": true,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "36TEM2e0l4GPf0LM8aH1lcJEZBp2DzvY",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Default App",
                    "callbacks": [],
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "cross_origin_authentication": true,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "AF2fEsiqxQ0uGNdrs8J26ibOnmXs3jEX",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Deploy CLI",
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "cross_origin_authentication": true,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "sVMh2iWlCw44yRUt88rEO5cnDA6pvm48",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Auth0-CLI",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "cross_origin_authentication": true,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "gdpNdEa0sdFOX1VZJ4xtycnNR1G5TlRg",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Dev_DAY_APP",
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "sso_disabled": false,
                    "cross_origin_auth": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "allowed_clients": [],
                    "allowed_logout_urls": [
                        "http://localhost:3000"
                    ],
                    "callbacks": [
                        "http://localhost:3000/api/auth/callback",
                        "http://localhost:3000"
                    ],
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "ep5F5NHBlHlfjE1ijeuHepR3HUrdYpyv",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "regular_web",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "web_origins": [
                        "http://localhost:3000"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Node App",
                    "allowed_clients": [],
                    "allowed_logout_urls": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "allowed_origins": [],
                    "client_id": "ltna78HqWdPRiEHoLy119Dfs1iRMyR1w",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "regular_web",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "web_origins": [],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Terraform Provider",
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "3ykmF4bLMigp4Zbsznqj9uCPqLB7e95d",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Quickstarts API (Test Application)",
                    "client_metadata": {
                        "foo": "bar"
                    },
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "ixEERdhSidh32R6y7f1pzavjtho1mQoV",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "The Default App",
                    "allowed_clients": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": false,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "sso": false,
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "1v0GKWhDqqo1jgK2agXhuOarWC45wra6",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token",
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "auth0-deploy-cli-extension",
                    "allowed_clients": [],
                    "callbacks": [],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 31557600,
                        "idle_token_lifetime": 2592000,
                        "rotation_type": "non-rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "4mEZRv7D0zLfbSSWbsibdwaoYIVlRP0M",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "client_secret_post",
                    "app_type": "non_interactive",
                    "grant_types": [
                        "client_credentials"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": false,
                    "is_token_endpoint_ip_header_trusted": false,
                    "name": "Test SPA",
                    "allowed_clients": [],
                    "allowed_logout_urls": [
                        "http://localhost:3000"
                    ],
                    "callbacks": [
                        "http://localhost:3000"
                    ],
                    "client_metadata": {},
                    "cross_origin_auth": false,
                    "is_first_party": true,
                    "native_social_login": {
                        "apple": {
                            "enabled": false
                        },
                        "facebook": {
                            "enabled": false
                        }
                    },
                    "oidc_conformant": true,
                    "refresh_token": {
                        "expiration_type": "expiring",
                        "leeway": 0,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "infinite_token_lifetime": false,
                        "infinite_idle_token_lifetime": false,
                        "rotation_type": "rotating"
                    },
                    "sso_disabled": false,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "u6vM7mQRWqavasw69Fye6E5mMduHlfOX",
                    "callback_url_template": false,
                    "client_secret": "[REDACTED]",
                    "jwt_configuration": {
                        "alg": "RS256",
                        "lifetime_in_seconds": 36000,
                        "secret_encoded": false
                    },
                    "client_aliases": [],
                    "token_endpoint_auth_method": "none",
                    "app_type": "spa",
                    "grant_types": [
                        "authorization_code",
                        "implicit",
                        "refresh_token"
                    ],
                    "web_origins": [
                        "http://localhost:3000"
                    ],
                    "custom_login_page_on": true
                },
                {
                    "tenant": "kushal-dev",
                    "global": true,
                    "callbacks": [],
                    "is_first_party": true,
                    "name": "All Applications",
                    "refresh_token": {
                        "expiration_type": "non-expiring",
                        "leeway": 0,
                        "infinite_token_lifetime": true,
                        "infinite_idle_token_lifetime": true,
                        "token_lifetime": 2592000,
                        "idle_token_lifetime": 1296000,
                        "rotation_type": "non-rotating"
                    },
                    "owners": [
                        "mr|google-oauth2|109614534713742077035"
                    ],
                    "custom_login_page": "<html>TEST123</html>\n",
                    "cross_origin_authentication": true,
                    "signing_keys": [
                        {
                            "cert": "[REDACTED]",
                            "pkcs7": "[REDACTED]",
                            "subject": "deprecated"
                        }
                    ],
                    "client_id": "2Mlaa9rTwG8PJkTuRLXoeNOy8MibpSPn",
                    "client_secret": "[REDACTED]",
                    "custom_login_page_on": true
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/client-grants?per_page=100&page=0&include_totals=true",
        "body": "",
        "status": 200,
        "response": {
            "total": 5,
            "start": 0,
            "limit": 100,
            "client_grants": [
                {
                    "id": "cgr_PBDulb2RDmVsaV8K",
                    "client_id": "gdpNdEa0sdFOX1VZJ4xtycnNR1G5TlRg",
                    "audience": "https://kushal-dev.eu.auth0.com/api/v2/",
                    "scope": [
                        "read:client_grants",
                        "create:client_grants",
                        "delete:client_grants",
                        "update:client_grants",
                        "read:users",
                        "update:users",
                        "delete:users",
                        "create:users",
                        "read:users_app_metadata",
                        "update:users_app_metadata",
                        "delete:users_app_metadata",
                        "create:users_app_metadata",
                        "read:user_custom_blocks",
                        "create:user_custom_blocks",
                        "delete:user_custom_blocks",
                        "create:user_tickets",
                        "read:clients",
                        "update:clients",
                        "delete:clients",
                        "create:clients",
                        "read:client_keys",
                        "update:client_keys",
                        "delete:client_keys",
                        "create:client_keys",
                        "read:connections",
                        "update:connections",
                        "delete:connections",
                        "create:connections",
                        "read:resource_servers",
                        "update:resource_servers",
                        "delete:resource_servers",
                        "create:resource_servers",
                        "read:device_credentials",
                        "update:device_credentials",
                        "delete:device_credentials",
                        "create:device_credentials",
                        "read:rules",
                        "update:rules",
                        "delete:rules",
                        "create:rules",
                        "read:rules_configs",
                        "update:rules_configs",
                        "delete:rules_configs",
                        "read:hooks",
                        "update:hooks",
                        "delete:hooks",
                        "create:hooks",
                        "read:actions",
                        "update:actions",
                        "delete:actions",
                        "create:actions",
                        "read:email_provider",
                        "update:email_provider",
                        "delete:email_provider",
                        "create:email_provider",
                        "blacklist:tokens",
                        "read:stats",
                        "read:insights",
                        "read:tenant_settings",
                        "update:tenant_settings",
                        "read:logs",
                        "read:logs_users",
                        "read:shields",
                        "create:shields",
                        "update:shields",
                        "delete:shields",
                        "read:anomaly_blocks",
                        "delete:anomaly_blocks",
                        "update:triggers",
                        "read:triggers",
                        "read:grants",
                        "delete:grants",
                        "read:guardian_factors",
                        "update:guardian_factors",
                        "read:guardian_enrollments",
                        "delete:guardian_enrollments",
                        "create:guardian_enrollment_tickets",
                        "read:user_idp_tokens",
                        "create:passwords_checking_job",
                        "delete:passwords_checking_job",
                        "read:custom_domains",
                        "delete:custom_domains",
                        "create:custom_domains",
                        "update:custom_domains",
                        "read:email_templates",
                        "create:email_templates",
                        "update:email_templates",
                        "read:mfa_policies",
                        "update:mfa_policies",
                        "read:roles",
                        "create:roles",
                        "delete:roles",
                        "update:roles",
                        "read:prompts",
                        "update:prompts",
                        "read:branding",
                        "update:branding",
                        "delete:branding",
                        "read:log_streams",
                        "create:log_streams",
                        "delete:log_streams",
                        "update:log_streams",
                        "create:signing_keys",
                        "read:signing_keys",
                        "update:signing_keys",
                        "read:limits",
                        "update:limits",
                        "create:role_members",
                        "read:role_members",
                        "delete:role_members",
                        "read:entitlements",
                        "read:attack_protection",
                        "update:attack_protection",
                        "read:organizations_summary",
                        "create:authentication_methods",
                        "read:authentication_methods",
                        "update:authentication_methods",
                        "delete:authentication_methods",
                        "read:organizations",
                        "update:organizations",
                        "create:organizations",
                        "delete:organizations",
                        "create:organization_members",
                        "read:organization_members",
                        "delete:organization_members",
                        "create:organization_connections",
                        "read:organization_connections",
                        "update:organization_connections",
                        "delete:organization_connections",
                        "create:organization_member_roles",
                        "read:organization_member_roles",
                        "delete:organization_member_roles",
                        "create:organization_invitations",
                        "read:organization_invitations",
                        "delete:organization_invitations",
                        "read:scim_config",
                        "create:scim_config",
                        "update:scim_config",
                        "delete:scim_config",
                        "create:scim_token",
                        "read:scim_token",
                        "delete:scim_token",
                        "delete:phone_providers",
                        "create:phone_providers",
                        "read:phone_providers",
                        "update:phone_providers",
                        "delete:phone_templates",
                        "create:phone_templates",
                        "read:phone_templates",
                        "update:phone_templates",
                        "create:encryption_keys",
                        "read:encryption_keys",
                        "update:encryption_keys",
                        "delete:encryption_keys",
                        "read:sessions",
                        "delete:sessions",
                        "read:refresh_tokens",
                        "delete:refresh_tokens",
                        "create:self_service_profiles",
                        "read:self_service_profiles",
                        "update:self_service_profiles",
                        "delete:self_service_profiles",
                        "create:sso_access_tickets",
                        "read:forms",
                        "update:forms",
                        "delete:forms",
                        "create:forms",
                        "read:flows",
                        "update:flows",
                        "delete:flows",
                        "create:flows",
                        "read:flows_vault",
                        "read:flows_vault_connections",
                        "update:flows_vault_connections",
                        "delete:flows_vault_connections",
                        "create:flows_vault_connections",
                        "read:flows_executions",
                        "delete:flows_executions",
                        "read:connections_options",
                        "update:connections_options",
                        "read:client_credentials",
                        "create:client_credentials",
                        "update:client_credentials",
                        "delete:client_credentials"
                    ]
                },
                {
                    "id": "cgr_lQdgqLzk48XJMaLd",
                    "client_id": "tSJqoA0wpptageIV7f1D2bq3WgSgaPob",
                    "audience": "https://kushal-dev.eu.auth0.com/api/v2/",
                    "scope": [
                        "read:client_grants",
                        "create:client_grants",
                        "delete:client_grants",
                        "update:client_grants",
                        "read:users",
                        "update:users",
                        "delete:users",
                        "create:users",
                        "read:users_app_metadata",
                        "update:users_app_metadata",
                        "delete:users_app_metadata",
                        "create:users_app_metadata",
                        "read:user_custom_blocks",
                        "create:user_custom_blocks",
                        "delete:user_custom_blocks",
                        "create:user_tickets",
                        "read:clients",
                        "update:clients",
                        "delete:clients",
                        "create:clients",
                        "read:client_keys",
                        "update:client_keys",
                        "delete:client_keys",
                        "create:client_keys",
                        "read:connections",
                        "update:connections",
                        "delete:connections",
                        "create:connections",
                        "read:resource_servers",
                        "update:resource_servers",
                        "delete:resource_servers",
                        "create:resource_servers",
                        "read:device_credentials",
                        "update:device_credentials",
                        "delete:device_credentials",
                        "create:device_credentials",
                        "read:rules",
                        "update:rules",
                        "delete:rules",
                        "create:rules",
                        "read:rules_configs",
                        "update:rules_configs",
                        "delete:rules_configs",
                        "read:hooks",
                        "update:hooks",
                        "delete:hooks",
                        "create:hooks",
                        "read:actions",
                        "update:actions",
                        "delete:actions",
                        "create:actions",
                        "read:email_provider",
                        "update:email_provider",
                        "delete:email_provider",
                        "create:email_provider",
                        "blacklist:tokens",
                        "read:stats",
                        "read:insights",
                        "read:tenant_settings",
                        "update:tenant_settings",
                        "read:logs",
                        "read:logs_users",
                        "read:shields",
                        "create:shields",
                        "update:shields",
                        "delete:shields",
                        "read:anomaly_blocks",
                        "delete:anomaly_blocks",
                        "update:triggers",
                        "read:triggers",
                        "read:grants",
                        "delete:grants",
                        "read:guardian_factors",
                        "update:guardian_factors",
                        "read:guardian_enrollments",
                        "delete:guardian_enrollments",
                        "create:guardian_enrollment_tickets",
                        "read:user_idp_tokens",
                        "create:passwords_checking_job",
                        "delete:passwords_checking_job",
                        "read:custom_domains",
                        "delete:custom_domains",
                        "create:custom_domains",
                        "update:custom_domains",
                        "read:email_templates",
                        "create:email_templates",
                        "update:email_templates",
                        "read:mfa_policies",
                        "update:mfa_policies",
                        "read:roles",
                        "create:roles",
                        "delete:roles",
                        "update:roles",
                        "read:prompts",
                        "update:prompts",
                        "read:branding",
                        "update:branding",
                        "delete:branding",
                        "read:log_streams",
                        "create:log_streams",
                        "delete:log_streams",
                        "update:log_streams",
                        "create:signing_keys",
                        "read:signing_keys",
                        "update:signing_keys",
                        "read:limits",
                        "update:limits",
                        "create:role_members",
                        "read:role_members",
                        "delete:role_members",
                        "read:entitlements",
                        "read:attack_protection",
                        "update:attack_protection",
                        "read:organizations_summary",
                        "create:authentication_methods",
                        "read:authentication_methods",
                        "update:authentication_methods",
                        "delete:authentication_methods",
                        "read:organizations",
                        "update:organizations",
                        "create:organizations",
                        "delete:organizations",
                        "create:organization_members",
                        "read:organization_members",
                        "delete:organization_members",
                        "create:organization_connections",
                        "read:organization_connections",
                        "update:organization_connections",
                        "delete:organization_connections",
                        "create:organization_member_roles",
                        "read:organization_member_roles",
                        "delete:organization_member_roles",
                        "create:organization_invitations",
                        "read:organization_invitations",
                        "delete:organization_invitations",
                        "read:scim_config",
                        "create:scim_config",
                        "update:scim_config",
                        "delete:scim_config",
                        "create:scim_token",
                        "read:scim_token",
                        "delete:scim_token",
                        "delete:phone_providers",
                        "create:phone_providers",
                        "read:phone_providers",
                        "update:phone_providers",
                        "delete:phone_templates",
                        "create:phone_templates",
                        "read:phone_templates",
                        "update:phone_templates",
                        "create:encryption_keys",
                        "read:encryption_keys",
                        "update:encryption_keys",
                        "delete:encryption_keys",
                        "read:sessions",
                        "delete:sessions",
                        "read:refresh_tokens",
                        "delete:refresh_tokens",
                        "create:self_service_profiles",
                        "read:self_service_profiles",
                        "update:self_service_profiles",
                        "delete:self_service_profiles",
                        "create:sso_access_tickets",
                        "read:forms",
                        "update:forms",
                        "delete:forms",
                        "create:forms",
                        "read:flows",
                        "update:flows",
                        "delete:flows",
                        "create:flows",
                        "read:flows_vault",
                        "read:flows_vault_connections",
                        "update:flows_vault_connections",
                        "delete:flows_vault_connections",
                        "create:flows_vault_connections",
                        "read:flows_executions",
                        "delete:flows_executions",
                        "read:connections_options",
                        "update:connections_options",
                        "read:client_credentials",
                        "create:client_credentials",
                        "update:client_credentials",
                        "delete:client_credentials"
                    ]
                },
                {
                    "id": "cgr_lfkNuD4NKfoMoL30",
                    "client_id": "36TEM2e0l4GPf0LM8aH1lcJEZBp2DzvY",
                    "audience": "https://kushal-dev.eu.auth0.com/api/v2/",
                    "scope": [
                        "read:client_grants",
                        "create:client_grants",
                        "update:client_grants",
                        "read:users",
                        "update:users",
                        "create:users",
                        "read:users_app_metadata",
                        "update:users_app_metadata",
                        "create:users_app_metadata",
                        "read:user_custom_blocks",
                        "create:user_custom_blocks",
                        "create:user_tickets",
                        "read:clients",
                        "update:clients",
                        "create:clients",
                        "read:client_keys",
                        "update:client_keys",
                        "create:client_keys",
                        "read:connections",
                        "update:connections",
                        "create:connections",
                        "read:resource_servers",
                        "update:resource_servers",
                        "create:resource_servers",
                        "read:device_credentials",
                        "update:device_credentials",
                        "create:device_credentials",
                        "read:rules",
                        "update:rules",
                        "create:rules",
                        "read:rules_configs",
                        "update:rules_configs",
                        "read:hooks",
                        "update:hooks",
                        "create:hooks",
                        "read:actions",
                        "update:actions",
                        "create:actions",
                        "read:email_provider",
                        "update:email_provider",
                        "create:email_provider",
                        "blacklist:tokens",
                        "read:stats",
                        "read:insights",
                        "read:tenant_settings",
                        "update:tenant_settings",
                        "read:logs",
                        "read:logs_users",
                        "read:shields",
                        "create:shields",
                        "update:shields",
                        "read:anomaly_blocks",
                        "update:triggers",
                        "read:triggers",
                        "read:grants",
                        "read:guardian_factors",
                        "update:guardian_factors",
                        "read:guardian_enrollments",
                        "create:guardian_enrollment_tickets",
                        "read:user_idp_tokens",
                        "create:passwords_checking_job",
                        "read:custom_domains",
                        "create:custom_domains",
                        "update:custom_domains",
                        "read:email_templates",
                        "create:email_templates",
                        "update:email_templates",
                        "read:mfa_policies",
                        "update:mfa_policies",
                        "read:roles",
                        "create:roles",
                        "update:roles",
                        "read:prompts",
                        "update:prompts",
                        "read:branding",
                        "update:branding",
                        "read:log_streams",
                        "create:log_streams",
                        "update:log_streams",
                        "create:signing_keys",
                        "read:signing_keys",
                        "update:signing_keys",
                        "read:limits",
                        "update:limits",
                        "create:role_members",
                        "read:role_members",
                        "read:entitlements",
                        "read:attack_protection",
                        "update:attack_protection",
                        "read:organizations_summary",
                        "create:authentication_methods",
                        "read:authentication_methods",
                        "update:authentication_methods",
                        "read:organizations",
                        "update:organizations",
                        "create:organizations",
                        "create:organization_members",
                        "read:organization_members",
                        "create:organization_connections",
                        "read:organization_connections",
                        "update:organization_connections",
                        "create:organization_member_roles",
                        "read:organization_member_roles",
                        "create:organization_invitations",
                        "read:organization_invitations",
                        "read:scim_config",
                        "create:scim_config",
                        "update:scim_config",
                        "create:scim_token",
                        "read:scim_token",
                        "create:phone_providers",
                        "read:phone_providers",
                        "update:phone_providers",
                        "create:phone_templates",
                        "read:phone_templates",
                        "update:phone_templates",
                        "create:encryption_keys",
                        "read:encryption_keys",
                        "update:encryption_keys",
                        "read:sessions",
                        "read:refresh_tokens",
                        "create:self_service_profiles",
                        "read:self_service_profiles",
                        "update:self_service_profiles",
                        "create:sso_access_tickets",
                        "read:forms",
                        "update:forms",
                        "create:forms",
                        "read:flows",
                        "update:flows",
                        "create:flows",
                        "read:flows_vault",
                        "update:flows_vault",
                        "create:flows_vault",
                        "read:flows_executions",
                        "read:client_credentials",
                        "create:client_credentials",
                        "update:client_credentials",
                        "delete:flows_vault"
                    ]
                },
                {
                    "id": "cgr_nJtazvkmfkXNtMM8",
                    "client_id": "Ku5wNRXVrQbnITFA9yCr9b9SlCukFN8L",
                    "audience": "https://kushal-dev.eu.auth0.com/api/v2/",
                    "scope": [
                        "read:client_grants",
                        "create:client_grants",
                        "delete:client_grants",
                        "update:client_grants",
                        "read:users",
                        "update:users",
                        "delete:users",
                        "create:users",
                        "read:users_app_metadata",
                        "update:users_app_metadata",
                        "delete:users_app_metadata",
                        "create:users_app_metadata",
                        "read:user_custom_blocks",
                        "create:user_custom_blocks",
                        "delete:user_custom_blocks",
                        "create:user_tickets",
                        "read:clients",
                        "update:clients",
                        "delete:clients",
                        "create:clients",
                        "read:client_keys",
                        "update:client_keys",
                        "delete:client_keys",
                        "create:client_keys",
                        "read:connections",
                        "update:connections",
                        "delete:connections",
                        "create:connections",
                        "read:resource_servers",
                        "update:resource_servers",
                        "delete:resource_servers",
                        "create:resource_servers",
                        "read:device_credentials",
                        "update:device_credentials",
                        "delete:device_credentials",
                        "create:device_credentials",
                        "read:rules",
                        "update:rules",
                        "delete:rules",
                        "create:rules",
                        "read:rules_configs",
                        "update:rules_configs",
                        "delete:rules_configs",
                        "read:hooks",
                        "update:hooks",
                        "delete:hooks",
                        "create:hooks",
                        "read:actions",
                        "update:actions",
                        "delete:actions",
                        "create:actions",
                        "read:email_provider",
                        "update:email_provider",
                        "delete:email_provider",
                        "create:email_provider",
                        "blacklist:tokens",
                        "read:stats",
                        "read:insights",
                        "read:tenant_settings",
                        "update:tenant_settings",
                        "read:logs",
                        "read:logs_users",
                        "read:shields",
                        "create:shields",
                        "update:shields",
                        "delete:shields",
                        "read:anomaly_blocks",
                        "delete:anomaly_blocks",
                        "update:triggers",
                        "read:triggers",
                        "read:grants",
                        "delete:grants",
                        "read:guardian_factors",
                        "update:guardian_factors",
                        "read:guardian_enrollments",
                        "delete:guardian_enrollments",
                        "create:guardian_enrollment_tickets",
                        "read:user_idp_tokens",
                        "create:passwords_checking_job",
                        "delete:passwords_checking_job",
                        "read:custom_domains",
                        "delete:custom_domains",
                        "create:custom_domains",
                        "update:custom_domains",
                        "read:email_templates",
                        "create:email_templates",
                        "update:email_templates",
                        "read:mfa_policies",
                        "update:mfa_policies",
                        "read:roles",
                        "create:roles",
                        "delete:roles",
                        "update:roles",
                        "read:prompts",
                        "update:prompts",
                        "read:branding",
                        "update:branding",
                        "delete:branding",
                        "read:log_streams",
                        "create:log_streams",
                        "delete:log_streams",
                        "update:log_streams",
                        "create:signing_keys",
                        "read:signing_keys",
                        "update:signing_keys",
                        "read:limits",
                        "update:limits",
                        "create:role_members",
                        "read:role_members",
                        "delete:role_members",
                        "read:entitlements",
                        "read:attack_protection",
                        "update:attack_protection",
                        "read:organizations_summary",
                        "create:authentication_methods",
                        "read:authentication_methods",
                        "update:authentication_methods",
                        "delete:authentication_methods",
                        "read:organizations",
                        "update:organizations",
                        "create:organizations",
                        "delete:organizations",
                        "create:organization_members",
                        "read:organization_members",
                        "delete:organization_members",
                        "create:organization_connections",
                        "read:organization_connections",
                        "update:organization_connections",
                        "delete:organization_connections",
                        "create:organization_member_roles",
                        "read:organization_member_roles",
                        "delete:organization_member_roles",
                        "create:organization_invitations",
                        "read:organization_invitations",
                        "delete:organization_invitations",
                        "read:scim_config",
                        "create:scim_config",
                        "update:scim_config",
                        "delete:scim_config",
                        "create:scim_token",
                        "read:scim_token",
                        "delete:scim_token",
                        "delete:phone_providers",
                        "create:phone_providers",
                        "read:phone_providers",
                        "update:phone_providers",
                        "delete:phone_templates",
                        "create:phone_templates",
                        "read:phone_templates",
                        "update:phone_templates",
                        "create:encryption_keys",
                        "read:encryption_keys",
                        "update:encryption_keys",
                        "delete:encryption_keys",
                        "read:sessions",
                        "delete:sessions",
                        "read:refresh_tokens",
                        "delete:refresh_tokens",
                        "create:self_service_profiles",
                        "read:self_service_profiles",
                        "update:self_service_profiles",
                        "delete:self_service_profiles",
                        "create:sso_access_tickets",
                        "read:forms",
                        "update:forms",
                        "delete:forms",
                        "create:forms",
                        "read:flows",
                        "update:flows",
                        "delete:flows",
                        "create:flows",
                        "read:flows_vault",
                        "read:flows_vault_connections",
                        "update:flows_vault_connections",
                        "delete:flows_vault_connections",
                        "create:flows_vault_connections",
                        "read:flows_executions",
                        "delete:flows_executions",
                        "read:connections_options",
                        "update:connections_options",
                        "read:client_credentials",
                        "create:client_credentials",
                        "update:client_credentials",
                        "delete:client_credentials"
                    ]
                },
                {
                    "id": "cgr_qIYNlHVE26JcxZPs",
                    "client_id": "nz0xcpycpcsyEzZ9gBlQkJ47e6GPeXQB",
                    "audience": "role-test",
                    "scope": []
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/roles?per_page=100&page=0&include_totals=true",
        "body": "",
        "status": 200,
        "response": {
            "roles": [
                {
                    "id": "rol_gq08I4FPXNktjm65",
                    "name": "dev-int",
                    "description": "internal developer "
                }
            ],
            "start": 0,
            "limit": 100,
            "total": 1
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/roles/rol_gq08I4FPXNktjm65/permissions?per_page=100&page=0&include_totals=true",
        "body": "",
        "status": 200,
        "response": {
            "permissions": [
                {
                    "permission_name": "read:api",
                    "description": "api read permission",
                    "resource_server_name": "Role test API",
                    "resource_server_identifier": "role-test"
                },
                {
                    "permission_name": "read:comment ",
                    "description": "comment read permission",
                    "resource_server_name": "Role test API",
                    "resource_server_identifier": "role-test"
                },
                {
                    "permission_name": "read:doc",
                    "description": "doc read permission",
                    "resource_server_name": "Role test API",
                    "resource_server_identifier": "role-test"
                },
                {
                    "permission_name": "read:post",
                    "description": "post read permission",
                    "resource_server_name": "Role test API",
                    "resource_server_identifier": "role-test"
                },
                {
                    "permission_name": "read:user",
                    "description": "user read permission",
                    "resource_server_name": "Role test API",
                    "resource_server_identifier": "role-test"
                },
                {
                    "permission_name": "update:api",
                    "description": "api update permission",
                    "resource_server_name": "Role test API",
                    "resource_server_identifier": "role-test"
                },
                {
                    "permission_name": "update:comment",
                    "description": "comment update permission",
                    "resource_server_name": "Role test API",
                    "resource_server_identifier": "role-test"
                },
                {
                    "permission_name": "update:doc",
                    "description": "doc update permission",
                    "resource_server_name": "Role test API",
                    "resource_server_identifier": "role-test"
                },
                {
                    "permission_name": "update:post",
                    "description": "post update permission",
                    "resource_server_name": "Role test API",
                    "resource_server_identifier": "role-test"
                },
                {
                    "permission_name": "update:user",
                    "description": "user update permission",
                    "resource_server_name": "Role test API",
                    "resource_server_identifier": "role-test"
                }
            ],
            "start": 0,
            "limit": 100,
            "total": 10
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/actions/actions?page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "actions": [
                {
                    "id": "e105b5a8-cdea-4292-b588-383cb12bdbcc",
                    "name": "k-flow",
                    "supported_triggers": [
                        {
                            "id": "post-login",
                            "version": "v3"
                        }
                    ],
                    "created_at": "2024-08-11T18:43:54.559933482Z",
                    "updated_at": "2024-09-26T07:32:36.751347258Z",
                    "code": "/**\n* Handler that will be called during the execution of a PostLogin flow.\n*\n* @param {Event} event - Details about the user and the context in which they are logging in.\n* @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n*/\nexports.onExecutePostLogin = async (event, api) => {\n  console.log(event.secrets)\n  // if (event.user.nickname != \"kushal.shit\"){\n  //    api.access.deny(\"Unknown user!!\")\n  // }\n};\n\n\n/**\n* Handler that will be invoked when this action is resuming after an external redirect. If your\n* onExecutePostLogin function does not perform a redirect, this function can be safely ignored.\n*\n* @param {Event} event - Details about the user and the context in which they are logging in.\n* @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n*/\n// exports.onContinuePostLogin = async (event, api) => {\n// };\n",
                    "dependencies": [],
                    "runtime": "node18-actions",
                    "status": "built",
                    "secrets": [
                        {
                            "name": "my_secret_url",
                            "updated_at": "2024-09-18T09:55:00.423293831Z"
                        },
                        {
                            "name": "sec_1",
                            "updated_at": "2024-09-18T09:55:00.423293831Z"
                        }
                    ],
                    "current_version": {
                        "id": "44dd594d-c57d-490f-b22b-5fb499b81afd",
                        "code": "/**\n* Handler that will be called during the execution of a PostLogin flow.\n*\n* @param {Event} event - Details about the user and the context in which they are logging in.\n* @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n*/\nexports.onExecutePostLogin = async (event, api) => {\n  console.log(event.secrets)\n  // if (event.user.nickname != \"kushal.shit\"){\n  //    api.access.deny(\"Unknown user!!\")\n  // }\n};\n\n\n/**\n* Handler that will be invoked when this action is resuming after an external redirect. If your\n* onExecutePostLogin function does not perform a redirect, this function can be safely ignored.\n*\n* @param {Event} event - Details about the user and the context in which they are logging in.\n* @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n*/\n// exports.onContinuePostLogin = async (event, api) => {\n// };\n",
                        "runtime": "node18-actions",
                        "status": "BUILT",
                        "number": 51,
                        "build_time": "2024-09-26T07:32:46.544296361Z",
                        "created_at": "2024-09-26T07:32:46.472453906Z",
                        "updated_at": "2024-09-26T07:32:46.544910189Z"
                    },
                    "deployed_version": {
                        "code": "/**\n* Handler that will be called during the execution of a PostLogin flow.\n*\n* @param {Event} event - Details about the user and the context in which they are logging in.\n* @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n*/\nexports.onExecutePostLogin = async (event, api) => {\n  console.log(event.secrets)\n  // if (event.user.nickname != \"kushal.shit\"){\n  //    api.access.deny(\"Unknown user!!\")\n  // }\n};\n\n\n/**\n* Handler that will be invoked when this action is resuming after an external redirect. If your\n* onExecutePostLogin function does not perform a redirect, this function can be safely ignored.\n*\n* @param {Event} event - Details about the user and the context in which they are logging in.\n* @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n*/\n// exports.onContinuePostLogin = async (event, api) => {\n// };\n",
                        "dependencies": [],
                        "id": "44dd594d-c57d-490f-b22b-5fb499b81afd",
                        "deployed": true,
                        "number": 51,
                        "built_at": "2024-09-26T07:32:46.544296361Z",
                        "secrets": [
                            {
                                "name": "my_secret_url",
                                "updated_at": "2024-09-18T09:55:00.423293831Z"
                            },
                            {
                                "name": "sec_1",
                                "updated_at": "2024-09-18T09:55:00.423293831Z"
                            }
                        ],
                        "status": "built",
                        "created_at": "2024-09-26T07:32:46.472453906Z",
                        "updated_at": "2024-09-26T07:32:46.544910189Z",
                        "runtime": "node18-actions",
                        "supported_triggers": [
                            {
                                "id": "post-login",
                                "version": "v3"
                            }
                        ]
                    },
                    "all_changes_deployed": true
                },
                {
                    "id": "4301ffb3-fc3f-40cb-9b0b-2bb23f090327",
                    "name": "post-login-onbording",
                    "supported_triggers": [
                        {
                            "id": "post-login",
                            "version": "v3"
                        }
                    ],
                    "created_at": "2024-08-12T11:09:42.970451051Z",
                    "updated_at": "2024-09-26T07:32:37.762276179Z",
                    "code": "/**\n* Handler that will be called during the execution of a PostLogin flow.\n*\n* @param {Event} event - Details about the user and the context in which they are logging in.\n* @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n*/\nexports.onExecutePostLogin = async (event, api) => {\n  const FORM_ID = 'ap_vHcEKGZJ5oaTYTePwe2W1T';\n\n  api.prompt.render(FORM_ID);\n};\nexports.onContinuePostLogin = async (event, api) => {}\n\n/**\n* Handler that will be invoked when this action is resuming after an external redirect. If your\n* onExecutePostLogin function does not perform a redirect, this function can be safely ignored.\n*\n* @param {Event} event - Details about the user and the context in which they are logging in.\n* @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n*/\n// exports.onContinuePostLogin = async (event, api) => {\n// };\n",
                    "dependencies": [],
                    "runtime": "node18-actions",
                    "status": "built",
                    "secrets": [],
                    "current_version": {
                        "id": "7a9f26f0-d5d7-45e5-b9a0-eaa9a6430299",
                        "code": "/**\n* Handler that will be called during the execution of a PostLogin flow.\n*\n* @param {Event} event - Details about the user and the context in which they are logging in.\n* @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n*/\nexports.onExecutePostLogin = async (event, api) => {\n  const FORM_ID = 'ap_vHcEKGZJ5oaTYTePwe2W1T';\n\n  api.prompt.render(FORM_ID);\n};\nexports.onContinuePostLogin = async (event, api) => {}\n\n/**\n* Handler that will be invoked when this action is resuming after an external redirect. If your\n* onExecutePostLogin function does not perform a redirect, this function can be safely ignored.\n*\n* @param {Event} event - Details about the user and the context in which they are logging in.\n* @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n*/\n// exports.onContinuePostLogin = async (event, api) => {\n// };\n",
                        "runtime": "node18-actions",
                        "status": "BUILT",
                        "number": 46,
                        "build_time": "2024-09-26T07:32:38.298040484Z",
                        "created_at": "2024-09-26T07:32:38.223235246Z",
                        "updated_at": "2024-09-26T07:32:38.299546854Z"
                    },
                    "deployed_version": {
                        "code": "/**\n* Handler that will be called during the execution of a PostLogin flow.\n*\n* @param {Event} event - Details about the user and the context in which they are logging in.\n* @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n*/\nexports.onExecutePostLogin = async (event, api) => {\n  const FORM_ID = 'ap_vHcEKGZJ5oaTYTePwe2W1T';\n\n  api.prompt.render(FORM_ID);\n};\nexports.onContinuePostLogin = async (event, api) => {}\n\n/**\n* Handler that will be invoked when this action is resuming after an external redirect. If your\n* onExecutePostLogin function does not perform a redirect, this function can be safely ignored.\n*\n* @param {Event} event - Details about the user and the context in which they are logging in.\n* @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n*/\n// exports.onContinuePostLogin = async (event, api) => {\n// };\n",
                        "dependencies": [],
                        "id": "7a9f26f0-d5d7-45e5-b9a0-eaa9a6430299",
                        "deployed": true,
                        "number": 46,
                        "built_at": "2024-09-26T07:32:38.298040484Z",
                        "secrets": [],
                        "status": "built",
                        "created_at": "2024-09-26T07:32:38.223235246Z",
                        "updated_at": "2024-09-26T07:32:38.299546854Z",
                        "runtime": "node18-actions",
                        "supported_triggers": [
                            {
                                "id": "post-login",
                                "version": "v3"
                            }
                        ]
                    },
                    "all_changes_deployed": true
                }
            ],
            "total": 2,
            "per_page": 100
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/actions/actions?page=0&per_page=100",
        "body": "",
        "status": 200,
        "response": {
            "actions": [
                {
                    "id": "e105b5a8-cdea-4292-b588-383cb12bdbcc",
                    "name": "k-flow",
                    "supported_triggers": [
                        {
                            "id": "post-login",
                            "version": "v3"
                        }
                    ],
                    "created_at": "2024-08-11T18:43:54.559933482Z",
                    "updated_at": "2024-09-26T07:32:36.751347258Z",
                    "code": "/**\n* Handler that will be called during the execution of a PostLogin flow.\n*\n* @param {Event} event - Details about the user and the context in which they are logging in.\n* @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n*/\nexports.onExecutePostLogin = async (event, api) => {\n  console.log(event.secrets)\n  // if (event.user.nickname != \"kushal.shit\"){\n  //    api.access.deny(\"Unknown user!!\")\n  // }\n};\n\n\n/**\n* Handler that will be invoked when this action is resuming after an external redirect. If your\n* onExecutePostLogin function does not perform a redirect, this function can be safely ignored.\n*\n* @param {Event} event - Details about the user and the context in which they are logging in.\n* @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n*/\n// exports.onContinuePostLogin = async (event, api) => {\n// };\n",
                    "dependencies": [],
                    "runtime": "node18-actions",
                    "status": "built",
                    "secrets": [
                        {
                            "name": "my_secret_url",
                            "updated_at": "2024-09-18T09:55:00.423293831Z"
                        },
                        {
                            "name": "sec_1",
                            "updated_at": "2024-09-18T09:55:00.423293831Z"
                        }
                    ],
                    "current_version": {
                        "id": "44dd594d-c57d-490f-b22b-5fb499b81afd",
                        "code": "/**\n* Handler that will be called during the execution of a PostLogin flow.\n*\n* @param {Event} event - Details about the user and the context in which they are logging in.\n* @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n*/\nexports.onExecutePostLogin = async (event, api) => {\n  console.log(event.secrets)\n  // if (event.user.nickname != \"kushal.shit\"){\n  //    api.access.deny(\"Unknown user!!\")\n  // }\n};\n\n\n/**\n* Handler that will be invoked when this action is resuming after an external redirect. If your\n* onExecutePostLogin function does not perform a redirect, this function can be safely ignored.\n*\n* @param {Event} event - Details about the user and the context in which they are logging in.\n* @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n*/\n// exports.onContinuePostLogin = async (event, api) => {\n// };\n",
                        "runtime": "node18-actions",
                        "status": "BUILT",
                        "number": 51,
                        "build_time": "2024-09-26T07:32:46.544296361Z",
                        "created_at": "2024-09-26T07:32:46.472453906Z",
                        "updated_at": "2024-09-26T07:32:46.544910189Z"
                    },
                    "deployed_version": {
                        "code": "/**\n* Handler that will be called during the execution of a PostLogin flow.\n*\n* @param {Event} event - Details about the user and the context in which they are logging in.\n* @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n*/\nexports.onExecutePostLogin = async (event, api) => {\n  console.log(event.secrets)\n  // if (event.user.nickname != \"kushal.shit\"){\n  //    api.access.deny(\"Unknown user!!\")\n  // }\n};\n\n\n/**\n* Handler that will be invoked when this action is resuming after an external redirect. If your\n* onExecutePostLogin function does not perform a redirect, this function can be safely ignored.\n*\n* @param {Event} event - Details about the user and the context in which they are logging in.\n* @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n*/\n// exports.onContinuePostLogin = async (event, api) => {\n// };\n",
                        "dependencies": [],
                        "id": "44dd594d-c57d-490f-b22b-5fb499b81afd",
                        "deployed": true,
                        "number": 51,
                        "built_at": "2024-09-26T07:32:46.544296361Z",
                        "secrets": [
                            {
                                "name": "my_secret_url",
                                "updated_at": "2024-09-18T09:55:00.423293831Z"
                            },
                            {
                                "name": "sec_1",
                                "updated_at": "2024-09-18T09:55:00.423293831Z"
                            }
                        ],
                        "status": "built",
                        "created_at": "2024-09-26T07:32:46.472453906Z",
                        "updated_at": "2024-09-26T07:32:46.544910189Z",
                        "runtime": "node18-actions",
                        "supported_triggers": [
                            {
                                "id": "post-login",
                                "version": "v3"
                            }
                        ]
                    },
                    "all_changes_deployed": true
                },
                {
                    "id": "4301ffb3-fc3f-40cb-9b0b-2bb23f090327",
                    "name": "post-login-onbording",
                    "supported_triggers": [
                        {
                            "id": "post-login",
                            "version": "v3"
                        }
                    ],
                    "created_at": "2024-08-12T11:09:42.970451051Z",
                    "updated_at": "2024-09-26T07:32:37.762276179Z",
                    "code": "/**\n* Handler that will be called during the execution of a PostLogin flow.\n*\n* @param {Event} event - Details about the user and the context in which they are logging in.\n* @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n*/\nexports.onExecutePostLogin = async (event, api) => {\n  const FORM_ID = 'ap_vHcEKGZJ5oaTYTePwe2W1T';\n\n  api.prompt.render(FORM_ID);\n};\nexports.onContinuePostLogin = async (event, api) => {}\n\n/**\n* Handler that will be invoked when this action is resuming after an external redirect. If your\n* onExecutePostLogin function does not perform a redirect, this function can be safely ignored.\n*\n* @param {Event} event - Details about the user and the context in which they are logging in.\n* @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n*/\n// exports.onContinuePostLogin = async (event, api) => {\n// };\n",
                    "dependencies": [],
                    "runtime": "node18-actions",
                    "status": "built",
                    "secrets": [],
                    "current_version": {
                        "id": "7a9f26f0-d5d7-45e5-b9a0-eaa9a6430299",
                        "code": "/**\n* Handler that will be called during the execution of a PostLogin flow.\n*\n* @param {Event} event - Details about the user and the context in which they are logging in.\n* @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n*/\nexports.onExecutePostLogin = async (event, api) => {\n  const FORM_ID = 'ap_vHcEKGZJ5oaTYTePwe2W1T';\n\n  api.prompt.render(FORM_ID);\n};\nexports.onContinuePostLogin = async (event, api) => {}\n\n/**\n* Handler that will be invoked when this action is resuming after an external redirect. If your\n* onExecutePostLogin function does not perform a redirect, this function can be safely ignored.\n*\n* @param {Event} event - Details about the user and the context in which they are logging in.\n* @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n*/\n// exports.onContinuePostLogin = async (event, api) => {\n// };\n",
                        "runtime": "node18-actions",
                        "status": "BUILT",
                        "number": 46,
                        "build_time": "2024-09-26T07:32:38.298040484Z",
                        "created_at": "2024-09-26T07:32:38.223235246Z",
                        "updated_at": "2024-09-26T07:32:38.299546854Z"
                    },
                    "deployed_version": {
                        "code": "/**\n* Handler that will be called during the execution of a PostLogin flow.\n*\n* @param {Event} event - Details about the user and the context in which they are logging in.\n* @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n*/\nexports.onExecutePostLogin = async (event, api) => {\n  const FORM_ID = 'ap_vHcEKGZJ5oaTYTePwe2W1T';\n\n  api.prompt.render(FORM_ID);\n};\nexports.onContinuePostLogin = async (event, api) => {}\n\n/**\n* Handler that will be invoked when this action is resuming after an external redirect. If your\n* onExecutePostLogin function does not perform a redirect, this function can be safely ignored.\n*\n* @param {Event} event - Details about the user and the context in which they are logging in.\n* @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n*/\n// exports.onContinuePostLogin = async (event, api) => {\n// };\n",
                        "dependencies": [],
                        "id": "7a9f26f0-d5d7-45e5-b9a0-eaa9a6430299",
                        "deployed": true,
                        "number": 46,
                        "built_at": "2024-09-26T07:32:38.298040484Z",
                        "secrets": [],
                        "status": "built",
                        "created_at": "2024-09-26T07:32:38.223235246Z",
                        "updated_at": "2024-09-26T07:32:38.299546854Z",
                        "runtime": "node18-actions",
                        "supported_triggers": [
                            {
                                "id": "post-login",
                                "version": "v3"
                            }
                        ]
                    },
                    "all_changes_deployed": true
                }
            ],
            "total": 2,
            "per_page": 100
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/organizations?page=0&per_page=100&include_totals=true",
        "body": "",
        "status": 200,
        "response": {
            "organizations": [
                {
                    "id": "org_6GeloXhZx6QpiCMz",
                    "name": "kushal-dev-org",
                    "display_name": "kushal-dev Organization"
                }
            ],
            "start": 0,
            "limit": 100,
            "total": 1
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/organizations/org_6GeloXhZx6QpiCMz/enabled_connections",
        "body": "",
        "status": 200,
        "response": [
            {
                "connection_id": "con_0wl0dLTgEBQTMRrK",
                "assign_membership_on_login": true,
                "is_signup_enabled": true,
                "show_as_button": true,
                "connection": {
                    "name": "Username-Password-Authentication",
                    "strategy": "auth0"
                }
            }
        ],
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "GET",
        "path": "/api/v2/connections?per_page=100&page=0&include_totals=true",
        "body": "",
        "status": 200,
        "response": {
            "total": 5,
            "start": 0,
            "limit": 100,
            "connections": [
                {
                    "id": "con_1phMfGakxwdqWmih",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "import_mode": false,
                        "customScripts": {
                            "login": "function login(email, password, callback) {\n  // This script should authenticate a user against the credentials stored in\n  // your database.\n  // It is executed when a user attempts to log in or immediately after signing\n  // up (as a verification that the user was successfully signed up).\n  //\n  // Everything returned by this script will be set as part of the user profile\n  // and will be visible by any of the tenant admins. Avoid adding attributes\n  // with values such as passwords, keys, secrets, etc.\n  //\n  // The `password` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database. For example:\n  //\n  //     var bcrypt = require('bcrypt@0.8.5');\n  //     bcrypt.compare(password, dbPasswordHash, function(err, res)) { ... }\n  //\n  // There are three ways this script can finish:\n  // 1. The user's credentials are valid. The returned user profile should be in\n  // the following format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema\n  //     var profile = {\n  //       user_id: ..., // user_id is mandatory\n  //       email: ...,\n  //       [...]\n  //     };\n  //     callback(null, profile);\n  // 2. The user's credentials are invalid\n  //     callback(new WrongUsernameOrPasswordError(email, \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n  //\n  // A list of Node.js modules which can be referenced is available here:\n  //\n  //    https://tehsis.github.io/webtaskio-canirequire/\n  console.log('AYYYYYE');\n\n  const msg =\n    'Please implement the Login script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "create": "function create(user, callback) {\n  // This script should create a user entry in your existing database. It will\n  // be executed when a user attempts to sign up, or when a user is created\n  // through the Auth0 dashboard or API.\n  // When this script has finished executing, the Login script will be\n  // executed immediately afterwards, to verify that the user was created\n  // successfully.\n  //\n  // The user object will always contain the following properties:\n  // * email: the user's email\n  // * password: the password entered by the user, in plain text\n  // * tenant: the name of this Auth0 account\n  // * client_id: the client ID of the application where the user signed up, or\n  //              API key if created through the API or Auth0 dashboard\n  // * connection: the name of this database connection\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully created\n  //     callback(null);\n  // 2. This user already exists in your database\n  //     callback(new ValidationError(\"user_exists\", \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Create script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "delete": "function remove(id, callback) {\n  // This script remove a user from your existing database.\n  // It is executed whenever a user is deleted from the API or Auth0 dashboard.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user was removed successfully:\n  //     callback(null);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Delete script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "verify": "function verify(email, callback) {\n  // This script should mark the current user's email address as verified in\n  // your database.\n  // It is executed whenever a user clicks the verification link sent by email.\n  // These emails can be customized at https://manage.auth0.com/#/emails.\n  // It is safe to assume that the user's email already exists in your database,\n  // because verification emails, if enabled, are sent immediately after a\n  // successful signup.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user's email was verified successfully\n  //     callback(null, true);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the verification link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Verify script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "get_user": "function getByEmail(email, callback) {\n  // This script should retrieve a user profile from your existing database,\n  // without authenticating the user.\n  // It is used to check if a user exists before executing flows that do not\n  // require authentication (signup and password reset).\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully found. The profile should be in the following\n  // format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema.\n  //     callback(null, profile);\n  // 2. A user was not found\n  //     callback(null);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg =\n    'Please implement the Get User script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "change_password": "function changePassword(email, newPassword, callback) {\n  // This script should change the password stored for the current user in your\n  // database. It is executed when the user clicks on the confirmation link\n  // after a reset password request.\n  // The content and behavior of password confirmation emails can be customized\n  // here: https://manage.auth0.com/#/emails\n  // The `newPassword` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database.\n  //\n  // There are three ways that this script can finish:\n  // 1. The user's password was updated successfully:\n  //     callback(null, true);\n  // 2. The user's password was not updated:\n  //     callback(null, false);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the confirmation link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg =\n    'Please implement the Change Password script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n"
                        },
                        "disable_signup": false,
                        "passwordPolicy": "low",
                        "passkey_options": {
                            "challenge_ui": "both",
                            "local_enrollment_enabled": true,
                            "progressive_enrollment_enabled": true
                        },
                        "password_history": {
                            "size": 5,
                            "enable": false
                        },
                        "strategy_version": 2,
                        "requires_username": true,
                        "password_dictionary": {
                            "enable": true,
                            "dictionary": []
                        },
                        "authentication_methods": {
                            "passkey": {
                                "enabled": false
                            },
                            "password": {
                                "enabled": true
                            }
                        },
                        "brute_force_protection": true,
                        "password_no_personal_info": {
                            "enable": true
                        },
                        "password_complexity_options": {
                            "min_length": 8
                        },
                        "enabledDatabaseCustomization": true
                    },
                    "strategy": "auth0",
                    "name": "boo-baz-db-connection-test",
                    "is_domain_connection": false,
                    "realms": [
                        "boo-baz-db-connection-test"
                    ],
                    "enabled_clients": [
                        "4mEZRv7D0zLfbSSWbsibdwaoYIVlRP0M",
                        "ltna78HqWdPRiEHoLy119Dfs1iRMyR1w"
                    ]
                },
                {
                    "id": "con_hvEjcU2lcs9383To",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "import_mode": false,
                        "configuration": {},
                        "customScripts": {
                            "login": "function login(email, password, callback) {\n  // This script should authenticate a user against the credentials stored in\n  // your database.\n  // It is executed when a user attempts to log in or immediately after signing\n  // up (as a verification that the user was successfully signed up).\n  //\n  // Everything returned by this script will be set as part of the user profile\n  // and will be visible by any of the tenant admins. Avoid adding attributes\n  // with values such as passwords, keys, secrets, etc.\n  //\n  // The `password` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database. For example:\n  //\n  //     var bcrypt = require('bcrypt@0.8.5');\n  //     bcrypt.compare(password, dbPasswordHash, function(err, res)) { ... }\n  //\n  // There are three ways this script can finish:\n  // 1. The user's credentials are valid. The returned user profile should be in\n  // the following format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema\n  //     var profile = {\n  //       user_id: ..., // user_id is mandatory\n  //       email: ...,\n  //       [...]\n  //     };\n  //     callback(null, profile);\n  // 2. The user's credentials are invalid\n  //     callback(new WrongUsernameOrPasswordError(email, \"my error message\"));\n  //\n  //    Note: Passing no arguments or a falsey first argument to\n  //    `WrongUsernameOrPasswordError` will result in the error being logged as\n  //    an `fu` event (invalid username/email) with an empty string for a user_id.\n  //    Providing a truthy first argument will result in the error being logged\n  //    as an `fp` event (the user exists, but the password is invalid) with a\n  //    user_id value of \"auth0|<first argument>\". See the `Log Event Type Codes`\n  //    documentation for more information about these event types:\n  //    https://auth0.com/docs/deploy-monitor/logs/log-event-type-codes\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n  //\n  // A list of Node.js modules which can be referenced is available here:\n  //\n  //    https://tehsis.github.io/webtaskio-canirequire/\n\n  const msg = 'Please implement the Login script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database/';\n\n  const testURL = \"https://kushal-dev.eu.auth0.com/api\";\n  console.log(\"testURL: \", testURL);\n\n  return callback(new Error(msg));\n}\n",
                            "create": "function create(user, callback) {\n  // This script should create a user entry in your existing database. It will\n  // be executed when a user attempts to sign up, or when a user is created\n  // through the Auth0 dashboard or API.\n  // When this script has finished executing, the Login script will be\n  // executed immediately afterwards, to verify that the user was created\n  // successfully.\n  //\n  // The user object will always contain the following properties:\n  // * email: the user's email\n  // * password: the password entered by the user, in plain text\n  // * tenant: the name of this Auth0 account\n  // * client_id: the client ID of the application where the user signed up, or\n  //              API key if created through the API or Auth0 dashboard\n  // * connection: the name of this database connection\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully created\n  //     callback(null);\n  // 2. This user already exists in your database\n  //     callback(new ValidationError(\"user_exists\", \"my error message\"));\n  // 3. Something went wrong while trying to reach your database\n  //     callback(new Error(\"my error message\"));\n\n  const msg = 'Please implement the Create script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "delete": "function remove(id, callback) {\n  // This script remove a user from your existing database.\n  // It is executed whenever a user is deleted from the API or Auth0 dashboard.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user was removed successfully:\n  //     callback(null);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg = 'Please implement the Delete script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "verify": "function verify(email, callback) {\n  // This script should mark the current user's email address as verified in\n  // your database.\n  // It is executed whenever a user clicks the verification link sent by email.\n  // These emails can be customized at https://manage.auth0.com/#/emails.\n  // It is safe to assume that the user's email already exists in your database,\n  // because verification emails, if enabled, are sent immediately after a\n  // successful signup.\n  //\n  // There are two ways that this script can finish:\n  // 1. The user's email was verified successfully\n  //     callback(null, true);\n  // 2. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the verification link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg = 'Please implement the Verify script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "get_user": "function getByEmail(email, callback) {\n  // This script should retrieve a user profile from your existing database,\n  // without authenticating the user.\n  // It is used to check if a user exists before executing flows that do not\n  // require authentication (signup and password reset).\n  //\n  // There are three ways this script can finish:\n  // 1. A user was successfully found. The profile should be in the following\n  // format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema.\n  //     callback(null, profile);\n  // 2. A user was not found\n  //     callback(null);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n\n  const msg = 'Please implement the Get User script for this database connection ' +\n    'at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n",
                            "change_password": "function changePassword(email, newPassword, callback) {\n  // This script should change the password stored for the current user in your\n  // database. It is executed when the user clicks on the confirmation link\n  // after a reset password request.\n  // The content and behavior of password confirmation emails can be customized\n  // here: https://manage.auth0.com/#/emails\n  // The `newPassword` parameter of this function is in plain text. It must be\n  // hashed/salted to match whatever is stored in your database.\n  //\n  // There are three ways that this script can finish:\n  // 1. The user's password was updated successfully:\n  //     callback(null, true);\n  // 2. The user's password was not updated:\n  //     callback(null, false);\n  // 3. Something went wrong while trying to reach your database:\n  //     callback(new Error(\"my error message\"));\n  //\n  // If an error is returned, it will be passed to the query string of the page\n  // where the user is being redirected to after clicking the confirmation link.\n  // For example, returning `callback(new Error(\"error\"))` and redirecting to\n  // https://example.com would redirect to the following URL:\n  //     https://example.com?email=alice%40example.com&message=error&success=false\n\n  const msg = 'Please implement the Change Password script for this database ' +\n    'connection at https://manage.auth0.com/#/connections/database';\n  return callback(new Error(msg));\n}\n"
                        },
                        "disable_signup": false,
                        "passwordPolicy": "good",
                        "passkey_options": {
                            "challenge_ui": "both",
                            "local_enrollment_enabled": true,
                            "progressive_enrollment_enabled": true
                        },
                        "password_history": {
                            "size": 5,
                            "enable": false
                        },
                        "strategy_version": 2,
                        "requires_username": true,
                        "password_dictionary": {
                            "enable": false,
                            "dictionary": []
                        },
                        "authentication_methods": {
                            "passkey": {
                                "enabled": false
                            },
                            "password": {
                                "enabled": true
                            }
                        },
                        "brute_force_protection": true,
                        "password_no_personal_info": {
                            "enable": false
                        },
                        "password_complexity_options": {
                            "min_length": 8
                        },
                        "enabledDatabaseCustomization": true
                    },
                    "strategy": "auth0",
                    "name": "DB-connection-Two",
                    "is_domain_connection": false,
                    "realms": [
                        "DB-connection-Two"
                    ],
                    "enabled_clients": []
                },
                {
                    "id": "con_mqMWaGAUUOvPX3Ej",
                    "options": {
                        "email": true,
                        "scope": [
                            "email",
                            "profile"
                        ],
                        "profile": true
                    },
                    "strategy": "google-oauth2",
                    "name": "google-oauth2",
                    "is_domain_connection": false,
                    "realms": [
                        "google-oauth2"
                    ],
                    "enabled_clients": [
                        "AF2fEsiqxQ0uGNdrs8J26ibOnmXs3jEX",
                        "sVMh2iWlCw44yRUt88rEO5cnDA6pvm48"
                    ]
                },
                {
                    "id": "con_iYlZ1DESGzYFLzgc",
                    "options": {
                        "type": "back_channel",
                        "scope": "openid profile email",
                        "domain": "domain.okta.com",
                        "issuer": "https://domain.okta.com",
                        "jwks_uri": "https://domain.okta.com/oauth2/v1/keys",
                        "client_id": "qwqwqwqw",
                        "attribute_map": {
                            "mapping_mode": "basic_profile"
                        },
                        "client_secret": "[REDACTED]",
                        "oidc_metadata": {
                            "issuer": "https://domain.okta.com",
                            "jwks_uri": "https://domain.okta.com/oauth2/v1/keys",
                            "token_endpoint": "https://domain.okta.com/oauth2/v1/token",
                            "claims_supported": [
                                "iss",
                                "ver",
                                "sub",
                                "aud",
                                "iat",
                                "exp",
                                "jti",
                                "auth_time",
                                "amr",
                                "idp",
                                "nonce",
                                "name",
                                "nickname",
                                "preferred_username",
                                "given_name",
                                "middle_name",
                                "family_name",
                                "email",
                                "email_verified",
                                "profile",
                                "zoneinfo",
                                "locale",
                                "address",
                                "phone_number",
                                "picture",
                                "website",
                                "gender",
                                "birthdate",
                                "updated_at",
                                "at_hash",
                                "c_hash"
                            ],
                            "scopes_supported": [
                                "openid",
                                "email",
                                "profile",
                                "address",
                                "phone",
                                "offline_access",
                                "groups"
                            ],
                            "userinfo_endpoint": "https://domain.okta.com/oauth2/v1/userinfo",
                            "revocation_endpoint": "https://domain.okta.com/oauth2/v1/revoke",
                            "end_session_endpoint": "https://domain.okta.com/oauth2/v1/logout",
                            "grant_types_supported": [
                                "authorization_code",
                                "implicit",
                                "refresh_token",
                                "password",
                                "urn:ietf:params:oauth:grant-type:device_code"
                            ],
                            "registration_endpoint": "https://domain.okta.com/oauth2/v1/clients",
                            "authorization_endpoint": "https://domain.okta.com/oauth2/v1/authorize",
                            "introspection_endpoint": "https://domain.okta.com/oauth2/v1/introspect",
                            "subject_types_supported": [
                                "public"
                            ],
                            "response_modes_supported": [
                                "query",
                                "fragment",
                                "form_post",
                                "okta_post_message"
                            ],
                            "response_types_supported": [
                                "code",
                                "id_token",
                                "code id_token",
                                "code token",
                                "id_token token",
                                "code id_token token"
                            ],
                            "claims_parameter_supported": false,
                            "request_parameter_supported": true,
                            "device_authorization_endpoint": "https://domain.okta.com/oauth2/v1/device/authorize",
                            "request_uri_parameter_supported": false,
                            "code_challenge_methods_supported": [
                                "S256"
                            ],
                            "require_request_uri_registration": false,
                            "dpop_signing_alg_values_supported": [
                                "RS256",
                                "RS384",
                                "RS512",
                                "ES256",
                                "ES384",
                                "ES512"
                            ],
                            "id_token_signing_alg_values_supported": [
                                "RS256"
                            ],
                            "token_endpoint_auth_methods_supported": [
                                "client_secret_basic",
                                "client_secret_post",
                                "client_secret_jwt",
                                "private_key_jwt",
                                "none"
                            ],
                            "revocation_endpoint_auth_methods_supported": [
                                "client_secret_basic",
                                "client_secret_post",
                                "client_secret_jwt",
                                "private_key_jwt",
                                "none"
                            ],
                            "request_object_signing_alg_values_supported": [
                                "HS256",
                                "HS384",
                                "HS512",
                                "RS256",
                                "RS384",
                                "RS512",
                                "ES256",
                                "ES384",
                                "ES512"
                            ],
                            "introspection_endpoint_auth_methods_supported": [
                                "client_secret_basic",
                                "client_secret_post",
                                "client_secret_jwt",
                                "private_key_jwt",
                                "none"
                            ]
                        },
                        "schema_version": "oidc-V4",
                        "token_endpoint": "https://domain.okta.com/oauth2/v1/token",
                        "userinfo_endpoint": "https://domain.okta.com/oauth2/v1/userinfo",
                        "connection_settings": {
                            "pkce": "auto"
                        },
                        "authorization_endpoint": "https://domain.okta.com/oauth2/v1/authorize"
                    },
                    "strategy": "okta",
                    "name": "test-scim-con",
                    "is_domain_connection": false,
                    "show_as_button": false,
                    "display_name": "test-scim-con",
                    "realms": [
                        "test-scim-con"
                    ],
                    "enabled_clients": []
                },
                {
                    "id": "con_0wl0dLTgEBQTMRrK",
                    "options": {
                        "mfa": {
                            "active": true,
                            "return_enroll_settings": true
                        },
                        "passwordPolicy": "good",
                        "passkey_options": {
                            "challenge_ui": "both",
                            "local_enrollment_enabled": true,
                            "progressive_enrollment_enabled": true
                        },
                        "strategy_version": 2,
                        "authentication_methods": {
                            "passkey": {
                                "enabled": false
                            },
                            "password": {
                                "enabled": true
                            }
                        },
                        "brute_force_protection": true
                    },
                    "strategy": "auth0",
                    "name": "Username-Password-Authentication",
                    "is_domain_connection": false,
                    "realms": [
                        "Username-Password-Authentication"
                    ],
                    "enabled_clients": [
                        "sVMh2iWlCw44yRUt88rEO5cnDA6pvm48",
                        "AF2fEsiqxQ0uGNdrs8J26ibOnmXs3jEX"
                    ]
                }
            ]
        },
        "rawHeaders": [],
        "responseIsBinary": false
    },
    {
        "scope": "https://deploy-cli-dev.eu.auth0.com:443",
        "method": "PATCH",
        "path": "/api/v2/tenants/settings",
        "body": {
            "enabled_locales": [
                "en"
            ],
            "flags": {
                "allow_legacy_delegation_grant_types": true,
                "allow_legacy_ro_grant_types": true,
                "revoke_refresh_token_grant": false,
                "disable_clickjack_protection_headers": false
            }
        },
        "status": 200,
        "response": {
            "change_password": {
                "enabled": true,
                "html": "<html>Change Password</html>\n"
            },
            "enabled_locales": [
                "en"
            ],
            "error_page": {
                "html": "<html>Error Page</html>\n",
                "show_log_link": false,
                "url": "https://mycompany.org/error"
            },
            "flags": {
                "allow_changing_enable_sso": false,
                "allow_legacy_delegation_grant_types": true,
                "allow_legacy_ro_grant_types": true,
                "cannot_change_enforce_client_authentication_on_passwordless_start": true,
                "disable_impersonation": true,
                "enable_dynamic_client_registration": true,
                "enable_sso": true,
                "enforce_client_authentication_on_passwordless_start": true,
                "new_universal_login_experience_enabled": true,
                "universal_login": true,
                "revoke_refresh_token_grant": false,
                "dashboard_new_onboarding": false,
                "mfa_show_factor_list_on_enrollment": false,
                "disable_clickjack_protection_headers": false
            },
            "guardian_mfa_page": {
                "enabled": true,
                "html": "<html>MFA</html>\n"
            },
            "picture_url": "https://cdn.auth0.com/manhattan/versions/1.3935.0/assets/badge.png",
            "sandbox_version": "18",
            "oidc_logout": {
                "rp_logout_end_session_endpoint_discovery": true
            },
            "universal_login": {
                "colors": {
                    "page_background": "#000000",
                    "primary": "#5ce4ff"
                },
                "is_custom_theme_set": true,
                "is_custom_template_set": true,
                "identifier_first": true
            }
        },
        "rawHeaders": [],
        "responseIsBinary": false
    }
]
